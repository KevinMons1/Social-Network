[{"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\index.js":"1","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\themeReducer.js":"2","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\zIndexReducer.js":"3","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\reportWebVitals.js":"4","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\userDataReducer.js":"5","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\App.js":"6","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Index.js":"7","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\Index.js":"8","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\Index.js":"9","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Loader.js":"10","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Error.js":"11","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Signup.js":"12","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Live.js":"13","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\Index.js":"14","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\Connected.js":"15","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\Header.js":"16","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\PasswordForget.js":"17","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Login.js":"18","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\MainAccount.js":"19","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\MainChat.js":"20","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\MainGaming.js":"21","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Assets\\fontawesome.js":"22","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\ChatDiv.js":"23","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\ChatEmpty.js":"24","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\UserCard.js":"25","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Api.js":"26","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\RemoveFriend.js":"27","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\NewPubliBox.js":"28","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCardLoader.js":"29","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\Message.js":"30","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCard.js":"31","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\ModifyAccount.js":"32","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\StoryCard.js":"33","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\StreamCard.js":"34","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\AccountLoader.js":"35","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationDelete.js":"36","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Gifs.js":"37","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\SuggestFriendCard.js":"38","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\Index.js":"39","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\MainGallery.js":"40","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\Index.js":"41","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\Index.js":"42","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\MainFriends.js":"43","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\MainAbout.js":"44","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Video.js":"45","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\Notification.js":"46","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\NotificationCard.js":"47","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Index.js":"48","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\MainPublication.js":"49","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\dataHomeReducer.js":"50","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\FullFile.js":"51","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\fullFileReducer.js":"52","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\SearchUsers.js":"53","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\ProtectedRoute.js":"54","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Auth.js":"55","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\MainHome.js":"56"},{"size":920,"mtime":1617699219241,"results":"57","hashOfConfig":"58"},{"size":253,"mtime":1609689546345,"results":"59","hashOfConfig":"58"},{"size":345,"mtime":1614605527440,"results":"60","hashOfConfig":"58"},{"size":362,"mtime":499162500000,"results":"61","hashOfConfig":"58"},{"size":389,"mtime":1615311926908,"results":"62","hashOfConfig":"58"},{"size":4746,"mtime":1618560983579,"results":"63","hashOfConfig":"58"},{"size":287,"mtime":1618046285246,"results":"64","hashOfConfig":"58"},{"size":1046,"mtime":1618046233791,"results":"65","hashOfConfig":"58"},{"size":325,"mtime":1618045932980,"results":"66","hashOfConfig":"58"},{"size":587,"mtime":1613562962346,"results":"67","hashOfConfig":"58"},{"size":636,"mtime":1618046631740,"results":"68","hashOfConfig":"58"},{"size":5325,"mtime":1618567168794,"results":"69","hashOfConfig":"58"},{"size":1426,"mtime":1614423150275,"results":"70","hashOfConfig":"58"},{"size":478,"mtime":1618561088966,"results":"71","hashOfConfig":"58"},{"size":8366,"mtime":1618560583524,"results":"72","hashOfConfig":"58"},{"size":6003,"mtime":1618569594561,"results":"73","hashOfConfig":"58"},{"size":1295,"mtime":1610908278238,"results":"74","hashOfConfig":"58"},{"size":3337,"mtime":1618053578023,"results":"75","hashOfConfig":"58"},{"size":11025,"mtime":1617464027802,"results":"76","hashOfConfig":"58"},{"size":401,"mtime":1615279961217,"results":"77","hashOfConfig":"58"},{"size":4994,"mtime":1614423157444,"results":"78","hashOfConfig":"58"},{"size":772,"mtime":1617792507527,"results":"79","hashOfConfig":"58"},{"size":8403,"mtime":1618560740976,"results":"80","hashOfConfig":"58"},{"size":519,"mtime":1615279429993,"results":"81","hashOfConfig":"58"},{"size":1972,"mtime":1618560554637,"results":"82","hashOfConfig":"58"},{"size":546,"mtime":1617294029444,"results":"83","hashOfConfig":"58"},{"size":2301,"mtime":1617444116086,"results":"84","hashOfConfig":"58"},{"size":9831,"mtime":1615829251954,"results":"85","hashOfConfig":"58"},{"size":1357,"mtime":1614077360624,"results":"86","hashOfConfig":"58"},{"size":1432,"mtime":1615796713765,"results":"87","hashOfConfig":"58"},{"size":8840,"mtime":1618571448947,"results":"88","hashOfConfig":"58"},{"size":10280,"mtime":1615828726401,"results":"89","hashOfConfig":"58"},{"size":578,"mtime":1611394752841,"results":"90","hashOfConfig":"58"},{"size":1872,"mtime":1617184445930,"results":"91","hashOfConfig":"58"},{"size":2382,"mtime":1613666934268,"results":"92","hashOfConfig":"58"},{"size":1891,"mtime":1614959342211,"results":"93","hashOfConfig":"58"},{"size":1119,"mtime":1615736624500,"results":"94","hashOfConfig":"58"},{"size":2097,"mtime":1618307260169,"results":"95","hashOfConfig":"58"},{"size":311,"mtime":1618046266941,"results":"96","hashOfConfig":"58"},{"size":4795,"mtime":1617807404548,"results":"97","hashOfConfig":"58"},{"size":244,"mtime":1617181268623,"results":"98","hashOfConfig":"58"},{"size":311,"mtime":1618046247884,"results":"99","hashOfConfig":"58"},{"size":2997,"mtime":1617967048109,"results":"100","hashOfConfig":"58"},{"size":162,"mtime":1617181296625,"results":"101","hashOfConfig":"58"},{"size":4373,"mtime":1617711778988,"results":"102","hashOfConfig":"58"},{"size":3648,"mtime":1618570778069,"results":"103","hashOfConfig":"58"},{"size":2688,"mtime":1618571109071,"results":"104","hashOfConfig":"58"},{"size":331,"mtime":1618046317039,"results":"105","hashOfConfig":"58"},{"size":9571,"mtime":1617812110573,"results":"106","hashOfConfig":"58"},{"size":437,"mtime":1617630701166,"results":"107","hashOfConfig":"58"},{"size":1826,"mtime":1617710750342,"results":"108","hashOfConfig":"58"},{"size":330,"mtime":1617700054804,"results":"109","hashOfConfig":"58"},{"size":1467,"mtime":1618569718145,"results":"110","hashOfConfig":"58"},{"size":437,"mtime":1618076924851,"results":"111","hashOfConfig":"58"},{"size":2328,"mtime":1618053302466,"results":"112","hashOfConfig":"58"},{"size":8809,"mtime":1618568635570,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"rdbbsr",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\index.js",[],["236","237"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\themeReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\zIndexReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\reportWebVitals.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\userDataReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\App.js",["238"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\Index.js",["239","240"],"import React, {useState, useEffect} from 'react'\r\nimport {withRouter, useHistory, useParams} from \"react-router-dom\"\r\nimport \"../../Styles/chat.css\"\r\n\r\n//Components\r\nimport MainChat from \"./MainChat\"\r\nimport Connected from \"../Connected/Connected\"\r\nimport ChatEmpty from \"./ChatEmpty\"\r\n\r\nexport default withRouter(function Index() {\r\n\r\n    const [friendClick, setFriendClick] = useState(false)\r\n    const [data, setData] = useState(null)\r\n    const { slug } = useParams()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (slug.toString() != \"empty\") {\r\n            setFriendClick(true)\r\n            setData(history.location.state)\r\n        }\r\n    }, [])\r\n\r\n    const handleFriendClick = (data) => {\r\n        history.push({pathname: `/chat/${data.userId}`, state: data})\r\n    }\r\n\r\n    return (\r\n        <section className=\"chat\">\r\n            <Connected choiceCss={false} friendClick={(data) => handleFriendClick(data)} />\r\n            {friendClick ? <MainChat data={data} /> : <ChatEmpty />}\r\n        </section>\r\n    )\r\n})\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Loader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Error.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Signup.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Live.js",["241"],"import React, {useEffect} from 'react'\r\nimport \"../../Styles/gaming.css\"\r\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\"\r\nimport {Link, useParams} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\n\r\nexport default function Live() {\r\n\r\n    let {slug} = useParams()\r\n    const dispatch = useDispatch()\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n    }, [])\r\n\r\n    return (\r\n        <section className=\"gaming\">\r\n            <div className={themeReducer? \"mainLive-dark\" : \"mainLive\"}>\r\n                <div className=\"live-stream\">\r\n                    <ReactTwitchEmbedVideo \r\n                        width=\"100%\" \r\n                        height=\"100%\" \r\n                        channel={slug} \r\n                        theme={themeReducer? \"dark\" : \"light\"} \r\n                    />\r\n                </div>\r\n                <div className=\"live-back\">\r\n                    <Link to=\"/gaming\">\r\n                        <FontAwesomeIcon className={themeReducer? \"chevron-icon-dark\" : \"chevron-icon\"} icon=\"chevron-left\" />\r\n                    </Link>\r\n                </div>                \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\Connected.js",["242"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\Header.js",["243"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\PasswordForget.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Login.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\MainAccount.js",["244","245"],"import React, {useState, useEffect} from 'react'\r\nimport \"../../Styles/account.css\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {useParams, useLocation, useHistory, Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport {socket} from \"../../Api\"\r\nimport NewPubliBox from '../Publication/NewPubliBox'\r\nimport PublicationCard from '../Publication/PublicationCard'\r\nimport PublicationComments from '../Publication/MainPublication'\r\nimport ModifyAccount from \"./ModifyAccount\"\r\nimport AccountLoader from \"./AccountLoader\"\r\nimport RemoveFriend from \"./RemoveFriend\"\r\n\r\nexport default function MainAccount() {\r\n    \r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const {slug} = useParams()\r\n    const dispatch = useDispatch()\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const [load, setLoad] = useState(false)\r\n    const [openNewPubli, setOpenNewPubli] = useState(false)\r\n    const [openModifyAccount, setOpenModifyAccount] = useState(false)\r\n    const [openRemoveFriend, setOpenRemoveFriend] = useState(false)\r\n    const [dataUser, setDataUser] = useState(null)\r\n    const [dataPublications, setDataPublications] = useState(null)\r\n    const [isEmpty, setIsEmpty] = useState(true)\r\n    const [isFriend, setIsFriend] = useState(false)\r\n    const [waiting, setWaiting] = useState(false)\r\n\r\n    useEffect(() => {\r\n        // Get informations for account\r\n        setLoad(false)\r\n        const id = slug\r\n\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n\r\n        const fetchDataAccount = async () => {\r\n            await axios.get(`http://localhost:3001/api/user/account/informations/${id}`)\r\n                .then(res => {\r\n                    if (res.data.alert) {\r\n                        return history.push({pathname: '/error404'})\r\n                    } else {\r\n                        setDataUser(res.data.userData)\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n                \r\n            await axios.get(`http://localhost:3001/api/publications/account/${id}`)\r\n            .then(res => {\r\n                if (res.data.length === 0) {\r\n                    setIsEmpty(true)\r\n                } else {\r\n                    setDataPublications(res.data)\r\n                    setIsEmpty(false)\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n            \r\n            await axios.post(`http://localhost:3001/api/user/account/isFriend/${id}`, {userId: userDataReducer.userId})\r\n                .then(res => {\r\n                    setIsFriend(res.data)\r\n                })\r\n                .catch(err => console.log(err))\r\n            setLoad(true)\r\n        }\r\n        fetchDataAccount()\r\n    }, [location])\r\n\r\n    const handleOpenModifyAccount = () => {\r\n        setOpenModifyAccount(!openModifyAccount)\r\n    }\r\n\r\n    const handleDeleteFriend = () => {\r\n        setOpenRemoveFriend(false)\r\n        setIsFriend(false)\r\n    }\r\n\r\n    const handleAddFriend = () => {\r\n        setWaiting(true)\r\n        axios.post(\"http://localhost:3001/api/notifications/add\", {\r\n            receiver : slug,\r\n            sender: userDataReducer.userId,\r\n            type: \"invitation\"\r\n        })\r\n        socket.emit(\"notification\", {\r\n            receiver: slug,\r\n            sender: {\r\n                user: userDataReducer,\r\n                content: {\r\n                    type: \"invitation\"\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={themeReducer ? \"mainAccount-dark\" : \"mainAccount\"}>\r\n            {load ?\r\n                <div className=\"account-container\">\r\n                    {openNewPubli ? <NewPubliBox /*publi={openNewPubli}*/ setPubli={setOpenNewPubli} />  : null}\r\n                    {openModifyAccount ? <ModifyAccount slug={slug} setClose={setOpenModifyAccount} /> : null}\r\n                    {openRemoveFriend ? <RemoveFriend slug={slug} friendId={dataUser[0].userId} setClose={handleDeleteFriend} /> : null}\r\n\r\n                    <div className={themeReducer ? \"account-top-dark\" : \"account-top\"}>\r\n                        <div className=\"account-bg\">\r\n                            <img className=\"account-bg-img\" src={dataUser[0].bannerImage} alt=\"Your banner frame\"/>\r\n                        </div>\r\n                        <div className=\"account-info\">\r\n                            <div className=\"account-info-top\">\r\n                                <div className={themeReducer ? \"account-info-img-dark\" : \"account-info-img\"}>\r\n                                    <img className=\"img-profile\" src={dataUser[0].profileImage} alt=\"Your profile frame\"/>\r\n                                </div>\r\n                                <div>\r\n                                    <p className={themeReducer ? \"txt-dark\" : null}>{dataUser[0].firstName} {dataUser[0].lastName}</p>\r\n                                </div>\r\n\r\n                            {parseInt(slug) !== userDataReducer.userId\r\n                            ?  isFriend\r\n                                ?   <div className=\"account-action\">\r\n                                        <p className={themeReducer ? \"txt-dark\" : null} onClick={() => setOpenRemoveFriend(true)}>Friend</p>\r\n                                        <FontAwesomeIcon icon=\"user-friends\" className={themeReducer ? \"txt-dark\" : \"edit-icon\"}/>\r\n                                    </div>\r\n                                :  waiting \r\n                                    ?   <div className=\"account-action\">\r\n                                            <p className={themeReducer ? \"txt-dark\" : null}>Waiting...</p>\r\n                                        </div>\r\n                                    :  <div className=\"account-action\">\r\n                                            <p className={themeReducer ? \"txt-dark\" : null} onClick={() => handleAddFriend()}>Add friend</p>\r\n                                            <FontAwesomeIcon icon=\"user-plus\" className={themeReducer ? \"txt-dark\" : \"edit-icon\"}/>\r\n                                        </div>\r\n                            :   <div className=\"account-action\">\r\n                                    <p className={themeReducer ? \"txt-dark\" : null} onClick={() => handleOpenModifyAccount()}>Modify my account</p>\r\n                                    <FontAwesomeIcon icon=\"edit\" className={themeReducer ? \"txt-dark\" : \"edit-icon\"}/>\r\n                                </div>\r\n                            }\r\n\r\n                            </div>\r\n                            <div className=\"account-bottom\">\r\n                                <div className=\"account-icon\">\r\n                                    <div className=\"account-icon-box\">\r\n                                        <FontAwesomeIcon icon=\"heart\" className=\"heart-icon\"/>\r\n                                        <p className={themeReducer ? \"account-icon-nbr-dark\" : \"account-icon-nbr\"}>{dataUser[1].likesTotal}</p>\r\n                                    </div>\r\n                                    <div className=\"account-icon-box\">\r\n                                        <FontAwesomeIcon icon=\"user-friends\" className=\"user-friends-icon\"/>\r\n                                        <p className={themeReducer ? \"account-icon-nbr-dark\" : \"account-icon-nbr\"}>{dataUser[1].friendsTotal}</p>\r\n                                    </div>\r\n                                    <div className=\"account-icon-box\">\r\n                                        <FontAwesomeIcon icon=\"pen\" className=\"pen-icon\"/>\r\n                                        <p className={themeReducer ? \"account-icon-nbr-dark\" : \"account-icon-nbr\"}>{dataUser[1].publicationsTotal}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"account-bio\">\r\n                                    <p className={themeReducer ? \"txt-dark\" : null}>{dataUser[0].bio}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={themeReducer ? \"account-links-dark\" : \"account-links\"}>\r\n                        <div className=\"account-box\">\r\n                            <FontAwesomeIcon className=\"account-links-icon\" icon=\"camera\" />\r\n                            <Link to={{pathname: `/account/${slug}/gallery`}} className={themeReducer ? \"txt-dark account-links-link\" : \"account-links-link\"}>Gallery</Link>\r\n                        </div>\r\n                        <div className=\"account-box\">\r\n                            <FontAwesomeIcon className=\"account-links-icon\" icon=\"user-friends\" />\r\n                            <Link to={`/account/${slug}/friends`} className={themeReducer ? \"txt-dark account-links-link\" : \"account-links-link\"}>Friends</Link>\r\n                        </div>\r\n                        <div className=\"account-box\">\r\n                            <FontAwesomeIcon className=\"account-links-icon\" icon=\"address-card\" />\r\n                            <Link to={`/account/${slug}/about`} className={themeReducer ? \"txt-dark account-links-link\" : \"account-links-link\"}>About</Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"account-publi\">\r\n                        {parseInt(slug) !== userDataReducer.userId\r\n                        ? null\r\n                        :   <div className=\"new-publi\">\r\n                                <div className=\"write-publi\" onClick={() => setOpenNewPubli(true)}>\r\n                                    <FontAwesomeIcon className={themeReducer ? \"icon-new-publi txt-dark\" : \"icon-new-publi\"} icon=\"comments\" />\r\n                                    <div className=\"input-new-publi\" type=\"text\">\r\n                                        <p className={themeReducer ? \"write-publi-placeholder txt-dark\" : \"write-publi-placeholder\"}>What do you mean ?</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    {isEmpty\r\n                    ?   <div className=\"account-empty\">\r\n                            <p className={themeReducer ? \"txt-dark\" : null}>This account seems very empty to me ...</p>\r\n                        </div>\r\n                    : dataPublications.map((item, index) => {\r\n                        return (\r\n                            <div key={index} className=\"box-publi\">\r\n                                <PublicationCard data={item} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            : <AccountLoader />}\r\n        </div>\r\n    )\r\n}","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\MainChat.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\MainGaming.js",["246"],"import React, {useState, useEffect} from 'react'\r\nimport \"../../Styles/gaming.css\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {apiTwitch} from \"../../Api\"\r\nimport StreamCard from \"./StreamCard\"\r\nimport PublicationCardLoader from \"../Publication/PublicationCardLoader\"\r\n\r\nexport default function MainGaming() {\r\n\r\n    const dispatch = useDispatch()\r\n    const [streams, setStreams] = useState([])\r\n    const [getApi, setGetApi] = useState([])\r\n    const [load, setLoad] = useState(false)\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    // Take all informations for modify each url with good params\r\n    useEffect(() => {\r\n\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n\r\n        const fetchData = async () => {\r\n            const res = await apiTwitch.get('https://api.twitch.tv/helix/streams?first=100')\r\n            let dataArray = res.data.data\r\n            setGetApi(dataArray)\r\n\r\n            let gameIDs = dataArray.map(stream => {\r\n                return stream.game_id\r\n            })\r\n\r\n            let userIDs = dataArray.map(stream => {\r\n                return stream.user_id\r\n            })\r\n\r\n            // Create URL\r\n            let urlGames = \"https://api.twitch.tv/helix/games?\"\r\n            let urlUsers = \"https://api.twitch.tv/helix/users?\"\r\n\r\n            let queryParamsGame = \"\"\r\n            let queryParamsUser = \"\"\r\n\r\n            gameIDs.map(id => {\r\n                return (queryParamsGame = queryParamsGame + `id=${id}&`)\r\n            })\r\n\r\n            userIDs.map(id => {\r\n                return (queryParamsUser = queryParamsUser + `id=${id}&`)\r\n            })\r\n\r\n            let urlFinalGames = urlGames + queryParamsGame\r\n            let urlFinalUsers = urlUsers + queryParamsUser\r\n\r\n            // Call URL\r\n            let gamesCall = await apiTwitch.get(urlFinalGames)\r\n            let usersCall = await apiTwitch.get(urlFinalUsers)\r\n\r\n            let gamesCallArray = gamesCall.data.data\r\n            let usersCallArray = usersCall.data.data\r\n\r\n            let newUrl = \"\"\r\n\r\n            // Array Final\r\n            let finalArray = dataArray.map(stream => {\r\n                stream.gameName = \"\"\r\n                stream.login = \"\"\r\n                stream.channelImg = \"\"\r\n\r\n                newUrl = stream.thumbnail_url\r\n                .replace('{width}', '480')\r\n                .replace('{height}', '270')\r\n\r\n                stream.streamImg = newUrl\r\n\r\n                gamesCallArray.forEach(name => {\r\n                    usersCallArray.forEach(user => {\r\n                        if (stream.user_id === user.id && stream.game_id === name.id) {\r\n                            stream.gameName = name.name\r\n                            stream.channelImg = user.profile_image_url\r\n                            stream.login = user.login\r\n                        }\r\n                    })\r\n                })\r\n\r\n                return stream\r\n            })\r\n            setStreams(finalArray)\r\n            setLoad(true)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const handleLanguage = choice => {\r\n        let newDataArray = [];\r\n\r\n        //Sort by lang\r\n        if (choice !== \"all\") {\r\n            for (let i = 0; i < getApi.length; i++) {\r\n                if (getApi[i].language === choice) {\r\n                    newDataArray.push(getApi[i])\r\n                }\r\n            }\r\n        } else return setStreams(getApi)\r\n\r\n        return setStreams(newDataArray)\r\n    }\r\n    \r\n    return (\r\n        <div className={themeReducer ? \"mainGaming-dark\" : \"mainGaming\"}>\r\n\r\n            <div className=\"gaming-lang\">\r\n                <div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"all\")}>\r\n                    <p>ALL</p>\r\n                </div>\r\n                <div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"en\")}>\r\n                    <p>EN</p>\r\n                </div><div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"fr\")}>\r\n                    <p>FR</p>\r\n                </div>\r\n            </div>\r\n            {load \r\n            ? streams.map((stream, index) => {\r\n                return (\r\n                    <StreamCard \r\n                        login={stream.login}\r\n                        name={stream.user_name}\r\n                        channelImg={stream.channelImg} \r\n                        streamImg={stream.streamImg}\r\n                        viewerCount={stream.viewer_count}\r\n                        gamePlay={stream.gameName} \r\n                        key={index} \r\n                    />\r\n                )\r\n            })  \r\n            : <div className=\"streamCardLoader\">\r\n                <PublicationCardLoader />\r\n                <PublicationCardLoader />\r\n                <PublicationCardLoader />\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Assets\\fontawesome.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\ChatDiv.js",["247"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\ChatEmpty.js",["248"],"import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\n\r\nexport default function ChatEmpty() {\r\n\r\n    const dispatch = useDispatch();\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: true\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={themeReducer ? \"chatEmpty-dark\" : \"chatEmpty\"}>\r\n            <p>Click on a friend</p>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\UserCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Api.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\RemoveFriend.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\NewPubliBox.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCardLoader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\Message.js",["249","250","251","252","253"],"import React from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport moment from \"moment\"\r\n\r\nexport default function Message({data, isMe}) {\r\n\r\n    const isImage = data.type === \"image\" ? true : null\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const smallClass = isMe ? themeReducer ? 'txt-dark msg-hour msg-hour-right' : \"msg-hour msg-hour-right\" : themeReducer ? 'txt-dark msg-hour msg-hour-left' : 'msg-hour msg-hour-left'\r\n    const divClass = isImage === \"image\" ? isMe ? \"msg-box-img-right\" : \"msg-box-img\" : isMe ? \"msg msg-right\" : \"msg\"\r\n\r\n    const handleType = () => {\r\n        switch (data.type) {\r\n            case \"text\":\r\n                return <p className=\"msg-txt\">{data.text}</p>\r\n                break;\r\n\r\n            case \"image\":\r\n                return <img className=\"msg-img\" src={data.text} alt=\"frame message\"/>\r\n                break;\r\n\r\n            case \"gif\":\r\n                return <iframe className=\"msg-gif\" src={data.text} alt=\"Gif\"></iframe>\r\n                break;\r\n\r\n            default:\r\n                return null\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={isMe ? \"msg-box msg-right-box\" : \"msg-box\"}>\r\n                <div className={divClass}>\r\n                    <small className={smallClass}>{moment(data.date).fromNow()}</small>\r\n                    { handleType() }\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCard.js",["254"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\ModifyAccount.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\StoryCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\StreamCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\AccountLoader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationDelete.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Gifs.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\SuggestFriendCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\MainGallery.js",["255","256","257"],"import React, {useState, useEffect} from 'react'\r\nimport {useLocation, useHistory} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport PublicationComments from '../Publication/MainPublication'\r\nimport Video from \"../Publication/Video\"\r\n\r\nexport default function MainGallery() {  \r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [load, setLoad] = useState(false)\r\n    const [isEmpty, setIsEmpty] = useState(false)\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => { \r\n        // Get informations for account\r\n        let path, idPath\r\n        setLoad(false)\r\n        setIsEmpty(true)\r\n        \r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n        })\r\n\r\n        // Get userId\r\n        path = location.pathname\r\n        idPath = path.substr(9)\r\n        idPath = idPath.split('/')\r\n\r\n        const fetchDataAccount = async () => {\r\n                await axios.get(`http://localhost:3001/api/publications/account/${idPath[0]}`)\r\n                    .then(res => {\r\n                        if (res.data.length === 0) {\r\n                        } else {\r\n                            setIsEmpty(false)\r\n                            setData(res.data)\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err))\r\n                }\r\n                fetchDataAccount()\r\n                setLoad(true)\r\n        }, [location])\r\n\r\n        \r\n    const handleBack = () => {\r\n        let path = location.pathname\r\n        let lastPath = path.split('/gallery')\r\n        history.push(lastPath[0])\r\n    }\r\n\r\n    const handleClickPublication = item => {\r\n        let dataGallery = []\r\n        let dataGalleryIndex\r\n\r\n        // To seek for slider\r\n        data.forEach(publication => {\r\n            if (publication.type === item.type) dataGallery.push(publication)\r\n        })\r\n        // To search index of this publication\r\n        dataGalleryIndex = dataGallery.findIndex(publication => publication.publicationId === item.publicationId)\r\n\r\n        history.push(`/publication/${item.publicationId}`, {\r\n            data: item,\r\n            path: location.pathname,\r\n            isGallery: true,\r\n            dataGallery,\r\n            dataGalleryIndex\r\n        })\r\n    }\r\n\r\n    return ( load ?\r\n        <div className={themeReducer ? \"mainGallery-dark\" : \"mainGallery\"}>         \r\n            <FontAwesomeIcon onClick={() => handleBack()} icon=\"arrow-left\" className={themeReducer ? \"txt-dark gallery-icon\" : \"gallery-icon\"}/>\r\n            <div className=\"gallery-container\">\r\n                <h2 className={themeReducer ? \"txt-dark\" : null}>Images</h2>\r\n                <div className=\"gallery-content\">\r\n                    {isEmpty \r\n                    ?   <p className=\"gallery-empty\">This gallery seems very empty to me ...</p>\r\n                    :   data.map((item, index) => {\r\n                        return (\r\n                            item.type === \"image\" \r\n                            ?   <div onClick={() => handleClickPublication(item)} key={index} className=\"gallery-img\">\r\n                                    <img className=\"gallery-element\" src={item.publicationFileUrl} alt={`Frame publichsed of this user`} />\r\n                                </div>    \r\n                            : null           \r\n                        )})\r\n                    }\r\n                </div>\r\n            </div>\r\n                <div className=\"gallery-container gallery-container-video\">\r\n                    <h2 className={themeReducer ? \"txt-dark\" : null}>Videos</h2>\r\n                    <div className=\"gallery-content\">                        \r\n                        {isEmpty \r\n                        ?   <p className=\"gallery-empty\">This gallery seems very empty to me ...</p>\r\n                        :   data.map((item, index) => {\r\n                                return (\r\n                                    item.type === \"video\"\r\n                                    ?   <div onClick={() => handleClickPublication(item)} key={index} key={index} className=\"gallery-video\">\r\n                                            <Video clickNo={true} className=\"gallery-element\" data={{publicationFileUrl: item.publicationFileUrl}} />\r\n                                        </div>        \r\n                                    : null     \r\n                            )})\r\n                        }\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    :   <div className=\"mainGallery\"></div>)\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\MainFriends.js",["258"],"import React, {useState, useEffect} from 'react'\r\nimport {useLocation, useHistory} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport UserCard from \"../Connected/UserCard\"\r\n\r\nexport default function MainFriends() {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [load, setLoad] = useState(false)\r\n    const [isEmpty, setIsEmpty] = useState(false)\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => { \r\n        // Get informations for account\r\n        let path, idPath\r\n        setLoad(false)\r\n        setIsEmpty(true)\r\n        \r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n        })\r\n\r\n        // Get userId\r\n        path = location.pathname\r\n        idPath = path.substr(9)\r\n        idPath = idPath.split('/')\r\n\r\n        const fetchDataAccount = async () => {\r\n                await axios.get(`http://localhost:3001/api/user/userFriends/${idPath[0]}`)\r\n                    .then(res => {\r\n                        if (res.data.length === 0) {\r\n                        } else {\r\n                            setIsEmpty(false)\r\n                            setData(res.data)\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err))\r\n                }\r\n                fetchDataAccount()\r\n                setLoad(true)\r\n        }, [location])\r\n\r\n    const handleClickFriend = (friend) => {\r\n        history.push(`/account/${friend.userId}`)\r\n    }\r\n\r\n    const handleClickBack = () => {\r\n        let path = location.pathname\r\n        let lastPath = path.split('/friends')\r\n        history.push(lastPath[0])\r\n    }\r\n\r\n    return ( load ?\r\n        <div className={themeReducer ? \"mainFriends-dark\" : \"mainFriends\"}>\r\n            <FontAwesomeIcon onClick={() => handleClickBack()} icon=\"arrow-left\" className={themeReducer ? \"txt-dark friends-icon\" : \"friends-icon\"}/>\r\n            <div className=\"friends-container\">\r\n                <h2 className={themeReducer ? \"txt-dark\" : null}>Friends</h2>\r\n                <div className=\"friends-content\">\r\n                {isEmpty \r\n                    ?   <p className=\"friends-empty\">This user does not have friends ...</p>\r\n                    :   data.map((item, index) => {\r\n                        return (\r\n                            <div className=\"friend-card\" key={index} index={index} onClick={() => handleClickFriend(item)}>\r\n                                <UserCard tallCard={true} noOpen={true} data={item} />   \r\n                            </div>\r\n                        )})\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    : <div className={themeReducer ? \"mainFriends-dark\" : \"mainFriends\"}></div>)\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\MainAbout.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Video.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\Notification.js",["259"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\NotificationCard.js",["260"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\MainPublication.js",["261"],"import React, {useState, useEffect} from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport {useHistory, useLocation, useParams} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport PublicationCard from \"./PublicationCard\"\r\nimport moment from \"moment\"\r\nimport Loader from \"../Services/Loader\"\r\nimport axios from \"axios\"\r\nimport {socket} from \"../../Api\"\r\n\r\nexport default function MainPublication() {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const { slug } = useParams()\r\n    const [isBack, setIsBack] = useState(false)\r\n    const [data, setData] = useState(null)\r\n    const [load, setLoad] = useState(false)\r\n    const [alertMsg, setAlertMsg] = useState(\"\")\r\n    const [alertCss, setAletCss] = useState(true)\r\n    const [isLeft, setIsLeft] = useState(false)\r\n    const [isRight, setIsRight] = useState(false)\r\n    const [dataComments, setDataComments] = useState([])\r\n    const [dataNewPubli, setDataNewPubli] = useState({\r\n        userId: userDataReducer.userId,\r\n        text: \"\"\r\n    })\r\n    \r\n    useEffect(() => {\r\n        setLoad(false)\r\n        const fetchData = async () => {\r\n            if (typeof location.state === undefined || location.state === false) {\r\n                await axios.get(`http://localhost:3001/api/publications/one/${slug}`)\r\n                    .then(res => {\r\n                        setIsBack(false)\r\n                        setData(res.data[0])\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            } else  {\r\n                // Hide arrow left and arrow right\r\n                if (location.state.isGallery) {\r\n                    const { dataGallery, dataGalleryIndex } = location.state\r\n                    if (dataGalleryIndex === 0) setIsLeft(false)\r\n                    else setIsLeft(true)\r\n                    if (dataGalleryIndex === dataGallery.length - 1) setIsRight(false)\r\n                    else setIsRight(true)                  \r\n                }\r\n                else {\r\n                    setIsLeft(false)\r\n                    setIsRight(false)\r\n                }\r\n                setIsBack(true)\r\n                setData(location.state.data)\r\n            }\r\n            \r\n            await axios.get(`http://localhost:3001/api/publications/comments/${slug}`)\r\n            .then(res => {\r\n                setDataComments(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n            setLoad(true)\r\n        }\r\n        fetchData()\r\n    }, [location])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (dataNewPubli.text.length > 2) {\r\n            axios.post(`http://localhost:3001/api/publications/comments/add/${data.publicationId}`, dataNewPubli)\r\n                .then(res => {\r\n                    setAletCss(false)\r\n                    setAlertMsg(\"Comment published !\")\r\n                    setDataComments([...dataComments, {\r\n                        text: dataNewPubli.text,\r\n                        userId: dataNewPubli.userId,\r\n                        lastName: userDataReducer.lastName,\r\n                        firstName: userDataReducer.firstName,\r\n                        profileImage: userDataReducer.profileImage,\r\n                        date: Date.now()\r\n                    }])\r\n                    axios.post(\"http://localhost:3001/api/notifications/add\", {\r\n                        receiver : data.userId,\r\n                        sender: userDataReducer.userId,\r\n                        type: \"comment\"\r\n                    })\r\n                    socket.emit(\"notification\", {\r\n                        receiver: data.userId,\r\n                        sender: {\r\n                            user: userDataReducer,\r\n                            content: {\r\n                                type: \"comment\"\r\n                            }\r\n                        }\r\n                    })\r\n                })  \r\n                .catch(err => console.log(err))  \r\n        } else {\r\n            setAletCss(true)\r\n            setAlertMsg(\"Your text must contain at least 2 characters !\")\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setDataNewPubli({...dataNewPubli, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const handleClickProfile = userId => {\r\n        history.push(`/account/${userId}`)\r\n    }\r\n\r\n    const handleBack = () => {\r\n        let path = location.state.path\r\n        history.push(path, true)\r\n    }\r\n\r\n    const handleNext = direction => {\r\n        if (typeof location.state.isGallery !== undefined) {       \r\n            const { dataGallery, dataGalleryIndex } = location.state\r\n            const pathGallery = location.state.path\r\n            let newIndex\r\n            let newPublication\r\n            \r\n            if (direction === \"left\" && isLeft) {\r\n                newIndex = dataGalleryIndex - 1\r\n                newPublication = dataGallery[newIndex]\r\n    \r\n                history.push(`/publication/${newPublication.publicationId}`, {\r\n                    data: newPublication,\r\n                    path: pathGallery,\r\n                    isGallery: true,\r\n                    dataGallery,\r\n                    dataGalleryIndex: newIndex\r\n                })\r\n            } else if (direction === \"right\" && isRight) {\r\n                newIndex = dataGalleryIndex + 1\r\n                newPublication = dataGallery[newIndex]\r\n    \r\n                history.push(`/publication/${newPublication.publicationId}`, {\r\n                    data: newPublication,\r\n                    path: pathGallery,\r\n                    isGallery: true,\r\n                    dataGallery,\r\n                    dataGalleryIndex: newIndex\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    window.onkeydown = e => {\r\n        if (e.repeat) return\r\n\r\n        if (e.key === \"ArrowLeft\") handleNext(\"left\")\r\n        else if (e.key === \"ArrowRight\") handleNext(\"right\")\r\n    }\r\n\r\n    return (load ?\r\n        <div className={themeReducer ? \"publi-open-dark\" : \"publi-open\"}>\r\n            <div className=\"publi-icon\">\r\n                {isBack ? <FontAwesomeIcon onClick={() => handleBack()} icon=\"arrow-left\" className={themeReducer ? \"txt-dark gallery-icon\" : \"gallery-icon\"}/> : null}\r\n            </div>\r\n            <div className=\"publi-open-bottom-container\">\r\n                <div className=\"publi-open-top\">\r\n                    {isLeft ? <FontAwesomeIcon onClick={() => handleNext(\"left\")} icon=\"chevron-left\" className={themeReducer ? \"txt-dark gallery-chevron-icon gallery-chevron-icon-left\" : \"gallery-chevron-icon gallery-chevron-icon-left\"}/> : null}\r\n                    <PublicationCard data={data} fullFile={true} />\r\n                    {isRight ? <FontAwesomeIcon onClick={() => handleNext(\"right\")} icon=\"chevron-right\" className={themeReducer ? \"txt-dark gallery-chevron-icon gallery-chevron-icon-right\" : \"gallery-chevron-icon gallery-chevron-icon-right\"}/> : null}\r\n                </div>\r\n\r\n                {dataComments.map((item, index) => {\r\n                    return (\r\n                        <div className={themeReducer ? \"publi-open-bottom-dark\" : \"publi-open-bottom\"} key={index}>\r\n                            <div className=\"publi-open-info-img-box\">\r\n                                <div className=\"publi-open-img\">\r\n                                    <img onClick={() => handleClickProfile(item.userId)} src={item.profileImage} alt=\"Frame profile\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"publi-open-info-txt-box\">\r\n                                <div className=\"publi-open-name\">\r\n                                    <p className={themeReducer ? 'txt-dark' : null}>{item.firstName} {item.lastName}</p>\r\n                                    <small className={themeReducer ? 'txt-dark' : null}>{moment(item.date).fromNow()}</small>\r\n                                </div>\r\n                                <div className=\"publi-open-info\">\r\n                                    <p className={themeReducer ? \"publi-open-txt txt-dark\" : \"publi-open-txt\"}>{item.text}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })} \r\n\r\n                <div className=\"new-publi\">\r\n                    {alertMsg === \"\" \r\n                    ?   null \r\n                    :   <div className={alertCss ? \"alert-danger\" : \"alert-success\"}>\r\n                            <p>{alertMsg}</p>\r\n                        </div>\r\n                    }\r\n                    <form className=\"write-publi\" onSubmit={e => handleSubmit(e)}>\r\n                        <FontAwesomeIcon className={themeReducer ? \"icon-new-publi txt-dark\" : \"icon-new-publi\"} icon=\"comments\" />\r\n                        <div className=\"input-new-publi\" type=\"text\">\r\n                            <textarea className={themeReducer ? \"publi-open-textarea input-dark border-none-dark\" : \"publi-open-textarea\"} placeholder=\"What do you mean ?\" name=\"text\" id=\"text\" onChange={e => handleChange(e)}></textarea>\r\n                        </div>\r\n                        <button className={themeReducer ? \"publi-open-btn btn-dark\" : \"publi-open-btn\"} type=\"submit\">SEND</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n    </div>\r\n    : <Loader />)\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\dataHomeReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\FullFile.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\fullFileReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\SearchUsers.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\ProtectedRoute.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Auth.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\MainHome.js",["262"],{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","severity":1,"message":"268","line":69,"column":6,"nodeType":"269","endLine":69,"endColumn":8,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":18,"column":29,"nodeType":"273","messageId":"274","endLine":18,"endColumn":31},{"ruleId":"267","severity":1,"message":"275","line":22,"column":8,"nodeType":"269","endLine":22,"endColumn":10,"suggestions":"276"},{"ruleId":"267","severity":1,"message":"277","line":20,"column":8,"nodeType":"269","endLine":20,"endColumn":10,"suggestions":"278"},{"ruleId":"267","severity":1,"message":"279","line":100,"column":8,"nodeType":"269","endLine":100,"endColumn":10,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":14,"column":11,"nodeType":"283","messageId":"284","endLine":14,"endColumn":18},{"ruleId":"281","severity":1,"message":"285","line":11,"column":8,"nodeType":"283","messageId":"284","endLine":11,"endColumn":27},{"ruleId":"267","severity":1,"message":"286","line":74,"column":8,"nodeType":"269","endLine":74,"endColumn":18,"suggestions":"287"},{"ruleId":"267","severity":1,"message":"277","line":92,"column":8,"nodeType":"269","endLine":92,"endColumn":10,"suggestions":"288"},{"ruleId":"267","severity":1,"message":"289","line":75,"column":8,"nodeType":"269","endLine":75,"endColumn":14,"suggestions":"290"},{"ruleId":"267","severity":1,"message":"277","line":14,"column":8,"nodeType":"269","endLine":14,"endColumn":10,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":16,"column":17,"nodeType":"294","messageId":"295","endLine":16,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":20,"column":17,"nodeType":"294","messageId":"295","endLine":20,"endColumn":23},{"ruleId":"296","severity":1,"message":"297","line":23,"column":24,"nodeType":"298","endLine":23,"endColumn":78},{"ruleId":"292","severity":1,"message":"293","line":24,"column":17,"nodeType":"294","messageId":"295","endLine":24,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":28,"column":17,"nodeType":"294","messageId":"295","endLine":28,"endColumn":23},{"ruleId":"267","severity":1,"message":"299","line":55,"column":12,"nodeType":"269","endLine":55,"endColumn":14,"suggestions":"300"},{"ruleId":"281","severity":1,"message":"285","line":7,"column":8,"nodeType":"283","messageId":"284","endLine":7,"endColumn":27},{"ruleId":"267","severity":1,"message":"277","line":49,"column":12,"nodeType":"269","endLine":49,"endColumn":22,"suggestions":"301"},{"ruleId":"302","severity":1,"message":"303","line":105,"column":103,"nodeType":"304","endLine":105,"endColumn":114},{"ruleId":"267","severity":1,"message":"277","line":48,"column":12,"nodeType":"269","endLine":48,"endColumn":22,"suggestions":"305"},{"ruleId":"267","severity":1,"message":"306","line":51,"column":8,"nodeType":"269","endLine":51,"endColumn":10,"suggestions":"307"},{"ruleId":"267","severity":1,"message":"308","line":35,"column":8,"nodeType":"269","endLine":35,"endColumn":10,"suggestions":"309"},{"ruleId":"267","severity":1,"message":"310","line":67,"column":8,"nodeType":"269","endLine":67,"endColumn":18,"suggestions":"311"},{"ruleId":"267","severity":1,"message":"312","line":60,"column":12,"nodeType":"269","endLine":60,"endColumn":14,"suggestions":"313"},"no-native-reassign",["314"],"no-negated-in-lhs",["315"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["316"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'history.location.state' and 'slug'. Either include them or remove the dependency array.",["317"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["318"],"React Hook useEffect has missing dependencies: 'sendMyConnectionOnTime' and 'userDataReducer.userId'. Either include them or remove the dependency array.",["319"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'PublicationComments' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'slug', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["320"],["321"],"React Hook useEffect has missing dependencies: 'dispatch', 'fetchRoomId', 'index', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["322"],["323"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'data.hashtag', 'data.publicationId', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["324"],["325"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["326"],"React Hook useEffect has missing dependencies: 'count' and 'userDataReducer.userId'. Either include them or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["327"],"React Hook useEffect has missing dependencies: 'data.content.type' and 'data.content.view'. Either include them or remove the dependency array. If 'setIsView' needs the current value of 'data.content.view', you can also switch to useReducer instead of useState and read 'data.content.view' in the reducer.",["328"],"React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["329"],"React Hook useEffect has missing dependencies: 'dataHomeReducer.countPublication', 'dataHomeReducer.publications', 'dataHomeReducer.scrollTop', 'dataHomeReducer.suggestFirends', 'dispatch', 'getPublications', 'getSuggestFriend', and 'location.state'. Either include them or remove the dependency array.",["330"],"no-global-assign","no-unsafe-negation",{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"335","fix":"341"},{"desc":"342","fix":"343"},{"desc":"335","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"347","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},"Update the dependencies array to be: [dispatch, history, location.pathname]",{"range":"358","text":"359"},"Update the dependencies array to be: [history.location.state, slug]",{"range":"360","text":"361"},"Update the dependencies array to be: [dispatch]",{"range":"362","text":"363"},"Update the dependencies array to be: [sendMyConnectionOnTime, userDataReducer.userId]",{"range":"364","text":"365"},"Update the dependencies array to be: [dispatch, history, location, slug, userDataReducer.userId]",{"range":"366","text":"367"},{"range":"368","text":"363"},"Update the dependencies array to be: [data, dispatch, fetchRoomId, index, userDataReducer.userId]",{"range":"369","text":"370"},{"range":"371","text":"363"},"Update the dependencies array to be: [data.hashtag, data.publicationId, userDataReducer.userId]",{"range":"372","text":"373"},"Update the dependencies array to be: [dispatch, location]",{"range":"374","text":"375"},{"range":"376","text":"375"},"Update the dependencies array to be: [count, userDataReducer.userId]",{"range":"377","text":"378"},"Update the dependencies array to be: [data.content.type, data.content.view]",{"range":"379","text":"380"},"Update the dependencies array to be: [location, slug]",{"range":"381","text":"382"},"Update the dependencies array to be: [dataHomeReducer.countPublication, dataHomeReducer.publications, dataHomeReducer.scrollTop, dataHomeReducer.suggestFirends, dispatch, getPublications, getSuggestFriend, location.state]",{"range":"383","text":"384"},[2821,2823],"[dispatch, history, location.pathname]",[672,674],"[history.location.state, slug]",[635,637],"[dispatch]",[4326,4328],"[sendMyConnectionOnTime, userDataReducer.userId]",[2965,2975],"[dispatch, history, location, slug, userDataReducer.userId]",[3081,3083],[2761,2767],"[data, dispatch, fetchRoomId, index, userDataReducer.userId]",[361,363],[2385,2387],"[data.hashtag, data.publicationId, userDataReducer.userId]",[1691,1701],"[dispatch, location]",[1623,1633],[2000,2002],"[count, userDataReducer.userId]",[1057,1059],"[data.content.type, data.content.view]",[2698,2708],"[location, slug]",[2384,2386],"[dataHomeReducer.countPublication, dataHomeReducer.publications, dataHomeReducer.scrollTop, dataHomeReducer.suggestFirends, dispatch, getPublications, getSuggestFriend, location.state]"]