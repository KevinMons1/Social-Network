[{"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\index.js":"1","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\themeReducer.js":"2","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\zIndexReducer.js":"3","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\reportWebVitals.js":"4","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\userDataReducer.js":"5","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\App.js":"6","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Index.js":"7","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\Index.js":"8","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\Index.js":"9","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Loader.js":"10","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Error.js":"11","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Signup.js":"12","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Live.js":"13","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\Index.js":"14","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\Connected.js":"15","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\Header.js":"16","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\PasswordForget.js":"17","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Login.js":"18","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\MainAccount.js":"19","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\MainChat.js":"20","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\MainGaming.js":"21","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Assets\\fontawesome.js":"22","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\ChatDiv.js":"23","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\ChatEmpty.js":"24","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\MainHome.js":"25","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\UserCard.js":"26","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Api.js":"27","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\RemoveFriend.js":"28","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\NewPubliBox.js":"29","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCardLoader.js":"30","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\Message.js":"31","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCard.js":"32","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\ModifyAccount.js":"33","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\StoryCard.js":"34","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\StreamCard.js":"35","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\AccountLoader.js":"36","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationDelete.js":"37","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Gifs.js":"38","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\SuggestFriendCard.js":"39","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\Index.js":"40","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\MainGallery.js":"41","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\Index.js":"42","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\Index.js":"43","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\MainFriends.js":"44","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\MainAbout.js":"45","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Video.js":"46","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\Notification.js":"47","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\NotificationCard.js":"48","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Index.js":"49","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\MainPublication.js":"50","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\dataHomeReducer.js":"51","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\FullFile.js":"52","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\fullFileReducer.js":"53"},{"size":920,"mtime":1617699219241,"results":"54","hashOfConfig":"55"},{"size":253,"mtime":1609689546345,"results":"56","hashOfConfig":"55"},{"size":345,"mtime":1614605527440,"results":"57","hashOfConfig":"55"},{"size":362,"mtime":499162500000,"results":"58","hashOfConfig":"55"},{"size":389,"mtime":1615311926908,"results":"59","hashOfConfig":"55"},{"size":4888,"mtime":1617699017679,"results":"60","hashOfConfig":"55"},{"size":230,"mtime":1614352130381,"results":"61","hashOfConfig":"55"},{"size":1022,"mtime":1615279615021,"results":"62","hashOfConfig":"55"},{"size":268,"mtime":1614258655375,"results":"63","hashOfConfig":"55"},{"size":587,"mtime":1613562962346,"results":"64","hashOfConfig":"55"},{"size":612,"mtime":1615018607179,"results":"65","hashOfConfig":"55"},{"size":5323,"mtime":1617560843907,"results":"66","hashOfConfig":"55"},{"size":1426,"mtime":1614423150275,"results":"67","hashOfConfig":"55"},{"size":391,"mtime":1617460355142,"results":"68","hashOfConfig":"55"},{"size":6697,"mtime":1617903049890,"results":"69","hashOfConfig":"55"},{"size":4759,"mtime":1617632066380,"results":"70","hashOfConfig":"55"},{"size":1295,"mtime":1610908278238,"results":"71","hashOfConfig":"55"},{"size":3529,"mtime":1612101159703,"results":"72","hashOfConfig":"55"},{"size":11025,"mtime":1617464027802,"results":"73","hashOfConfig":"55"},{"size":401,"mtime":1615279961217,"results":"74","hashOfConfig":"55"},{"size":4994,"mtime":1614423157444,"results":"75","hashOfConfig":"55"},{"size":772,"mtime":1617792507527,"results":"76","hashOfConfig":"55"},{"size":8256,"mtime":1617294085491,"results":"77","hashOfConfig":"55"},{"size":519,"mtime":1615279429993,"results":"78","hashOfConfig":"55"},{"size":6362,"mtime":1617791969083,"results":"79","hashOfConfig":"55"},{"size":1721,"mtime":1617273898348,"results":"80","hashOfConfig":"55"},{"size":546,"mtime":1617294029444,"results":"81","hashOfConfig":"55"},{"size":2301,"mtime":1617444116086,"results":"82","hashOfConfig":"55"},{"size":9831,"mtime":1615829251954,"results":"83","hashOfConfig":"55"},{"size":1357,"mtime":1614077360624,"results":"84","hashOfConfig":"55"},{"size":1432,"mtime":1615796713765,"results":"85","hashOfConfig":"55"},{"size":8463,"mtime":1617711926634,"results":"86","hashOfConfig":"55"},{"size":10280,"mtime":1615828726401,"results":"87","hashOfConfig":"55"},{"size":578,"mtime":1611394752841,"results":"88","hashOfConfig":"55"},{"size":1872,"mtime":1617184445930,"results":"89","hashOfConfig":"55"},{"size":2382,"mtime":1613666934268,"results":"90","hashOfConfig":"55"},{"size":1891,"mtime":1614959342211,"results":"91","hashOfConfig":"55"},{"size":1119,"mtime":1615736624500,"results":"92","hashOfConfig":"55"},{"size":2198,"mtime":1617447548936,"results":"93","hashOfConfig":"55"},{"size":254,"mtime":1616943676348,"results":"94","hashOfConfig":"55"},{"size":4795,"mtime":1617807404548,"results":"95","hashOfConfig":"55"},{"size":244,"mtime":1617181268623,"results":"96","hashOfConfig":"55"},{"size":254,"mtime":1617182172287,"results":"97","hashOfConfig":"55"},{"size":2998,"mtime":1617274082465,"results":"98","hashOfConfig":"55"},{"size":162,"mtime":1617181296625,"results":"99","hashOfConfig":"55"},{"size":4373,"mtime":1617711778988,"results":"100","hashOfConfig":"55"},{"size":3525,"mtime":1617460753221,"results":"101","hashOfConfig":"55"},{"size":2755,"mtime":1617448544822,"results":"102","hashOfConfig":"55"},{"size":274,"mtime":1617461005686,"results":"103","hashOfConfig":"55"},{"size":9571,"mtime":1617812110573,"results":"104","hashOfConfig":"55"},{"size":437,"mtime":1617630701166,"results":"105","hashOfConfig":"55"},{"size":1826,"mtime":1617710750342,"results":"106","hashOfConfig":"55"},{"size":330,"mtime":1617700054804,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"rdbbsr",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"110"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"110"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\index.js",[],["232","233"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\themeReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\zIndexReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\reportWebVitals.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\userDataReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\App.js",["234"],"//TODO -> Protéger ces Routes plus tard\n//TODO -> thème en cookie\n//TODO -> Faire un slide avec useSpring ou useGesture pour la gallery avec les images au click\n//TODO -> avec react-web-notification, faire des notif browser quand il y a une notif\n\nimport {useEffect, useState} from \"react\"\nimport \"./Styles/app.css\"\nimport {Route, Switch, useLocation} from 'react-router-dom'\nimport Cookie from \"js-cookie\"\nimport axios from \"axios\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {useTransition, animated, config} from \"react-spring\"\n\n// Components\nimport Header from \"./Components/Header/Header\"\nimport Connected from \"./Components/Connected/Connected\"\nimport Home from \"./Components/Home/Index\"\nimport Publication from \"./Components/Publication/Index\"\nimport Chat from \"./Components/Chat/Index\"\nimport Account from \"./Components/Account/Index\"\nimport Gallery from \"./Components/Gallery/Index\"\nimport Friends from \"./Components/Friends/Index\"\nimport About from \"./Components/About/Index\"\nimport Gaming from \"./Components/Gaming/Index\"\nimport Live from \"./Components/Gaming/Live\"\nimport FullFile from \"./Components/Services/FullFile\"\nimport Login from \"./Components/Connexion/Login\"\nimport Signup from \"./Components/Connexion/Signup\"\nimport PasswordForget from \"./Components/Connexion/PasswordForget\"\nimport Error from \"./Components/Services/Error\"\nimport Loader from \"./Components/Services/Loader\"\n\nfunction App() {\n\n  const authCookie = Cookie.get(\"user\")\n  const themeReduceur = useSelector(state => state.Theme)\n  const zIndexReduceur = useSelector(state => state.ZIndexReduceur)\n  const [authorization, setAuthorization] = useState(false)\n  const [load, setLoad] = useState(false)\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const verifyPathname = () => {\n    // Avoid listen pathname /:slug on root chat for not repeat animation and refresh page each change path\n    if (location.pathname.includes(\"/chat/\")) {\n      if (location.pathname.includes(\"/chat/empty\")) return true\n      return false\n    } else return true\n  }\n  const transitions = useTransition(location, location => location.pathname, {\n    from: verifyPathname() ? {opacity: 0, transform: 'translate3d(-50%, 0, 0)', position: 'absolute'} : {opacity: 1, transform: 'translate3d(0, 0, 0)', position: 'absolute'},\n    enter: verifyPathname() ? {opacity: 1, transform: 'translate3d(0%, 0, 0)'} : {opacity: 1, transform: 'translate3d(0, 0, 0)'},\n    leave: verifyPathname() ? {opacity: 0, transform: 'translate3d(50%, 0, 0)'} : {opacity: 1, transform: 'translate3d(0, 0, 0)'},\n    config: config.stiff\n  })\n\n  useEffect(() => {\n    const fecthData = async () => {\n      await axios.post(\"http://localhost:3001/api/auth/login-token\", {cookie: authCookie})\n        .then(res => {\n          setAuthorization(res.data.authorization)\n          if (res.data.authorization) {\n            dispatch({\n              type: \"ADD_DATA\",\n              payload: res.data.informations\n            })\n          }\n        })\n        .catch(err => console.log(err))\n        setLoad(true)\n    }\n    fecthData()\n  }, [])\n\n  return (\n    load \n      ? authorization \n        ? \n          <div className={themeReduceur ? \"App-dark\" : \"App\"}>\n            <FullFile />\n            <Header />\n            <div className=\"container\">\n              {transitions.map(({item: location, props, key}) => {\n                return (\n                  <animated.div key={key} style={props} className={zIndexReduceur ? \"container-anim container-index\" : \"container-anim\"}>\n                    <Switch location={location}>\n                      <Route exact path=\"/\" component={Home} /> \n                      <Route exact path=\"/publication/:slug\" component={Publication} /> \n                      <Route exact path=\"/account/:slug\" component={Account} />\n                      <Route exact path=\"/account/:slug/gallery\" component={Gallery} />\n                      <Route exact path=\"/account/:slug/friends\" component={Friends} />\n                      <Route exact path=\"/account/:slug/about\" component={About} />\n                      <Route exact path=\"/gaming\" component={Gaming} />\n                      <Route excat path=\"/gaming/live/:slug\" component={Live} />\n                      <Route exact path=\"/chat/:slug\" component={Chat} />\n                      <Route component={Error} />\n                    </Switch>\n                  </animated.div>\n                )\n              })}\n            </div>\n            <Connected choiceCss={true} />\n          </div>\n      \n          : <Switch>\n            <Route exact path={[\"/login\", \"/\"]} component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/password-forget\" component={PasswordForget} />\n            <Route component={Error} />\n          </Switch>\n      : <Loader />\n  );\n\n}\n\nexport default App;\n\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\Index.js",["235","236"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from \"react-router-dom\"\r\nimport \"../../Styles/chat.css\"\r\n\r\n//Components\r\nimport MainChat from \"./MainChat\"\r\nimport Connected from \"../Connected/Connected\"\r\nimport ChatEmpty from \"./ChatEmpty\"\r\n\r\nexport default function Index() {\r\n\r\n    const [friendClick, setFriendClick] = useState(false)\r\n    const [data, setData] = useState(null)\r\n    const { slug } = useParams()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (slug.toString() != \"empty\") {\r\n            setFriendClick(true)\r\n            setData(history.location.state)\r\n        }\r\n    }, [])\r\n\r\n    const handleFriendClick = (data) => {\r\n        history.push({pathname: `/chat/${data.userId}`, state: data})\r\n    }\r\n\r\n    return (\r\n        <section className=\"chat\">\r\n            <Connected choiceCss={false} friendClick={(data) => handleFriendClick(data)} />\r\n            {friendClick ? <MainChat data={data} /> : <ChatEmpty />}\r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Loader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Error.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Signup.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Live.js",["237"],"import React, {useEffect} from 'react'\r\nimport \"../../Styles/gaming.css\"\r\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\"\r\nimport {Link, useParams} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\n\r\nexport default function Live() {\r\n\r\n    let {slug} = useParams()\r\n    const dispatch = useDispatch()\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n    }, [])\r\n\r\n    return (\r\n        <section className=\"gaming\">\r\n            <div className={themeReducer? \"mainLive-dark\" : \"mainLive\"}>\r\n                <div className=\"live-stream\">\r\n                    <ReactTwitchEmbedVideo \r\n                        width=\"100%\" \r\n                        height=\"100%\" \r\n                        channel={slug} \r\n                        theme={themeReducer? \"dark\" : \"light\"} \r\n                    />\r\n                </div>\r\n                <div className=\"live-back\">\r\n                    <Link to=\"/gaming\">\r\n                        <FontAwesomeIcon className={themeReducer? \"chevron-icon-dark\" : \"chevron-icon\"} icon=\"chevron-left\" />\r\n                    </Link>\r\n                </div>                \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\Connected.js",["238","239","240"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\Header.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\PasswordForget.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Login.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\MainAccount.js",["241","242"],"import React, {useState, useEffect} from 'react'\r\nimport \"../../Styles/account.css\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {useParams, useLocation, useHistory, Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport {socket} from \"../../Api\"\r\nimport NewPubliBox from '../Publication/NewPubliBox'\r\nimport PublicationCard from '../Publication/PublicationCard'\r\nimport PublicationComments from '../Publication/MainPublication'\r\nimport ModifyAccount from \"./ModifyAccount\"\r\nimport AccountLoader from \"./AccountLoader\"\r\nimport RemoveFriend from \"./RemoveFriend\"\r\n\r\nexport default function MainAccount() {\r\n    \r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const {slug} = useParams()\r\n    const dispatch = useDispatch()\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const [load, setLoad] = useState(false)\r\n    const [openNewPubli, setOpenNewPubli] = useState(false)\r\n    const [openModifyAccount, setOpenModifyAccount] = useState(false)\r\n    const [openRemoveFriend, setOpenRemoveFriend] = useState(false)\r\n    const [dataUser, setDataUser] = useState(null)\r\n    const [dataPublications, setDataPublications] = useState(null)\r\n    const [isEmpty, setIsEmpty] = useState(true)\r\n    const [isFriend, setIsFriend] = useState(false)\r\n    const [waiting, setWaiting] = useState(false)\r\n\r\n    useEffect(() => {\r\n        // Get informations for account\r\n        setLoad(false)\r\n        const id = slug\r\n\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n\r\n        const fetchDataAccount = async () => {\r\n            await axios.get(`http://localhost:3001/api/user/account/informations/${id}`)\r\n                .then(res => {\r\n                    if (res.data.alert) {\r\n                        return history.push({pathname: '/error404'})\r\n                    } else {\r\n                        setDataUser(res.data.userData)\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n                \r\n            await axios.get(`http://localhost:3001/api/publications/account/${id}`)\r\n            .then(res => {\r\n                if (res.data.length === 0) {\r\n                    setIsEmpty(true)\r\n                } else {\r\n                    setDataPublications(res.data)\r\n                    setIsEmpty(false)\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n            \r\n            await axios.post(`http://localhost:3001/api/user/account/isFriend/${id}`, {userId: userDataReducer.userId})\r\n                .then(res => {\r\n                    setIsFriend(res.data)\r\n                })\r\n                .catch(err => console.log(err))\r\n            setLoad(true)\r\n        }\r\n        fetchDataAccount()\r\n    }, [location])\r\n\r\n    const handleOpenModifyAccount = () => {\r\n        setOpenModifyAccount(!openModifyAccount)\r\n    }\r\n\r\n    const handleDeleteFriend = () => {\r\n        setOpenRemoveFriend(false)\r\n        setIsFriend(false)\r\n    }\r\n\r\n    const handleAddFriend = () => {\r\n        setWaiting(true)\r\n        axios.post(\"http://localhost:3001/api/notifications/add\", {\r\n            receiver : slug,\r\n            sender: userDataReducer.userId,\r\n            type: \"invitation\"\r\n        })\r\n        socket.emit(\"notification\", {\r\n            receiver: slug,\r\n            sender: {\r\n                user: userDataReducer,\r\n                content: {\r\n                    type: \"invitation\"\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={themeReducer ? \"mainAccount-dark\" : \"mainAccount\"}>\r\n            {load ?\r\n                <div className=\"account-container\">\r\n                    {openNewPubli ? <NewPubliBox /*publi={openNewPubli}*/ setPubli={setOpenNewPubli} />  : null}\r\n                    {openModifyAccount ? <ModifyAccount slug={slug} setClose={setOpenModifyAccount} /> : null}\r\n                    {openRemoveFriend ? <RemoveFriend slug={slug} friendId={dataUser[0].userId} setClose={handleDeleteFriend} /> : null}\r\n\r\n                    <div className={themeReducer ? \"account-top-dark\" : \"account-top\"}>\r\n                        <div className=\"account-bg\">\r\n                            <img className=\"account-bg-img\" src={dataUser[0].bannerImage} alt=\"Your banner frame\"/>\r\n                        </div>\r\n                        <div className=\"account-info\">\r\n                            <div className=\"account-info-top\">\r\n                                <div className={themeReducer ? \"account-info-img-dark\" : \"account-info-img\"}>\r\n                                    <img className=\"img-profile\" src={dataUser[0].profileImage} alt=\"Your profile frame\"/>\r\n                                </div>\r\n                                <div>\r\n                                    <p className={themeReducer ? \"txt-dark\" : null}>{dataUser[0].firstName} {dataUser[0].lastName}</p>\r\n                                </div>\r\n\r\n                            {parseInt(slug) !== userDataReducer.userId\r\n                            ?  isFriend\r\n                                ?   <div className=\"account-action\">\r\n                                        <p className={themeReducer ? \"txt-dark\" : null} onClick={() => setOpenRemoveFriend(true)}>Friend</p>\r\n                                        <FontAwesomeIcon icon=\"user-friends\" className={themeReducer ? \"txt-dark\" : \"edit-icon\"}/>\r\n                                    </div>\r\n                                :  waiting \r\n                                    ?   <div className=\"account-action\">\r\n                                            <p className={themeReducer ? \"txt-dark\" : null}>Waiting...</p>\r\n                                        </div>\r\n                                    :  <div className=\"account-action\">\r\n                                            <p className={themeReducer ? \"txt-dark\" : null} onClick={() => handleAddFriend()}>Add friend</p>\r\n                                            <FontAwesomeIcon icon=\"user-plus\" className={themeReducer ? \"txt-dark\" : \"edit-icon\"}/>\r\n                                        </div>\r\n                            :   <div className=\"account-action\">\r\n                                    <p className={themeReducer ? \"txt-dark\" : null} onClick={() => handleOpenModifyAccount()}>Modify my account</p>\r\n                                    <FontAwesomeIcon icon=\"edit\" className={themeReducer ? \"txt-dark\" : \"edit-icon\"}/>\r\n                                </div>\r\n                            }\r\n\r\n                            </div>\r\n                            <div className=\"account-bottom\">\r\n                                <div className=\"account-icon\">\r\n                                    <div className=\"account-icon-box\">\r\n                                        <FontAwesomeIcon icon=\"heart\" className=\"heart-icon\"/>\r\n                                        <p className={themeReducer ? \"account-icon-nbr-dark\" : \"account-icon-nbr\"}>{dataUser[1].likesTotal}</p>\r\n                                    </div>\r\n                                    <div className=\"account-icon-box\">\r\n                                        <FontAwesomeIcon icon=\"user-friends\" className=\"user-friends-icon\"/>\r\n                                        <p className={themeReducer ? \"account-icon-nbr-dark\" : \"account-icon-nbr\"}>{dataUser[1].friendsTotal}</p>\r\n                                    </div>\r\n                                    <div className=\"account-icon-box\">\r\n                                        <FontAwesomeIcon icon=\"pen\" className=\"pen-icon\"/>\r\n                                        <p className={themeReducer ? \"account-icon-nbr-dark\" : \"account-icon-nbr\"}>{dataUser[1].publicationsTotal}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"account-bio\">\r\n                                    <p className={themeReducer ? \"txt-dark\" : null}>{dataUser[0].bio}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={themeReducer ? \"account-links-dark\" : \"account-links\"}>\r\n                        <div className=\"account-box\">\r\n                            <FontAwesomeIcon className=\"account-links-icon\" icon=\"camera\" />\r\n                            <Link to={{pathname: `/account/${slug}/gallery`}} className={themeReducer ? \"txt-dark account-links-link\" : \"account-links-link\"}>Gallery</Link>\r\n                        </div>\r\n                        <div className=\"account-box\">\r\n                            <FontAwesomeIcon className=\"account-links-icon\" icon=\"user-friends\" />\r\n                            <Link to={`/account/${slug}/friends`} className={themeReducer ? \"txt-dark account-links-link\" : \"account-links-link\"}>Friends</Link>\r\n                        </div>\r\n                        <div className=\"account-box\">\r\n                            <FontAwesomeIcon className=\"account-links-icon\" icon=\"address-card\" />\r\n                            <Link to={`/account/${slug}/about`} className={themeReducer ? \"txt-dark account-links-link\" : \"account-links-link\"}>About</Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"account-publi\">\r\n                        {parseInt(slug) !== userDataReducer.userId\r\n                        ? null\r\n                        :   <div className=\"new-publi\">\r\n                                <div className=\"write-publi\" onClick={() => setOpenNewPubli(true)}>\r\n                                    <FontAwesomeIcon className={themeReducer ? \"icon-new-publi txt-dark\" : \"icon-new-publi\"} icon=\"comments\" />\r\n                                    <div className=\"input-new-publi\" type=\"text\">\r\n                                        <p className={themeReducer ? \"write-publi-placeholder txt-dark\" : \"write-publi-placeholder\"}>What do you mean ?</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    {isEmpty\r\n                    ?   <div className=\"account-empty\">\r\n                            <p className={themeReducer ? \"txt-dark\" : null}>This account seems very empty to me ...</p>\r\n                        </div>\r\n                    : dataPublications.map((item, index) => {\r\n                        return (\r\n                            <div key={index} className=\"box-publi\">\r\n                                <PublicationCard data={item} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            : <AccountLoader />}\r\n        </div>\r\n    )\r\n}","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\MainChat.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\MainGaming.js",["243"],"import React, {useState, useEffect} from 'react'\r\nimport \"../../Styles/gaming.css\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {apiTwitch} from \"../../Api\"\r\nimport StreamCard from \"./StreamCard\"\r\nimport PublicationCardLoader from \"../Publication/PublicationCardLoader\"\r\n\r\nexport default function MainGaming() {\r\n\r\n    const dispatch = useDispatch()\r\n    const [streams, setStreams] = useState([])\r\n    const [getApi, setGetApi] = useState([])\r\n    const [load, setLoad] = useState(false)\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    // Take all informations for modify each url with good params\r\n    useEffect(() => {\r\n\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n\r\n        const fetchData = async () => {\r\n            const res = await apiTwitch.get('https://api.twitch.tv/helix/streams?first=100')\r\n            let dataArray = res.data.data\r\n            setGetApi(dataArray)\r\n\r\n            let gameIDs = dataArray.map(stream => {\r\n                return stream.game_id\r\n            })\r\n\r\n            let userIDs = dataArray.map(stream => {\r\n                return stream.user_id\r\n            })\r\n\r\n            // Create URL\r\n            let urlGames = \"https://api.twitch.tv/helix/games?\"\r\n            let urlUsers = \"https://api.twitch.tv/helix/users?\"\r\n\r\n            let queryParamsGame = \"\"\r\n            let queryParamsUser = \"\"\r\n\r\n            gameIDs.map(id => {\r\n                return (queryParamsGame = queryParamsGame + `id=${id}&`)\r\n            })\r\n\r\n            userIDs.map(id => {\r\n                return (queryParamsUser = queryParamsUser + `id=${id}&`)\r\n            })\r\n\r\n            let urlFinalGames = urlGames + queryParamsGame\r\n            let urlFinalUsers = urlUsers + queryParamsUser\r\n\r\n            // Call URL\r\n            let gamesCall = await apiTwitch.get(urlFinalGames)\r\n            let usersCall = await apiTwitch.get(urlFinalUsers)\r\n\r\n            let gamesCallArray = gamesCall.data.data\r\n            let usersCallArray = usersCall.data.data\r\n\r\n            let newUrl = \"\"\r\n\r\n            // Array Final\r\n            let finalArray = dataArray.map(stream => {\r\n                stream.gameName = \"\"\r\n                stream.login = \"\"\r\n                stream.channelImg = \"\"\r\n\r\n                newUrl = stream.thumbnail_url\r\n                .replace('{width}', '480')\r\n                .replace('{height}', '270')\r\n\r\n                stream.streamImg = newUrl\r\n\r\n                gamesCallArray.forEach(name => {\r\n                    usersCallArray.forEach(user => {\r\n                        if (stream.user_id === user.id && stream.game_id === name.id) {\r\n                            stream.gameName = name.name\r\n                            stream.channelImg = user.profile_image_url\r\n                            stream.login = user.login\r\n                        }\r\n                    })\r\n                })\r\n\r\n                return stream\r\n            })\r\n            setStreams(finalArray)\r\n            setLoad(true)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const handleLanguage = choice => {\r\n        let newDataArray = [];\r\n\r\n        //Sort by lang\r\n        if (choice !== \"all\") {\r\n            for (let i = 0; i < getApi.length; i++) {\r\n                if (getApi[i].language === choice) {\r\n                    newDataArray.push(getApi[i])\r\n                }\r\n            }\r\n        } else return setStreams(getApi)\r\n\r\n        return setStreams(newDataArray)\r\n    }\r\n    \r\n    return (\r\n        <div className={themeReducer ? \"mainGaming-dark\" : \"mainGaming\"}>\r\n\r\n            <div className=\"gaming-lang\">\r\n                <div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"all\")}>\r\n                    <p>ALL</p>\r\n                </div>\r\n                <div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"en\")}>\r\n                    <p>EN</p>\r\n                </div><div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"fr\")}>\r\n                    <p>FR</p>\r\n                </div>\r\n            </div>\r\n            {load \r\n            ? streams.map((stream, index) => {\r\n                return (\r\n                    <StreamCard \r\n                        login={stream.login}\r\n                        name={stream.user_name}\r\n                        channelImg={stream.channelImg} \r\n                        streamImg={stream.streamImg}\r\n                        viewerCount={stream.viewer_count}\r\n                        gamePlay={stream.gameName} \r\n                        key={index} \r\n                    />\r\n                )\r\n            })  \r\n            : <div className=\"streamCardLoader\">\r\n                <PublicationCardLoader />\r\n                <PublicationCardLoader />\r\n                <PublicationCardLoader />\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Assets\\fontawesome.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\ChatDiv.js",["244","245","246"],"import React, {useEffect, useState, useRef} from 'react'\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport \"../../Styles/chat.css\"\r\nimport {useParams} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport {socket} from \"../../Api\"\r\nimport imageCompression from \"browser-image-compression\"\r\nimport UserCard from '../Connected/UserCard'\r\nimport Message from \"./Message\"\r\nimport Gifs from \"../Services/Gifs\"\r\n\r\nexport default function ChatDiv({choiceCss, closeChat, data, index}) {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const messageRef = useRef()\r\n    const chatRef = useRef()\r\n    const openFile = useRef()\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams()\r\n    const [searchGif, setSearchGif] = useState(\"dogs\")\r\n    const [urlGif, setUrlGif] = useState(\"\")\r\n    const [gifVisible, setGifVisible] = useState(false)\r\n    const [load, setLoad] = useState(false)\r\n    const [allMessages, setAllMessages] = useState([])\r\n    const [roomId, setRoomId] = useState(null)\r\n    const [message, setMessage] = useState({\r\n        text: \"\",\r\n        sender: userDataReducer.userId,\r\n        receiver: data.userId,\r\n        type: \"text\"\r\n    })\r\n\r\n    /*\r\n    ----- Socket.io for a real time chat -----\r\n    */\r\n\r\n    // Send message\r\n    socket.on('newMessage', dataMessage => {\r\n        const id = slug === undefined ? data.userId : slug\r\n        if (dataMessage.sender.toString() === id.toString()) {\r\n            setAllMessages([...allMessages, dataMessage])\r\n        }\r\n    })\r\n    \r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            await dispatch({\r\n                type: \"CHANGE_ZINDEX\",\r\n                payload: index\r\n            })\r\n            // get roomId\r\n            const dataFetchRoomId = await fetchRoomId()\r\n            const dataRoomId = dataFetchRoomId.data.roomId\r\n            // get message in room with roomId\r\n            const dataFetchMessages = await fetchMessages(dataRoomId)\r\n            const dataMessages = dataFetchMessages.data\r\n            // not continue if haven't messages\r\n            if (dataMessages.length > 0) {\r\n                setAllMessages(dataMessages)\r\n            } else {\r\n                setAllMessages([])\r\n            }\r\n            setRoomId(dataRoomId)\r\n            await socket.emit('userConnectedOnChat', userDataReducer.userId)\r\n            setLoad(true)\r\n            // Scrollbar appears at the bottom by default\r\n            setTimeout(() => {\r\n                chatRef.current.scrollTop = chatRef.current.scrollHeight\r\n            }, 250)\r\n        }\r\n        fetch()\r\n    }, [data])\r\n\r\n    const fetchRoomId = async () => {\r\n        return await new Promise(resolve => {\r\n            const id = slug === undefined ? data.userId : slug\r\n            const dataFetch = axios.post(`http://localhost:3001/api/chat/getRoom/${id}`, {userId: userDataReducer.userId})\r\n            resolve(dataFetch)\r\n        })\r\n    }\r\n\r\n    const fetchMessages = async (id) => {\r\n        return await new Promise(resolve => {\r\n            const dataFetch = axios.get(`http://localhost:3001/api/chat/getContent/${id}`)\r\n            resolve(dataFetch)\r\n        })\r\n    }\r\n\r\n    const handleClickFile = () => {\r\n        openFile.current.click()\r\n    }\r\n\r\n    const handleSubmitText = e => {\r\n        e.preventDefault()\r\n        setAllMessages([...allMessages, message])\r\n\r\n        socket.emit('sendMessage', message)\r\n        axios.post(`http://localhost:3001/api/chat/addMessage/${roomId}`, message)\r\n        setMessage({...message, text: \"\"})\r\n        messageRef.current.value = \"\"\r\n    } \r\n\r\n    const handleSubmitImage = e => {\r\n        let imageFile = e.target.files[0]\r\n        let options = {\r\n          maxSizeMB: 0.5,\r\n          maxWidthOrHeight: 1920,\r\n          useWebWorker: true\r\n        }\r\n\r\n        imageCompression(imageFile, options)\r\n          .then(compressedFile => {\r\n                let formData = new FormData()\r\n                formData.append('file', compressedFile)\r\n                formData.append('id', userDataReducer.userId)\r\n                axios.post(`http://localhost:3001/api/chat/addImage/${roomId}`, formData)\r\n                    .then(res => {\r\n                        const newImage = {\r\n                            sender: message.sender,\r\n                            receiver: message.receiver,\r\n                            text: res.data,\r\n                            type: \"image\"\r\n                        }\r\n                        socket.emit('sendMessage', newImage)\r\n                        setAllMessages([...allMessages, newImage])\r\n                    })\r\n                    .catch(err => console.log(err))\r\n          })\r\n          .catch(error => {\r\n            console.log(error.message)\r\n          })\r\n    }\r\n\r\n    const handleSubmitGif = url => {\r\n        const newGif = {\r\n            sender: message.sender,\r\n            receiver: message.receiver,\r\n            text: url,\r\n            type: \"gif\"\r\n        }\r\n        socket.emit('sendMessage', newGif)\r\n        axios.post(`http://localhost:3001/api/chat/addMessage/${roomId}`, newGif)\r\n        setAllMessages([...allMessages, newGif])\r\n    }\r\n\r\n    const handleVisible = () => {\r\n        setGifVisible(!gifVisible)  \r\n    }\r\n\r\n    const choiceContainer = choiceCss ? \"chatDiv-container-mini\" : \"chatDiv-container\"\r\n    const choiceTop = choiceCss ? \"chatDiv-top-mini\" : \"chatDiv-top\"\r\n    const choicechat = choiceCss ? \"chatDiv-chat-mini\" : \"chatDiv-chat\"\r\n\r\n    return (\r\n        <div className={themeReducer ? choiceContainer : choiceContainer}>\r\n            <div className={themeReducer ? `${choiceTop} chatDiv-border-dark` : choiceTop}>\r\n                <UserCard noOpen={true} data={data} />\r\n            {choiceCss ? <FontAwesomeIcon icon=\"times-circle\" className=\"chatDiv-close-icon\" onClick={() => closeChat()} /> : null}\r\n            </div>\r\n            <div className={themeReducer ? `${choicechat} chatDiv-border-dark` : choicechat} ref={chatRef}>\r\n               {load \r\n               ? allMessages.map((item, key) => {\r\n                   let isMe = item.userId === userDataReducer.userId || item.sender === userDataReducer.userId\r\n                   return <Message key={key} data={item} isMe={isMe} />\r\n                }) \r\n                : null}\r\n                {gifVisible \r\n                 ?   <div className=\"chat-searchGif\">\r\n                         <FontAwesomeIcon icon=\"times-circle\" className=\"chatDiv-close-icon close-gif\" onClick={() => handleVisible()} />\r\n                         <div className=\"chat-gif-search-container\">\r\n                             <div className=\"search-top chat-gif-search\">\r\n                                 <FontAwesomeIcon className=\"search-icon\" icon=\"search\" />\r\n                                 <input className=\"search\" type=\"search\" placeholder=\"Search...\" onChange={e => setSearchGif(e.target.value)} />\r\n                             </div>\r\n                         </div>\r\n                         <Gifs search={searchGif} handleSubmitGif={handleSubmitGif} />\r\n                     </div>\r\n                 :   null}\r\n            </div>\r\n            <div className={choiceCss ? \"chatDiv-write-dark\" : \"chatDiv-write\"}>\r\n                <div className=\"icon-new-msg\">\r\n                    <input type=\"file\" name=\"chatImage\" id=\"chatImage\" style={{display: \"none\"}} ref={openFile} onChange={e => handleSubmitImage(e)} />\r\n                    <FontAwesomeIcon icon=\"image\" className=\"icon-write-new-msg\" onClick={() => handleClickFile()} />\r\n                    <button className=\"icon-write-new-msg\" onClick={() => handleVisible()}>GIF</button>\r\n                </div>\r\n                <form className=\"new-msg-box\">\r\n                    <button onClick={e => handleSubmitText(e)} ><FontAwesomeIcon className=\"icon-send-msg\" icon=\"paper-plane\" /></button>\r\n                    <textarea ref={messageRef} name=\"text\" onChange={e => setMessage({...message, [e.target.name]: e.target.value})} className=\"new-msg-textarea\"></textarea>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\ChatEmpty.js",["247"],"import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\n\r\nexport default function ChatEmpty() {\r\n\r\n    const dispatch = useDispatch();\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: true\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={themeReducer ? \"chatEmpty-dark\" : \"chatEmpty\"}>\r\n            <p>Click on a friend</p>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\MainHome.js",["248"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {useLocation, useHistory} from \"react-router-dom\"\r\nimport \"../../Styles/home.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport StoryCard from './StoryCard'\r\nimport PublicationCard from '../Publication/PublicationCard'\r\nimport NewPubliBox from '../Publication/NewPubliBox'\r\nimport Loader from \"../Services/Loader\"\r\nimport SuggestFriendCard from '../Services/SuggestFriendCard'\r\n\r\nexport default function MainHome() {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const dataHomeReducer = useSelector(state => state.DataHome)\r\n    const dispatch = useDispatch()\r\n    const scrollRef = useRef()\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const [countPublication, setCountPublication] = useState(3)\r\n    const [load, setLoad] = useState(false)\r\n    const [newPubli, setNewPubli] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const [dataSuggestFriend, setDataSuggestFriend] = useState([])\r\n    const [alertMsg, setAlertMsg] = useState(false)\r\n\r\n    window.onbeforeunload = (event) => {\r\n        const e = event || window.event;\r\n        e.preventDefault();\r\n        if (e) history.replace({...history.location, state: false})\r\n      }\r\n\r\n    useEffect(() => {\r\n        if (location.state) {\r\n            setData(dataHomeReducer.publications)\r\n            setDataSuggestFriend(dataHomeReducer.suggestFirends)\r\n            setCountPublication(dataHomeReducer.countPublication)\r\n            setLoad(true)\r\n            setTimeout(() => {\r\n                scrollRef.current.scrollTop = dataHomeReducer.scrollTop\r\n            }, 100);\r\n        } else {\r\n            // Get publications\r\n            const fetchData = async () => {\r\n                await dispatch({\r\n                    type: \"CHANGE_ZINDEX\",\r\n                    payload: false\r\n                })\r\n                await dispatch({type: \"RESET\"})\r\n                await getPublications()\r\n                await getSuggestFriend()\r\n                setLoad(true)\r\n                }\r\n            fetchData()\r\n        }\r\n        }, [])\r\n    \r\n    const getPublications = () => {\r\n        axios.get(`http://localhost:3001/api/publications/home/${countPublication}`)\r\n        .then(res => {\r\n            if (res.data === false) {\r\n                setAlertMsg(true)\r\n            } else {\r\n                setData([...data, res.data[0], res.data[1], res.data[2]])\r\n            }\r\n            setCountPublication(countPublication + 3)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n \r\n    const getSuggestFriend = async () => {\r\n        await axios.get(`http://localhost:3001/api/user/suggest/friend/${userDataReducer.userId}`)\r\n            .then(res => {\r\n                setDataSuggestFriend(res.data)\r\n            })\r\n            .catch(err => console.log(err))   \r\n    }\r\n\r\n    // Scroll infini -> get publications with scroll\r\n    const handleScroll = () => {\r\n        const { scrollTop, scrollHeight, clientHeight } = scrollRef.current\r\n        \r\n        if (clientHeight + scrollTop >= scrollHeight - 20) {\r\n            getPublications()\r\n        }\r\n    }\r\n\r\n    // Save position and data\r\n    const handleClickPublication = () => {\r\n        const { scrollTop } = scrollRef.current\r\n        dispatch({\r\n            type: 'CHANGE_DATA_HOME',\r\n            payload: {\r\n                publications: data,\r\n                suggestFirends: dataSuggestFriend,\r\n                scrollTop,\r\n                countPublication: countPublication\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div ref={scrollRef} className={themeReducer ? \"mainHome-dark\" : \"mainHome\"} onScroll={() => handleScroll()}>\r\n        \r\n            <div>\r\n                {newPubli ? <NewPubliBox publi={newPubli} setPubli={setNewPubli} />  : null}\r\n\r\n                <div className=\"storys\">\r\n                    <div className={themeReducer ? \"story-add border-dark\" : \"story-add\"}>\r\n                        <FontAwesomeIcon icon=\"plus\" className={themeReducer ? \"story-icon txt-dark\" : \"story-icon\"}/>\r\n                    </div>\r\n                    <StoryCard />\r\n                </div>\r\n\r\n                <div className=\"new-publi\">\r\n                    <div className=\"write-publi\" onClick={() => setNewPubli(true)}>\r\n                        <FontAwesomeIcon className={themeReducer ? \"icon-new-publi txt-dark\" : \"icon-new-publi\"} icon=\"comments\" />\r\n                        <div className=\"input-new-publi\" type=\"text\">\r\n                            <p className={themeReducer ? \"write-publi-placeholder txt-dark\" : \"write-publi-placeholder\"}>What do you mean ?</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                {load \r\n                    ?  <div className=\"suggest-friend\">\r\n                            <p className={themeReducer ? \"txt-dark\" : null}>You know this persons ?</p>\r\n                            <div className=\"suggest-friend-container\">           \r\n                                <div className=\"suggest-friend-content\">\r\n                                    {dataSuggestFriend.map((item, index) => {\r\n                                        return <SuggestFriendCard key={index} data={item} />\r\n                                    })}                \r\n                                </div>\r\n                            </div>\r\n                        </div>                                              \r\n                    :   null}\r\n                    {load \r\n                    ?   data.map((item, index) => {\r\n                            return (\r\n                                <div onClick={() => handleClickPublication()} key={index} className=\"box-publi\">\r\n                                    <PublicationCard data={item} />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    :   <Loader />}\r\n                    {alertMsg ? <p className=\"home-alertMsg\">There is no more publication! Come back later :)</p> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\UserCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Api.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\RemoveFriend.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\NewPubliBox.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCardLoader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\Message.js",["249","250","251","252","253"],"import React from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport moment from \"moment\"\r\n\r\nexport default function Message({data, isMe}) {\r\n\r\n    const isImage = data.type === \"image\" ? true : null\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const smallClass = isMe ? themeReducer ? 'txt-dark msg-hour msg-hour-right' : \"msg-hour msg-hour-right\" : themeReducer ? 'txt-dark msg-hour msg-hour-left' : 'msg-hour msg-hour-left'\r\n    const divClass = isImage === \"image\" ? isMe ? \"msg-box-img-right\" : \"msg-box-img\" : isMe ? \"msg msg-right\" : \"msg\"\r\n\r\n    const handleType = () => {\r\n        switch (data.type) {\r\n            case \"text\":\r\n                return <p className=\"msg-txt\">{data.text}</p>\r\n                break;\r\n\r\n            case \"image\":\r\n                return <img className=\"msg-img\" src={data.text} alt=\"frame message\"/>\r\n                break;\r\n\r\n            case \"gif\":\r\n                return <iframe className=\"msg-gif\" src={data.text} alt=\"Gif\"></iframe>\r\n                break;\r\n\r\n            default:\r\n                return null\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={isMe ? \"msg-box msg-right-box\" : \"msg-box\"}>\r\n                <div className={divClass}>\r\n                    <small className={smallClass}>{moment(data.date).fromNow()}</small>\r\n                    { handleType() }\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCard.js",["254"],"import React, {useState, useEffect} from 'react'\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\"\r\nimport \"../../Styles/publication.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport moment from \"moment\"\r\nimport axios from 'axios'\r\nimport {socket} from \"../../Api\"\r\nimport {useTransition, useSpring, animated} from \"react-spring\"\r\nimport PublicationCardLoader from \"./PublicationCardLoader\"\r\nimport PublicationDelete from \"./PublicationDelete\"\r\nimport Video from \"./Video\"\r\n\r\nexport default function PublicationCard({ data, fullFile }) { \r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n    const [hashtag, setHashtag] = useState(\"\")\r\n    const [deleteAlert, setDeleteAlert] = useState(false)\r\n    const [deleteMsg, setDeleteMsg] = useState(true)\r\n    const [isAnimated, setIsAnimated] = useState(true)\r\n    const [spam, setSpam] = useState(0)\r\n    const [load, setLoad] = useState(false)\r\n    const [isLike, setIsLike] = useState(false)\r\n    const [dataLikes, setDataLikes] = useState(null)\r\n\r\n    const transitionLike = useTransition(isAnimated, null, {\r\n        from: { opacity: 0, transform: 'translateY(-20px)', position: 'absolute' },\r\n        enter: { opacity: 1, transform: 'translateY(0px)', position: 'relative'},\r\n        leave: { opacity: 0, transform: 'translateY(-20px)', position: 'absolute' },\r\n    })\r\n    const {x} = useSpring({\r\n        from: {x: 0}, x: isAnimated ? 1 : 0,\r\n        config: {duration: 500}\r\n    })\r\n\r\n    useEffect(() => {\r\n        // To separate a long string into several hashtags if there is a need\r\n        if (data.hashtag.length > 0) {\r\n            let _hashtag = data.hashtag\r\n            _hashtag = _hashtag.replace(\";\", \" #\")\r\n            _hashtag = \"#\" + _hashtag\r\n            setHashtag(_hashtag)\r\n        }        \r\n\r\n        axios.post(`http://localhost:3001/api/publications/likes/get/${data.publicationId}`, {userId: userDataReducer.userId})\r\n            .then(res => {\r\n                setDataLikes(res.data.like.likesTotal)\r\n                if (res.data.isLike.length > 0) setIsLike(true)\r\n                setLoad(true)\r\n            })\r\n            .catch(err => console.log(err))\r\n        }, [])\r\n\r\n    const handleDelete = () => {\r\n        if (data.userId === userDataReducer.userId) {\r\n            axios.delete(`http://localhost:3001/api/publications/account/delete/${data.userId + \"-\" + data.publicationId}`)\r\n                .then(res => {\r\n                    if (res.data.alert) {\r\n                        setDeleteMsg(false)\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n            }\r\n    }\r\n\r\n    const handleLike = async () => {\r\n        // Anti spam request\r\n        setIsAnimated(!isAnimated)\r\n\r\n        if (spam <= 4) {\r\n            if (isLike) {\r\n                await axios.delete(`http://localhost:3001/api/publications/like/delete/${data.publicationId}`, {data: {userId: userDataReducer.userId}})\r\n            } else if (isLike === false) {\r\n                await socket.emit(\"notification\", {\r\n                    receiver: data.userId,\r\n                    sender: {\r\n                        user: userDataReducer,\r\n                        content: {\r\n                            type: \"like\"\r\n                        }\r\n                    }\r\n                })\r\n                await axios.post(`http://localhost:3001/api/publications/like/add/${data.publicationId}`, {userId: userDataReducer.userId})\r\n                await axios.post(\"http://localhost:3001/api/notifications/add\", {\r\n                    receiver : data.userId,\r\n                    sender: userDataReducer.userId,\r\n                    type: \"like\"\r\n                })\r\n            }\r\n        }\r\n        setSpam(spam + 1)\r\n    }\r\n\r\n    const handleClickPublication = () => {\r\n        if (fullFile) {\r\n           dispatch({\r\n               type: \"OPEN_FULL_FILE\",\r\n               payload: data\r\n           })\r\n        } else {\r\n            history.push(`/publication/${data.publicationId}`, {\r\n                data: data,\r\n                path: location.pathname\r\n            })\r\n        }\r\n    }\r\n\r\n    const cssDelete = deleteMsg ? themeReducer ? \"publi-dark\" : \"publi\" : \"publi-none\"\r\n\r\n    return load ?\r\n        <div className={cssDelete}>\r\n\r\n            {deleteAlert ? <PublicationDelete setDeleteAlert={setDeleteAlert} deletePubli={() => handleDelete()} /> : null}\r\n\r\n            {data.userId === userDataReducer.userId\r\n            ? <div className=\"publi-delete-box\"> \r\n                <button className={themeReducer ? \"publi-delete-btn-dark\" : \"publi-delete-btn\"} onClick={() => setDeleteAlert(true)}>Delete</button>\r\n              </div>\r\n            : null}\r\n\r\n            <div className=\"publi-top\">  \r\n                <div className=\"info-publi\">\r\n                    <div className=\"left-publi\">\r\n                        <div className=\"left-publi-img-box\">\r\n                            <Link to={`/account/${data.userId}`}>\r\n                                <img className=\"left-publi-img\" src={data.userImageUrl} alt=\"Profile frame\"/>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"left-publi-info\">\r\n                            <Link to={`/account/${data.userId}`} className={themeReducer ? 'txt-dark' : \"left-publi-info-link\"}>{data.firstName} {data.lastName}</Link>\r\n                            <small className={themeReducer ? 'txt-dark' : null}>{moment(data.date).fromNow()}</small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-publi\">\r\n                        <p className={themeReducer ? 'txt-dark' : null}>{hashtag}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div onClick={() => data.type === \"video\" ? handleClickPublication() : null} className={data.type === \"video\" ? \"text-pointer text-publi\" : \"text-publi\"}>\r\n                    <p className={themeReducer ? 'txt-dark' : null}>{data.text}</p>\r\n                </div>\r\n            </div>\r\n                {data.publicationFileUrl != null \r\n                ?  <div className=\"bg-publi\">\r\n                    {data.type === \"image\"\r\n                    ?   <img className=\"bg-publi-img\" src={data.publicationFileUrl} onClick={() => handleClickPublication()} alt=\"Publication frame\"/>\r\n                    :   <Video data={data} />     \r\n                    }\r\n                  </div>\r\n                : null}\r\n\r\n                <div className=\"social-publi\">\r\n                    <div className=\"icon-publi-box\">\r\n                        <animated.i className=\"fas fa-heart icon-publi\"\r\n                        onClick={() => handleLike()}\r\n                         style={{\r\n                            color: x.interpolate({\r\n                                range: [0, 1],\r\n                                output: isLike ? ['#707070', '#ff4336'] : ['#ff4336', '#707070']\r\n                            }),\r\n                            transform: x.interpolate({\r\n                                range: [0, 0.2, 0.3, 0.5, 0.6, 0.7, 0.8, 1],\r\n                                output: [1, 0.9, 0.5, 1.2, 1, 0.8, 1.1, 1]\r\n                              }).interpolate(x => `scale(${x})`)\r\n                        }}></animated.i>\r\n                        <div className=\"icon-publi-animation\">\r\n                            {transitionLike.map(({item, key, props}) => item \r\n                                ? <animated.p key={key} style={props} className={themeReducer ? 'txt-dark' : null}>{dataLikes}</animated.p>\r\n                                : <animated.p key={key} style={props} className={themeReducer ? 'txt-dark' : null}>{isLike ? dataLikes - 1 : dataLikes + 1}</animated.p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"icon-publi-box\">\r\n                        <FontAwesomeIcon className=\"comment-publi icon-publi\" icon=\"comment\" />\r\n                        <p className={themeReducer ? 'txt-dark' : null}>{data.commentsTotal}</p>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    : <PublicationCardLoader/>\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\ModifyAccount.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\StoryCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\StreamCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\AccountLoader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationDelete.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Gifs.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\SuggestFriendCard.js",["255"],"import React, {useState} from 'react'\r\nimport \"../../Styles/services.css\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport {socket} from \"../../Api\"\r\nimport axios from \"axios\"\r\n\r\nexport default function SuggestFriendCard({ data }) {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const [waiting, setWaiting] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const handleClick = () => {\r\n        history.push(`/account/${data.userId}`)\r\n    }\r\n\r\n    const handleAddFriend = () => {\r\n        setWaiting(true)\r\n        axios.post(\"http://localhost:3001/api/notifications/add\", {\r\n            receiver : data.userId,\r\n            sender: userDataReducer.userId,\r\n            type: \"invitation\"\r\n        })\r\n        socket.emit(\"notification\", {\r\n            receiver: data.userId,\r\n            sender: {\r\n                user: userDataReducer,\r\n                content: {\r\n                    type: \"invitation\"\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={themeReducer ? \"suggestFriendCard-dark\" : \"suggestFriendCard\"}>\r\n            <div className=\"suggestFriendCard-top\">\r\n                <img src={data.profileImage} alt=\"Frame profile\" onClick={() => handleClick()} />\r\n            </div>\r\n            <div className=\"suggestFriendCard-bottom\">\r\n                <p className={themeReducer ? \"txt-dark\" : null} onClick={() => handleClick()}>{data.lastName} {data.firstName}</p>\r\n                <button className={themeReducer ? \"suggestFriendCard-btn-dark\" : \"suggestFriendCard-btn\"}>\r\n                    {waiting \r\n                    ?   <p className={themeReducer ? \"suggestFriendCard-btn-dark\" : \"suggestFriendCard-btn\"}>Waiting...</p>\r\n                    :   <p className={themeReducer ? \"suggestFriendCard-btn-dark\" : \"suggestFriendCard-btn\"} onClick={() => handleAddFriend()}>Add friend</p>     \r\n                    }\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\Index.js",["256"],"import React from 'react'\r\nimport \"../../Styles/gallery.css\"\r\n\r\nimport MainGallery from \"./MainGallery\"\r\n\r\nexport default function Index() {\r\n    return (\r\n        <section className=\"gallery\">\r\n            \r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\MainGallery.js",["257","258","259"],"import React, {useState, useEffect} from 'react'\r\nimport {useLocation, useHistory} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport PublicationComments from '../Publication/MainPublication'\r\nimport Video from \"../Publication/Video\"\r\n\r\nexport default function MainGallery() {  \r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [load, setLoad] = useState(false)\r\n    const [isEmpty, setIsEmpty] = useState(false)\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => { \r\n        // Get informations for account\r\n        let path, idPath\r\n        setLoad(false)\r\n        setIsEmpty(true)\r\n        \r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n        })\r\n\r\n        // Get userId\r\n        path = location.pathname\r\n        idPath = path.substr(9)\r\n        idPath = idPath.split('/')\r\n\r\n        const fetchDataAccount = async () => {\r\n                await axios.get(`http://localhost:3001/api/publications/account/${idPath[0]}`)\r\n                    .then(res => {\r\n                        if (res.data.length === 0) {\r\n                        } else {\r\n                            setIsEmpty(false)\r\n                            setData(res.data)\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err))\r\n                }\r\n                fetchDataAccount()\r\n                setLoad(true)\r\n        }, [location])\r\n\r\n        \r\n    const handleBack = () => {\r\n        let path = location.pathname\r\n        let lastPath = path.split('/gallery')\r\n        history.push(lastPath[0])\r\n    }\r\n\r\n    const handleClickPublication = item => {\r\n        let dataGallery = []\r\n        let dataGalleryIndex\r\n\r\n        // To seek for slider\r\n        data.forEach(publication => {\r\n            if (publication.type === item.type) dataGallery.push(publication)\r\n        })\r\n        // To search index of this publication\r\n        dataGalleryIndex = dataGallery.findIndex(publication => publication.publicationId === item.publicationId)\r\n\r\n        history.push(`/publication/${item.publicationId}`, {\r\n            data: item,\r\n            path: location.pathname,\r\n            isGallery: true,\r\n            dataGallery,\r\n            dataGalleryIndex\r\n        })\r\n    }\r\n\r\n    return ( load ?\r\n        <div className={themeReducer ? \"mainGallery-dark\" : \"mainGallery\"}>         \r\n            <FontAwesomeIcon onClick={() => handleBack()} icon=\"arrow-left\" className={themeReducer ? \"txt-dark gallery-icon\" : \"gallery-icon\"}/>\r\n            <div className=\"gallery-container\">\r\n                <h2 className={themeReducer ? \"txt-dark\" : null}>Images</h2>\r\n                <div className=\"gallery-content\">\r\n                    {isEmpty \r\n                    ?   <p className=\"gallery-empty\">This gallery seems very empty to me ...</p>\r\n                    :   data.map((item, index) => {\r\n                        return (\r\n                            item.type === \"image\" \r\n                            ?   <div onClick={() => handleClickPublication(item)} key={index} className=\"gallery-img\">\r\n                                    <img className=\"gallery-element\" src={item.publicationFileUrl} alt={`Frame publichsed of this user`} />\r\n                                </div>    \r\n                            : null           \r\n                        )})\r\n                    }\r\n                </div>\r\n            </div>\r\n                <div className=\"gallery-container gallery-container-video\">\r\n                    <h2 className={themeReducer ? \"txt-dark\" : null}>Videos</h2>\r\n                    <div className=\"gallery-content\">                        \r\n                        {isEmpty \r\n                        ?   <p className=\"gallery-empty\">This gallery seems very empty to me ...</p>\r\n                        :   data.map((item, index) => {\r\n                                return (\r\n                                    item.type === \"video\"\r\n                                    ?   <div onClick={() => handleClickPublication(item)} key={index} key={index} className=\"gallery-video\">\r\n                                            <Video clickNo={true} className=\"gallery-element\" data={{publicationFileUrl: item.publicationFileUrl}} />\r\n                                        </div>        \r\n                                    : null     \r\n                            )})\r\n                        }\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    :   <div className=\"mainGallery\"></div>)\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\MainFriends.js",["260"],"import React, {useState, useEffect} from 'react'\r\nimport {useLocation, useHistory} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport UserCard from \"../Connected/UserCard\"\r\n\r\nexport default function MainFriends() {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [load, setLoad] = useState(false)\r\n    const [isEmpty, setIsEmpty] = useState(false)\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => { \r\n        // Get informations for account\r\n        let path, idPath\r\n        setLoad(false)\r\n        setIsEmpty(true)\r\n        \r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n        })\r\n\r\n        // Get userId\r\n        path = location.pathname\r\n        idPath = path.substr(9)\r\n        idPath = idPath.split('/')\r\n\r\n        const fetchDataAccount = async () => {\r\n                await axios.get(`http://localhost:3001/api/user/userFriends/${idPath[0]}`)\r\n                    .then(res => {\r\n                        if (res.data.length === 0) {\r\n                        } else {\r\n                            setIsEmpty(false)\r\n                            setData(res.data)\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err))\r\n                }\r\n                fetchDataAccount()\r\n                setLoad(true)\r\n        }, [location])\r\n\r\n    const handleClickFriend = (friend) => {\r\n        history.push(`/account/${friend.userId}`)\r\n    }\r\n\r\n    const handleClickBack = () => {\r\n        let path = location.pathname\r\n        let lastPath = path.split('/friends')\r\n        history.push(lastPath[0])\r\n    }\r\n\r\n    return ( load ?\r\n        <div className={themeReducer ? \"mainFriends-dark\" : \"mainFriends\"}>\r\n            <FontAwesomeIcon onClick={() => handleClickBack()} icon=\"arrow-left\" className={themeReducer ? \"txt-dark friends-icon\" : \"friends-icon\"}/>\r\n            <div className=\"friends-container\">\r\n                <h2 className={themeReducer ? \"txt-dark\" : null}>Friends</h2>\r\n                <div className=\"friends-content\">\r\n                {isEmpty \r\n                    ?   <p className=\"friends-empty\">This user does not have friends ...</p>\r\n                    :   data.map((item, index) => {\r\n                        return (\r\n                            <div className=\"friend-card\" key={index} index={index} onClick={() => handleClickFriend(item)}>\r\n                                <UserCard tallCard={true}  noOpen={true} data={item} />   \r\n                            </div>\r\n                        )})\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    : <div className={themeReducer ? \"mainFriends-dark\" : \"mainFriends\"}></div>)\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\MainAbout.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Video.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\Notification.js",["261"],"import React, {useEffect, useState} from 'react'\r\nimport \"../../Styles/notifcation.css\"\r\nimport {useSelector} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport {useTransition, config, animated} from \"react-spring\"\r\nimport {socket} from \"../../Api\"\r\nimport axios from \"axios\"\r\nimport NotificationCard from \"./NotificationCard\"\r\n\r\nexport default function Notification() {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const [data, setData] = useState([])\r\n    const [count, setCount] = useState(0)\r\n    const [load, setLoad] = useState(false)\r\n    const [isAnimated, setIsAnimated] = useState(false)\r\n    const transitionContent = useTransition(isAnimated, null, {\r\n        from: {opacity: 0, transform: \"translateY(-300px)\", position: 'absolute'},\r\n        enter: {opacity: 1, transform: \"translateY(0)\", position: \"absolute\"},\r\n        leave: {opacity: 0, transform: \"translateY(-300px)\", position: 'absolute'},\r\n        config: config.stiff\r\n    })\r\n\r\n    socket.on(\"notification\", userData => {\r\n        setData([userData, ...data])\r\n        setCount(count + 1)\r\n    })\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            await axios.get(`http://localhost:3001/api/notifications/all/${userDataReducer.userId}`)\r\n                .then(res => {\r\n                    let _count = 0\r\n                    res.data.forEach(notif => {\r\n                        if (notif.content.view === 0) _count++\r\n                    })\r\n                    setCount(count + _count)\r\n                    setData(res.data)\r\n                })\r\n                .catch(err => console.log(err))\r\n            setLoad(true)\r\n        }\r\n        fetch()\r\n    }, [])\r\n\r\n    const handleClickHide = () => {\r\n        let changeData = []\r\n        setIsAnimated(!isAnimated)\r\n        setCount(0)\r\n\r\n        data.forEach(element => {\r\n            if (element.content.view === 0) changeData.push(element.content)\r\n        })\r\n\r\n        axios.put(\"http://localhost:3001/api/notifications/view/update\", changeData)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"notification\">\r\n        <div className=\"notification-icon-box\" onClick={() => handleClickHide()}>\r\n                <FontAwesomeIcon className={themeReducer ? \"notification-icon-dark\" : \"notification-icon\"} icon=\"bell\"/>\r\n                {count > 0 ? <div className=\"notification-icon-number\">{count}</div> : null}\r\n            </div>\r\n\r\n            {transitionContent.map(({item, key, props}) => item &&(\r\n                <animated.div className={themeReducer ? \"notification-card-dark\" : \"notification-card\"} key={key} style={props}>\r\n                    <div className=\"notification-top\">\r\n                        <p className={themeReducer ? \"txt-dark\" : null}>Notifications</p>\r\n                        <FontAwesomeIcon icon=\"times-circle\" className=\"notification-close-icon\" onClick={() => handleClickHide()} />\r\n                    </div>\r\n                   {load \r\n                   ? data.map((item, index) => {\r\n                        return (\r\n                            <NotificationCard isView={false} data={item} key={index} />\r\n                        )\r\n                    })\r\n                   : null\r\n                    }\r\n\r\n                </animated.div>\r\n            ))}\r\n    </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\NotificationCard.js",["262","263"],"import React, {useState, useEffect} from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport UserCard from '../Connected/UserCard'\r\nimport moment from \"moment\"\r\nimport axios from \"axios\"\r\n\r\nexport default function NotificationCard({ data }) {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const [message, setMessage] = useState(\"\")\r\n    const [load, setLoad] = useState(false)\r\n    const [isChoice, setIsChoice] = useState(false)\r\n    const [isView, setIsView] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setIsView(data.content.view)\r\n\r\n        switch (data.content.type) {\r\n            case \"like\":\r\n                setMessage(`To liked your post !`)\r\n                break;\r\n        \r\n            case \"comment\":\r\n                setMessage(`To commented your post !`)\r\n                break;\r\n\r\n            case \"invitation\":\r\n                setMessage(`To sent you a friend invitation !`)\r\n                break;\r\n                \r\n            default:\r\n                break;\r\n        }\r\n        setLoad(true)\r\n    }, [])\r\n\r\n    const handleClickInvitation = async choice => {\r\n        if (choice) setIsChoice(true)\r\n        else setLoad(false)\r\n        \r\n        await axios.delete(\"http://localhost:3001/api/notifications/delete\", {data: {\r\n            type: \"invitation\",\r\n            receiverId: data.content.receiverId,\r\n            senderId: data.content.senderId,\r\n            date: data.content.date\r\n        }})\r\n\r\n    }\r\n\r\n    const messageStyle = themeReducer ? \" notification-msg-dark \" : \" notification-msg \"\r\n    \r\n    return ( load ?\r\n        <div className=\"notification-element\">\r\n            <small className={themeReducer ? \"notification-time txt-dark\" : \"notification-time\"}>{moment(data.content.date).fromNow()}</small>\r\n            <div className=\"notification-user\">\r\n                <UserCard data={data.user} />   \r\n            </div>\r\n            <div className=\"notification-alert\">\r\n                <p className={isView ? messageStyle : messageStyle + \"noView\" }>{message}</p>\r\n               {!isView ? <div className=\"notification-new\"></div> : null}\r\n            </div>\r\n           {data.content.type === \"invitation\" \r\n           ? (!isChoice) \r\n                ?   <div className=\"notification-invitation\">\r\n                        <button onClick={() => handleClickInvitation(true)} className=\"notification-btn notification-btn-accept\">Accept</button>\r\n                        <button onClick={() => handleClickInvitation(false)} className=\"notification-btn notification-btn-refuse\">Refuse</button>\r\n                    </div>       \r\n                : null    \r\n            : null}\r\n        </div>\r\n    : null)\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\MainPublication.js",["264"],"import React, {useState, useEffect} from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport {useHistory, useLocation, useParams} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport PublicationCard from \"./PublicationCard\"\r\nimport moment from \"moment\"\r\nimport Loader from \"../Services/Loader\"\r\nimport axios from \"axios\"\r\nimport {socket} from \"../../Api\"\r\n\r\nexport default function MainPublication() {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const { slug } = useParams()\r\n    const [isBack, setIsBack] = useState(false)\r\n    const [data, setData] = useState(null)\r\n    const [load, setLoad] = useState(false)\r\n    const [alertMsg, setAlertMsg] = useState(\"\")\r\n    const [alertCss, setAletCss] = useState(true)\r\n    const [isLeft, setIsLeft] = useState(false)\r\n    const [isRight, setIsRight] = useState(false)\r\n    const [dataComments, setDataComments] = useState([])\r\n    const [dataNewPubli, setDataNewPubli] = useState({\r\n        userId: userDataReducer.userId,\r\n        text: \"\"\r\n    })\r\n    \r\n    useEffect(() => {\r\n        setLoad(false)\r\n        const fetchData = async () => {\r\n            if (typeof location.state === undefined || location.state === false) {\r\n                await axios.get(`http://localhost:3001/api/publications/one/${slug}`)\r\n                    .then(res => {\r\n                        setIsBack(false)\r\n                        setData(res.data[0])\r\n                    })\r\n                    .catch(err => console.log(err))\r\n            } else  {\r\n                // Hide arrow left and arrow right\r\n                if (location.state.isGallery) {\r\n                    const { dataGallery, dataGalleryIndex } = location.state\r\n                    if (dataGalleryIndex === 0) setIsLeft(false)\r\n                    else setIsLeft(true)\r\n                    if (dataGalleryIndex === dataGallery.length - 1) setIsRight(false)\r\n                    else setIsRight(true)                  \r\n                }\r\n                else {\r\n                    setIsLeft(false)\r\n                    setIsRight(false)\r\n                }\r\n                setIsBack(true)\r\n                setData(location.state.data)\r\n            }\r\n            \r\n            await axios.get(`http://localhost:3001/api/publications/comments/${slug}`)\r\n            .then(res => {\r\n                setDataComments(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n            setLoad(true)\r\n        }\r\n        fetchData()\r\n    }, [location])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (dataNewPubli.text.length > 2) {\r\n            axios.post(`http://localhost:3001/api/publications/comments/add/${data.publicationId}`, dataNewPubli)\r\n                .then(res => {\r\n                    setAletCss(false)\r\n                    setAlertMsg(\"Comment published !\")\r\n                    setDataComments([...dataComments, {\r\n                        text: dataNewPubli.text,\r\n                        userId: dataNewPubli.userId,\r\n                        lastName: userDataReducer.lastName,\r\n                        firstName: userDataReducer.firstName,\r\n                        profileImage: userDataReducer.profileImage,\r\n                        date: Date.now()\r\n                    }])\r\n                    axios.post(\"http://localhost:3001/api/notifications/add\", {\r\n                        receiver : data.userId,\r\n                        sender: userDataReducer.userId,\r\n                        type: \"comment\"\r\n                    })\r\n                    socket.emit(\"notification\", {\r\n                        receiver: data.userId,\r\n                        sender: {\r\n                            user: userDataReducer,\r\n                            content: {\r\n                                type: \"comment\"\r\n                            }\r\n                        }\r\n                    })\r\n                })  \r\n                .catch(err => console.log(err))  \r\n        } else {\r\n            setAletCss(true)\r\n            setAlertMsg(\"Your text must contain at least 2 characters !\")\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setDataNewPubli({...dataNewPubli, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const handleClickProfile = userId => {\r\n        history.push(`/account/${userId}`)\r\n    }\r\n\r\n    const handleBack = () => {\r\n        let path = location.state.path\r\n        history.push(path, true)\r\n    }\r\n\r\n    const handleNext = direction => {\r\n        if (typeof location.state.isGallery !== undefined) {       \r\n            const { dataGallery, dataGalleryIndex } = location.state\r\n            const pathGallery = location.state.path\r\n            let newIndex\r\n            let newPublication\r\n            \r\n            if (direction === \"left\" && isLeft) {\r\n                newIndex = dataGalleryIndex - 1\r\n                newPublication = dataGallery[newIndex]\r\n    \r\n                history.push(`/publication/${newPublication.publicationId}`, {\r\n                    data: newPublication,\r\n                    path: pathGallery,\r\n                    isGallery: true,\r\n                    dataGallery,\r\n                    dataGalleryIndex: newIndex\r\n                })\r\n            } else if (direction === \"right\" && isRight) {\r\n                newIndex = dataGalleryIndex + 1\r\n                newPublication = dataGallery[newIndex]\r\n    \r\n                history.push(`/publication/${newPublication.publicationId}`, {\r\n                    data: newPublication,\r\n                    path: pathGallery,\r\n                    isGallery: true,\r\n                    dataGallery,\r\n                    dataGalleryIndex: newIndex\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    window.onkeydown = e => {\r\n        if (e.repeat) return\r\n\r\n        if (e.key === \"ArrowLeft\") handleNext(\"left\")\r\n        else if (e.key === \"ArrowRight\") handleNext(\"right\")\r\n    }\r\n\r\n    return (load ?\r\n        <div className={themeReducer ? \"publi-open-dark\" : \"publi-open\"}>\r\n            <div className=\"publi-icon\">\r\n                {isBack ? <FontAwesomeIcon onClick={() => handleBack()} icon=\"arrow-left\" className={themeReducer ? \"txt-dark gallery-icon\" : \"gallery-icon\"}/> : null}\r\n            </div>\r\n            <div className=\"publi-open-bottom-container\">\r\n                <div className=\"publi-open-top\">\r\n                    {isLeft ? <FontAwesomeIcon onClick={() => handleNext(\"left\")} icon=\"chevron-left\" className={themeReducer ? \"txt-dark gallery-chevron-icon gallery-chevron-icon-left\" : \"gallery-chevron-icon gallery-chevron-icon-left\"}/> : null}\r\n                    <PublicationCard data={data} fullFile={true} />\r\n                    {isRight ? <FontAwesomeIcon onClick={() => handleNext(\"right\")} icon=\"chevron-right\" className={themeReducer ? \"txt-dark gallery-chevron-icon gallery-chevron-icon-right\" : \"gallery-chevron-icon gallery-chevron-icon-right\"}/> : null}\r\n                </div>\r\n\r\n                {dataComments.map((item, index) => {\r\n                    return (\r\n                        <div className={themeReducer ? \"publi-open-bottom-dark\" : \"publi-open-bottom\"} key={index}>\r\n                            <div className=\"publi-open-info-img-box\">\r\n                                <div className=\"publi-open-img\">\r\n                                    <img onClick={() => handleClickProfile(item.userId)} src={item.profileImage} alt=\"Frame profile\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"publi-open-info-txt-box\">\r\n                                <div className=\"publi-open-name\">\r\n                                    <p className={themeReducer ? 'txt-dark' : null}>{item.firstName} {item.lastName}</p>\r\n                                    <small className={themeReducer ? 'txt-dark' : null}>{moment(item.date).fromNow()}</small>\r\n                                </div>\r\n                                <div className=\"publi-open-info\">\r\n                                    <p className={themeReducer ? \"publi-open-txt txt-dark\" : \"publi-open-txt\"}>{item.text}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })} \r\n\r\n                <div className=\"new-publi\">\r\n                    {alertMsg === \"\" \r\n                    ?   null \r\n                    :   <div className={alertCss ? \"alert-danger\" : \"alert-success\"}>\r\n                            <p>{alertMsg}</p>\r\n                        </div>\r\n                    }\r\n                    <form className=\"write-publi\" onSubmit={e => handleSubmit(e)}>\r\n                        <FontAwesomeIcon className={themeReducer ? \"icon-new-publi txt-dark\" : \"icon-new-publi\"} icon=\"comments\" />\r\n                        <div className=\"input-new-publi\" type=\"text\">\r\n                            <textarea className={themeReducer ? \"publi-open-textarea input-dark border-none-dark\" : \"publi-open-textarea\"} placeholder=\"What do you mean ?\" name=\"text\" id=\"text\" onChange={e => handleChange(e)}></textarea>\r\n                        </div>\r\n                        <button className={themeReducer ? \"publi-open-btn btn-dark\" : \"publi-open-btn\"} type=\"submit\">SEND</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n    </div>\r\n    : <Loader />)\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\dataHomeReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\FullFile.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\fullFileReducer.js",[],{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":72,"column":6,"nodeType":"271","endLine":72,"endColumn":8,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":18,"column":29,"nodeType":"275","messageId":"276","endLine":18,"endColumn":31},{"ruleId":"269","severity":1,"message":"277","line":22,"column":8,"nodeType":"271","endLine":22,"endColumn":10,"suggestions":"278"},{"ruleId":"269","severity":1,"message":"279","line":20,"column":8,"nodeType":"271","endLine":20,"endColumn":10,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":4,"column":10,"nodeType":"283","messageId":"284","endLine":4,"endColumn":25},{"ruleId":"281","severity":1,"message":"285","line":20,"column":12,"nodeType":"283","messageId":"284","endLine":20,"endColumn":16},{"ruleId":"269","severity":1,"message":"286","line":85,"column":8,"nodeType":"271","endLine":85,"endColumn":10,"suggestions":"287"},{"ruleId":"281","severity":1,"message":"288","line":11,"column":8,"nodeType":"283","messageId":"284","endLine":11,"endColumn":27},{"ruleId":"269","severity":1,"message":"289","line":74,"column":8,"nodeType":"271","endLine":74,"endColumn":18,"suggestions":"290"},{"ruleId":"269","severity":1,"message":"279","line":92,"column":8,"nodeType":"271","endLine":92,"endColumn":10,"suggestions":"291"},{"ruleId":"281","severity":1,"message":"292","line":24,"column":12,"nodeType":"283","messageId":"284","endLine":24,"endColumn":18},{"ruleId":"281","severity":1,"message":"293","line":24,"column":20,"nodeType":"283","messageId":"284","endLine":24,"endColumn":29},{"ruleId":"269","severity":1,"message":"294","line":75,"column":8,"nodeType":"271","endLine":75,"endColumn":14,"suggestions":"295"},{"ruleId":"269","severity":1,"message":"279","line":14,"column":8,"nodeType":"271","endLine":14,"endColumn":10,"suggestions":"296"},{"ruleId":"269","severity":1,"message":"297","line":59,"column":12,"nodeType":"271","endLine":59,"endColumn":14,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":16,"column":17,"nodeType":"301","messageId":"302","endLine":16,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":20,"column":17,"nodeType":"301","messageId":"302","endLine":20,"endColumn":23},{"ruleId":"303","severity":1,"message":"304","line":23,"column":24,"nodeType":"305","endLine":23,"endColumn":78},{"ruleId":"299","severity":1,"message":"300","line":24,"column":17,"nodeType":"301","messageId":"302","endLine":24,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":28,"column":17,"nodeType":"301","messageId":"302","endLine":28,"endColumn":23},{"ruleId":"269","severity":1,"message":"306","line":57,"column":12,"nodeType":"271","endLine":57,"endColumn":14,"suggestions":"307"},{"ruleId":"281","severity":1,"message":"282","line":5,"column":10,"nodeType":"283","messageId":"284","endLine":5,"endColumn":25},{"ruleId":"281","severity":1,"message":"308","line":4,"column":8,"nodeType":"283","messageId":"284","endLine":4,"endColumn":19},{"ruleId":"281","severity":1,"message":"288","line":7,"column":8,"nodeType":"283","messageId":"284","endLine":7,"endColumn":27},{"ruleId":"269","severity":1,"message":"279","line":49,"column":12,"nodeType":"271","endLine":49,"endColumn":22,"suggestions":"309"},{"ruleId":"310","severity":1,"message":"311","line":105,"column":103,"nodeType":"312","endLine":105,"endColumn":114},{"ruleId":"269","severity":1,"message":"279","line":48,"column":12,"nodeType":"271","endLine":48,"endColumn":22,"suggestions":"313"},{"ruleId":"269","severity":1,"message":"314","line":46,"column":8,"nodeType":"271","endLine":46,"endColumn":10,"suggestions":"315"},{"ruleId":"281","severity":1,"message":"316","line":10,"column":11,"nodeType":"283","messageId":"284","endLine":10,"endColumn":26},{"ruleId":"269","severity":1,"message":"317","line":36,"column":8,"nodeType":"271","endLine":36,"endColumn":10,"suggestions":"318"},{"ruleId":"269","severity":1,"message":"319","line":67,"column":8,"nodeType":"271","endLine":67,"endColumn":18,"suggestions":"320"},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authCookie' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["323"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'history.location.state' and 'slug'. Either include them or remove the dependency array.",["324"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["325"],"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'chat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleOpenChat', 'sendMyConnectionOnTime', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["326"],"'PublicationComments' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'slug', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["327"],["328"],"'urlGif' is assigned a value but never used.","'setUrlGif' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'fetchRoomId', 'index', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["329"],["330"],"React Hook useEffect has missing dependencies: 'dataHomeReducer.countPublication', 'dataHomeReducer.publications', 'dataHomeReducer.scrollTop', 'dataHomeReducer.suggestFirends', 'dispatch', 'getPublications', 'getSuggestFriend', and 'location.state'. Either include them or remove the dependency array.",["331"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'data.hashtag', 'data.publicationId', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["332"],"'MainGallery' is defined but never used.",["333"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["334"],"React Hook useEffect has missing dependencies: 'count' and 'userDataReducer.userId'. Either include them or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["335"],"'userDataReducer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.content.type' and 'data.content.view'. Either include them or remove the dependency array. If 'setIsView' needs the current value of 'data.content.view', you can also switch to useReducer instead of useState and read 'data.content.view' in the reducer.",["336"],"React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["337"],"no-global-assign","no-unsafe-negation",{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"342","fix":"348"},{"desc":"349","fix":"350"},{"desc":"342","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"356","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},"Update the dependencies array to be: [authCookie, dispatch]",{"range":"365","text":"366"},"Update the dependencies array to be: [history.location.state, slug]",{"range":"367","text":"368"},"Update the dependencies array to be: [dispatch]",{"range":"369","text":"370"},"Update the dependencies array to be: [handleOpenChat, sendMyConnectionOnTime, userDataReducer.userId]",{"range":"371","text":"372"},"Update the dependencies array to be: [dispatch, history, location, slug, userDataReducer.userId]",{"range":"373","text":"374"},{"range":"375","text":"370"},"Update the dependencies array to be: [data, dispatch, fetchRoomId, index, userDataReducer.userId]",{"range":"376","text":"377"},{"range":"378","text":"370"},"Update the dependencies array to be: [dataHomeReducer.countPublication, dataHomeReducer.publications, dataHomeReducer.scrollTop, dataHomeReducer.suggestFirends, dispatch, getPublications, getSuggestFriend, location.state]",{"range":"379","text":"380"},"Update the dependencies array to be: [data.hashtag, data.publicationId, userDataReducer.userId]",{"range":"381","text":"382"},"Update the dependencies array to be: [dispatch, location]",{"range":"383","text":"384"},{"range":"385","text":"384"},"Update the dependencies array to be: [count, userDataReducer.userId]",{"range":"386","text":"387"},"Update the dependencies array to be: [data.content.type, data.content.view]",{"range":"388","text":"389"},"Update the dependencies array to be: [location, slug]",{"range":"390","text":"391"},[3099,3101],"[authCookie, dispatch]",[649,651],"[history.location.state, slug]",[635,637],"[dispatch]",[3903,3905],"[handleOpenChat, sendMyConnectionOnTime, userDataReducer.userId]",[2965,2975],"[dispatch, history, location, slug, userDataReducer.userId]",[3081,3083],[2780,2786],"[data, dispatch, fetchRoomId, index, userDataReducer.userId]",[361,363],[2331,2333],"[dataHomeReducer.countPublication, dataHomeReducer.publications, dataHomeReducer.scrollTop, dataHomeReducer.suggestFirends, dispatch, getPublications, getSuggestFriend, location.state]",[2465,2467],"[data.hashtag, data.publicationId, userDataReducer.userId]",[1691,1701],"[dispatch, location]",[1623,1633],[1823,1825],"[count, userDataReducer.userId]",[1123,1125],"[data.content.type, data.content.view]",[2698,2708],"[location, slug]"]