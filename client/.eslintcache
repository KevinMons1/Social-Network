[{"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\index.js":"1","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\themeReducer.js":"2","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\zIndexReducer.js":"3","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\reportWebVitals.js":"4","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\userDataReducer.js":"5","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\App.js":"6","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Index.js":"7","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\Index.js":"8","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\Index.js":"9","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Loader.js":"10","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Error.js":"11","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Signup.js":"12","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Live.js":"13","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\Index.js":"14","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\Connected.js":"15","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\Header.js":"16","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\PasswordForget.js":"17","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Login.js":"18","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\MainAccount.js":"19","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\MainChat.js":"20","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\MainGaming.js":"21","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Assets\\fontawesome.js":"22","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\ChatDiv.js":"23","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\ChatEmpty.js":"24","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\MainHome.js":"25","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\UserCard.js":"26","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Api.js":"27","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\RemoveFriend.js":"28","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\NewPubliBox.js":"29","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCardLoader.js":"30","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\Message.js":"31","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCard.js":"32","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\ModifyAccount.js":"33","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationComments.js":"34","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\StoryCard.js":"35","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\StreamCard.js":"36","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\AccountLoader.js":"37","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationDelete.js":"38","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Gifs.js":"39","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\SuggestFriendCard.js":"40","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\Index.js":"41","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\MainGallery.js":"42","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\Index.js":"43","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\Index.js":"44","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\MainFriends.js":"45","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\MainAbout.js":"46","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Video.js":"47","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\Notification.js":"48","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\NotificationCard.js":"49"},{"size":798,"mtime":1614421732060,"results":"50","hashOfConfig":"51"},{"size":253,"mtime":1609689546345,"results":"52","hashOfConfig":"51"},{"size":345,"mtime":1614605527440,"results":"53","hashOfConfig":"51"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"51"},{"size":389,"mtime":1615311926908,"results":"55","hashOfConfig":"51"},{"size":4697,"mtime":1617270197391,"results":"56","hashOfConfig":"51"},{"size":230,"mtime":1614352130381,"results":"57","hashOfConfig":"51"},{"size":1022,"mtime":1615279615021,"results":"58","hashOfConfig":"51"},{"size":268,"mtime":1614258655375,"results":"59","hashOfConfig":"51"},{"size":587,"mtime":1613562962346,"results":"60","hashOfConfig":"51"},{"size":612,"mtime":1615018607179,"results":"61","hashOfConfig":"51"},{"size":5293,"mtime":1615018327290,"results":"62","hashOfConfig":"51"},{"size":1426,"mtime":1614423150275,"results":"63","hashOfConfig":"51"},{"size":403,"mtime":1614967702039,"results":"64","hashOfConfig":"51"},{"size":6666,"mtime":1617295332109,"results":"65","hashOfConfig":"51"},{"size":4833,"mtime":1617210581982,"results":"66","hashOfConfig":"51"},{"size":1295,"mtime":1610908278238,"results":"67","hashOfConfig":"51"},{"size":3529,"mtime":1612101159703,"results":"68","hashOfConfig":"51"},{"size":11582,"mtime":1617385822341,"results":"69","hashOfConfig":"51"},{"size":401,"mtime":1615279961217,"results":"70","hashOfConfig":"51"},{"size":4994,"mtime":1614423157444,"results":"71","hashOfConfig":"51"},{"size":688,"mtime":1617210680967,"results":"72","hashOfConfig":"51"},{"size":8256,"mtime":1617294085491,"results":"73","hashOfConfig":"51"},{"size":519,"mtime":1615279429993,"results":"74","hashOfConfig":"51"},{"size":5638,"mtime":1615974108052,"results":"75","hashOfConfig":"51"},{"size":1721,"mtime":1617273898348,"results":"76","hashOfConfig":"51"},{"size":546,"mtime":1617294029444,"results":"77","hashOfConfig":"51"},{"size":2291,"mtime":1614356831388,"results":"78","hashOfConfig":"51"},{"size":9831,"mtime":1615829251954,"results":"79","hashOfConfig":"51"},{"size":1357,"mtime":1614077360624,"results":"80","hashOfConfig":"51"},{"size":1432,"mtime":1615796713765,"results":"81","hashOfConfig":"51"},{"size":7860,"mtime":1617385505670,"results":"82","hashOfConfig":"51"},{"size":10280,"mtime":1615828726401,"results":"83","hashOfConfig":"51"},{"size":7467,"mtime":1617385331834,"results":"84","hashOfConfig":"51"},{"size":578,"mtime":1611394752841,"results":"85","hashOfConfig":"51"},{"size":1872,"mtime":1617184445930,"results":"86","hashOfConfig":"51"},{"size":2382,"mtime":1613666934268,"results":"87","hashOfConfig":"51"},{"size":1891,"mtime":1614959342211,"results":"88","hashOfConfig":"51"},{"size":1119,"mtime":1615736624500,"results":"89","hashOfConfig":"51"},{"size":2145,"mtime":1615974508961,"results":"90","hashOfConfig":"51"},{"size":254,"mtime":1616943676348,"results":"91","hashOfConfig":"51"},{"size":4658,"mtime":1617182519180,"results":"92","hashOfConfig":"51"},{"size":244,"mtime":1617181268623,"results":"93","hashOfConfig":"51"},{"size":254,"mtime":1617182172287,"results":"94","hashOfConfig":"51"},{"size":2998,"mtime":1617274082465,"results":"95","hashOfConfig":"51"},{"size":162,"mtime":1617181296625,"results":"96","hashOfConfig":"51"},{"size":3059,"mtime":1617097310924,"results":"97","hashOfConfig":"51"},{"size":3223,"mtime":1617386435129,"results":"98","hashOfConfig":"51"},{"size":2621,"mtime":1617386054875,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"rdbbsr",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\index.js",[],["212","213"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\themeReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\zIndexReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\reportWebVitals.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\userDataReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\App.js",["214","215"],"//TODO -> Protéger ces Routes plus tard\n//TODO -> thème en cookie\n//TODO -> Faire un slide avec useSpring ou useGesture pour la gallery avec les images au click\n//TODO -> avec react-web-notification, faire des notif browser quand il y a une notif\n\nimport {useEffect, useState} from \"react\"\nimport \"./Styles/app.css\"\nimport {Route, Switch, useLocation} from 'react-router-dom'\nimport Cookie from \"js-cookie\"\nimport axios from \"axios\"\nimport io from 'socket.io-client'\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {useTransition, animated, config} from \"react-spring\"\n\n// Components\nimport Header from \"./Components/Header/Header\"\nimport Connected from \"./Components/Connected/Connected\"\nimport Home from \"./Components/Home/Index\"\nimport Chat from \"./Components/Chat/Index\"\nimport Account from \"./Components/Account/Index\"\nimport Gallery from \"./Components/Gallery/Index\"\nimport Friends from \"./Components/Friends/Index\"\nimport About from \"./Components/About/Index\"\nimport Gaming from \"./Components/Gaming/Index\"\nimport Live from \"./Components/Gaming/Live\"\nimport Login from \"./Components/Connexion/Login\"\nimport Signup from \"./Components/Connexion/Signup\"\nimport PasswordForget from \"./Components/Connexion/PasswordForget\"\nimport Error from \"./Components/Services/Error\"\nimport Loader from \"./Components/Services/Loader\"\n\nfunction App() {\n\n  const authCookie = Cookie.get(\"user\")\n  const themeReduceur = useSelector(state => state.Theme)\n  const zIndexReduceur = useSelector(state => state.ZIndexReduceur)\n  const [authorization, setAuthorization] = useState(false)\n  const [load, setLoad] = useState(false)\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const verifyPathname = () => {\n    // Avoid listen pathname /:slug on root chat for not repeat animation and refresh page each change path\n    if (location.pathname.includes(\"/chat/\")) {\n      if (location.pathname.includes(\"/chat/empty\")) return true\n      return false\n    } else return true\n  }\n  const transitions = useTransition(location, location => location.pathname, {\n    from: verifyPathname() ? {opacity: 0, transform: 'translate3d(-50%, 0, 0)', position: 'absolute'} : {opacity: 1, transform: 'translate3d(0, 0, 0)', position: 'absolute'},\n    enter: verifyPathname() ? {opacity: 1, transform: 'translate3d(0%, 0, 0)'} : {opacity: 1, transform: 'translate3d(0, 0, 0)'},\n    leave: verifyPathname() ? {opacity: 0, transform: 'translate3d(50%, 0, 0)'} : {opacity: 1, transform: 'translate3d(0, 0, 0)'},\n    config: config.stiff\n  })\n\n  useEffect(() => {\n    const fecthData = async () => {\n      await axios.post(\"http://localhost:3001/api/auth/login-token\", {cookie: authCookie})\n        .then(res => {\n          setAuthorization(res.data.authorization)\n          if (res.data.authorization) {\n            dispatch({\n              type: \"ADD_DATA\",\n              payload: res.data.informations\n            })\n          }\n        })\n        .catch(err => console.log(err))\n        setLoad(true)\n    }\n    fecthData()\n  }, [])\n\n  return (\n    load \n      ? authorization \n        ? \n          <div className={themeReduceur ? \"App-dark\" : \"App\"}>\n            <Header />\n            <div className=\"container\">\n              {transitions.map(({item: location, props, key}) => {\n                return (\n                  <animated.div key={key} style={props} className={zIndexReduceur ? \"container-anim container-index\" : \"container-anim\"}>\n                    <Switch location={location}>\n                      <Route exact path=\"/\" component={Home} /> \n                      <Route exact path=\"/account/:slug\" component={Account} />\n                      <Route exact path=\"/account/:slug/gallery\" component={Gallery} />\n                      <Route exact path=\"/account/:slug/friends\" component={Friends} />\n                      <Route exact path=\"/account/:slug/about\" component={About} />\n                      <Route exact path=\"/gaming\" component={Gaming} />\n                      <Route excat path=\"/gaming/live/:slug\" component={Live} />\n                      <Route exact path=\"/chat/:slug\" component={Chat} />\n                      <Route component={Error} />\n                    </Switch>\n                  </animated.div>\n                )\n              })}\n            </div>\n            <Connected choiceCss={true} />\n          </div>\n      \n          : <Switch>\n            <Route exact path={[\"/login\", \"/\"]} component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/password-forget\" component={PasswordForget} />\n            <Route component={Error} />\n          </Switch>\n      : <Loader />\n  );\n\n}\n\nexport default App;\n\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\Index.js",["216","217"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from \"react-router-dom\"\r\nimport \"../../Styles/chat.css\"\r\n\r\n//Components\r\nimport MainChat from \"./MainChat\"\r\nimport Connected from \"../Connected/Connected\"\r\nimport ChatEmpty from \"./ChatEmpty\"\r\n\r\nexport default function Index() {\r\n\r\n    const [friendClick, setFriendClick] = useState(false)\r\n    const [data, setData] = useState(null)\r\n    const { slug } = useParams()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (slug.toString() != \"empty\") {\r\n            setFriendClick(true)\r\n            setData(history.location.state)\r\n        }\r\n    }, [])\r\n\r\n    const handleFriendClick = (data) => {\r\n        history.push({pathname: `/chat/${data.userId}`, state: data})\r\n    }\r\n\r\n    return (\r\n        <section className=\"chat\">\r\n            <Connected choiceCss={false} friendClick={(data) => handleFriendClick(data)} />\r\n            {friendClick ? <MainChat data={data} /> : <ChatEmpty />}\r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Loader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Error.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Signup.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Live.js",["218"],"import React, {useEffect} from 'react'\r\nimport \"../../Styles/gaming.css\"\r\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\"\r\nimport {Link, useParams} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\n\r\nexport default function Live() {\r\n\r\n    let {slug} = useParams()\r\n    const dispatch = useDispatch()\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n    }, [])\r\n\r\n    return (\r\n        <section className=\"gaming\">\r\n            <div className={themeReducer? \"mainLive-dark\" : \"mainLive\"}>\r\n                <div className=\"live-stream\">\r\n                    <ReactTwitchEmbedVideo \r\n                        width=\"100%\" \r\n                        height=\"100%\" \r\n                        channel={slug} \r\n                        theme={themeReducer? \"dark\" : \"light\"} \r\n                    />\r\n                </div>\r\n                <div className=\"live-back\">\r\n                    <Link to=\"/gaming\">\r\n                        <FontAwesomeIcon className={themeReducer? \"chevron-icon-dark\" : \"chevron-icon\"} icon=\"chevron-left\" />\r\n                    </Link>\r\n                </div>                \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\Index.js",["219"],"import React, {useState} from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport \"../../Styles/home.css\"\r\n\r\n//Components\r\nimport MainHome from \"./MainHome\"\r\n\r\nexport default function Index() {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n\r\n    return (\r\n        <section className={themeReducer ? \"home-dark\" : \"home\"}>\r\n            <MainHome />\r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\Connected.js",["220","221"],"import React, {useEffect, useState} from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport \"../../Styles/connected.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport {useTransition, config, animated} from \"react-spring\"\r\nimport {socket} from \"../../Api\"\r\nimport UserCard from './UserCard'\r\nimport ChatDiv from '../ChatDiv/ChatDiv'\r\nimport Notification from '../Notification/Notification'\r\n\r\nexport default function Connected({choiceCss, friendClick}) {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const [usersCard, setUsersCard] = useState([])\r\n    const [usersCardChat, setUsersCardChat] = useState([])\r\n    const [load, setLoad] = useState(false)\r\n    const [chat, setChat] = useState(false)\r\n    const [isAnimated, setIsAnimated] = useState(false)\r\n    const [friendEmpty, setFriendEmpty] = useState(false)\r\n    const [userCardClick, setUserCardClick] = useState(null)\r\n    const [friendsConnected, setFriendsConnected] = useState([])\r\n    const transitionContent = useTransition(isAnimated, null, {\r\n        from: {opacity: 0, transform: \"translateY(500px)\", position: 'absolute'},\r\n        enter: {opacity: 1, transform: \"translateY(0)\", position: \"absolute\"},\r\n        leave: {opacity: 0, transform: \"translateY(500px)\", position: 'absolute'},\r\n        config: config.stiff\r\n    })\r\n\r\n    socket.on('sendMyConnection', friendId => {\r\n        // See if friendId is already encoding\r\n        let isFind = friendsConnected.find(friend => friend === friendId)\r\n        if (typeof isFind !== 'number') {\r\n            setFriendsConnected([...friendsConnected, friendId])\r\n            let updateUsersCard = usersCard.map(item => {\r\n                if (item.props.data.userId === friendId) {\r\n                    return <UserCard isConnected={true} data={item.props.data} text={false} noGreenBubble={true} open={() => handleOpenChat(item.props.data)} />\r\n                }\r\n                return item\r\n            })\r\n            setUsersCard(updateUsersCard)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        // Send userId on server for realTime components\r\n        socket.emit('userConnected', userDataReducer.userId)\r\n\r\n        let friends = []\r\n        const fetchData = async () => {\r\n            await axios.get(`http://localhost:3001/api/user/userFriends/${userDataReducer.userId}`)\r\n            .then(res => {\r\n                // if res.data === true but this user haven't friends\r\n                if (res.data) {\r\n                    res.data.forEach(friend => {\r\n                        setUsersCard(usersCard => [...usersCard, <UserCard data={friend} text={false} open={() => handleOpenChat(friend)} />])\r\n                        friends.push(friend.userId)\r\n                    })         \r\n                } else {\r\n                    setFriendEmpty(true)\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n            await axios.get(`http://localhost:3001/api/user/connected/friends/chat/${userDataReducer.userId}`)\r\n            .then(res => { \r\n                setFriendEmpty(true)       \r\n                res.data.forEach(friend => {\r\n                    if (friend != null) {\r\n                        setUsersCardChat(usersCardChat => [...usersCardChat, <UserCard data={friend} text={true} open={() => handleOpenChat(friend)} />])      \r\n                        setFriendEmpty(false)      \r\n                    }\r\n                })               \r\n            })\r\n            .catch(err => console.log(err))\r\n            await socket.emit(\"sendMyConnection\",  {\r\n                userId: userDataReducer.userId,\r\n                friends\r\n            })\r\n            setLoad(true)\r\n            sendMyConnectionOnTime(friends)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    // To give the connection to those who connected after using it\r\n    const sendMyConnectionOnTime = (friends) => {\r\n        setTimeout(() => {\r\n            socket.emit('sendMyConnection', {\r\n                userId: userDataReducer.userId,\r\n                friends\r\n            }) \r\n            sendMyConnectionOnTime(friends)\r\n        }, 300000);\r\n    }\r\n\r\n    const handleCloseChat = () => {\r\n        setIsAnimated(false)\r\n        setTimeout(() => {\r\n            setChat(false)\r\n        }, 200);\r\n    }\r\n\r\n    const handleOpenChat = (friendData) => {\r\n        if (choiceCss) {\r\n            setUserCardClick(<ChatDiv index={false} closeChat={handleCloseChat} choiceCss={true} data={friendData} />)\r\n            setIsAnimated(true)\r\n            setChat(true)\r\n        } else {\r\n            friendClick(friendData)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={themeReducer ? \"connected-dark\" : \"connected\"}>\r\n            <div className=\"connected-title-box\">\r\n                <p className={themeReducer ? \"connected-title-dark\" : \"connected-title\"}>Connected</p>\r\n                <Notification />\r\n            </div>\r\n\r\n            <div className=\"connected-top\">\r\n                <div className=\"friends-boxs\">                     \r\n                    {load \r\n                    ? usersCard.map((item, index) => {\r\n                        return <div key={index}>{item}</div>\r\n                        })   \r\n                    : null}  \r\n                </div>\r\n                <div className={themeReducer.Theme ? \"search-top-dark connected-search\" : \"search-top connected-search\"}>\r\n                    <FontAwesomeIcon className=\"search-icon\" icon=\"search\" />\r\n                    <input className={themeReducer.Theme ? \"search txt-dark\" : \"search\"} type=\"text\" placeholder=\"Search...\"/>\r\n                </div>\r\n            </div>\r\n             \r\n             <div>\r\n                {transitionContent.map(({item, key, props}) => item &&(\r\n                    <animated.div className={themeReducer ? \"connected-chat-dark\" : \"connected-chat\"} key={key} style={props}>{userCardClick}</animated.div>\r\n                ))}\r\n                <div className=\"connected-bottom\">\r\n                        <div className=\"friends-boxs\">             \r\n                            {load \r\n                            ? friendEmpty \r\n                                ? <small>You are not friends !</small>\r\n                                :  usersCardChat.map((item, index) => {\r\n                                    return <div key={index}>{item}</div>\r\n                                    }) \r\n                            : null}  \r\n                        </div>  \r\n                </div>  \r\n             </div>\r\n        </section>\r\n    )\r\n}","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\Header.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\PasswordForget.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Login.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\MainAccount.js",["222"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\MainChat.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\MainGaming.js",["223"],"import React, {useState, useEffect} from 'react'\r\nimport \"../../Styles/gaming.css\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {apiTwitch} from \"../../Api\"\r\nimport StreamCard from \"./StreamCard\"\r\nimport PublicationCardLoader from \"../Publication/PublicationCardLoader\"\r\n\r\nexport default function MainGaming() {\r\n\r\n    const dispatch = useDispatch()\r\n    const [streams, setStreams] = useState([])\r\n    const [getApi, setGetApi] = useState([])\r\n    const [load, setLoad] = useState(false)\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    // Take all informations for modify each url with good params\r\n    useEffect(() => {\r\n\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n\r\n        const fetchData = async () => {\r\n            const res = await apiTwitch.get('https://api.twitch.tv/helix/streams?first=100')\r\n            let dataArray = res.data.data\r\n            setGetApi(dataArray)\r\n\r\n            let gameIDs = dataArray.map(stream => {\r\n                return stream.game_id\r\n            })\r\n\r\n            let userIDs = dataArray.map(stream => {\r\n                return stream.user_id\r\n            })\r\n\r\n            // Create URL\r\n            let urlGames = \"https://api.twitch.tv/helix/games?\"\r\n            let urlUsers = \"https://api.twitch.tv/helix/users?\"\r\n\r\n            let queryParamsGame = \"\"\r\n            let queryParamsUser = \"\"\r\n\r\n            gameIDs.map(id => {\r\n                return (queryParamsGame = queryParamsGame + `id=${id}&`)\r\n            })\r\n\r\n            userIDs.map(id => {\r\n                return (queryParamsUser = queryParamsUser + `id=${id}&`)\r\n            })\r\n\r\n            let urlFinalGames = urlGames + queryParamsGame\r\n            let urlFinalUsers = urlUsers + queryParamsUser\r\n\r\n            // Call URL\r\n            let gamesCall = await apiTwitch.get(urlFinalGames)\r\n            let usersCall = await apiTwitch.get(urlFinalUsers)\r\n\r\n            let gamesCallArray = gamesCall.data.data\r\n            let usersCallArray = usersCall.data.data\r\n\r\n            let newUrl = \"\"\r\n\r\n            // Array Final\r\n            let finalArray = dataArray.map(stream => {\r\n                stream.gameName = \"\"\r\n                stream.login = \"\"\r\n                stream.channelImg = \"\"\r\n\r\n                newUrl = stream.thumbnail_url\r\n                .replace('{width}', '480')\r\n                .replace('{height}', '270')\r\n\r\n                stream.streamImg = newUrl\r\n\r\n                gamesCallArray.forEach(name => {\r\n                    usersCallArray.forEach(user => {\r\n                        if (stream.user_id === user.id && stream.game_id === name.id) {\r\n                            stream.gameName = name.name\r\n                            stream.channelImg = user.profile_image_url\r\n                            stream.login = user.login\r\n                        }\r\n                    })\r\n                })\r\n\r\n                return stream\r\n            })\r\n            setStreams(finalArray)\r\n            setLoad(true)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const handleLanguage = choice => {\r\n        let newDataArray = [];\r\n\r\n        //Sort by lang\r\n        if (choice !== \"all\") {\r\n            for (let i = 0; i < getApi.length; i++) {\r\n                if (getApi[i].language === choice) {\r\n                    newDataArray.push(getApi[i])\r\n                }\r\n            }\r\n        } else return setStreams(getApi)\r\n\r\n        return setStreams(newDataArray)\r\n    }\r\n    \r\n    return (\r\n        <div className={themeReducer ? \"mainGaming-dark\" : \"mainGaming\"}>\r\n\r\n            <div className=\"gaming-lang\">\r\n                <div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"all\")}>\r\n                    <p>ALL</p>\r\n                </div>\r\n                <div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"en\")}>\r\n                    <p>EN</p>\r\n                </div><div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"fr\")}>\r\n                    <p>FR</p>\r\n                </div>\r\n            </div>\r\n            {load \r\n            ? streams.map((stream, index) => {\r\n                return (\r\n                    <StreamCard \r\n                        login={stream.login}\r\n                        name={stream.user_name}\r\n                        channelImg={stream.channelImg} \r\n                        streamImg={stream.streamImg}\r\n                        viewerCount={stream.viewer_count}\r\n                        gamePlay={stream.gameName} \r\n                        key={index} \r\n                    />\r\n                )\r\n            })  \r\n            : <div className=\"streamCardLoader\">\r\n                <PublicationCardLoader />\r\n                <PublicationCardLoader />\r\n                <PublicationCardLoader />\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Assets\\fontawesome.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\ChatDiv.js",["224","225","226"],"import React, {useEffect, useState, useRef} from 'react'\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport \"../../Styles/chat.css\"\r\nimport {useParams} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport {socket} from \"../../Api\"\r\nimport imageCompression from \"browser-image-compression\"\r\nimport UserCard from '../Connected/UserCard'\r\nimport Message from \"./Message\"\r\nimport Gifs from \"../Services/Gifs\"\r\n\r\nexport default function ChatDiv({choiceCss, closeChat, data, index}) {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const messageRef = useRef()\r\n    const chatRef = useRef()\r\n    const openFile = useRef()\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams()\r\n    const [searchGif, setSearchGif] = useState(\"dogs\")\r\n    const [urlGif, setUrlGif] = useState(\"\")\r\n    const [gifVisible, setGifVisible] = useState(false)\r\n    const [load, setLoad] = useState(false)\r\n    const [allMessages, setAllMessages] = useState([])\r\n    const [roomId, setRoomId] = useState(null)\r\n    const [message, setMessage] = useState({\r\n        text: \"\",\r\n        sender: userDataReducer.userId,\r\n        receiver: data.userId,\r\n        type: \"text\"\r\n    })\r\n\r\n    /*\r\n    ----- Socket.io for a real time chat -----\r\n    */\r\n\r\n    // Send message\r\n    socket.on('newMessage', dataMessage => {\r\n        const id = slug === undefined ? data.userId : slug\r\n        if (dataMessage.sender.toString() === id.toString()) {\r\n            setAllMessages([...allMessages, dataMessage])\r\n        }\r\n    })\r\n    \r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            await dispatch({\r\n                type: \"CHANGE_ZINDEX\",\r\n                payload: index\r\n            })\r\n            // get roomId\r\n            const dataFetchRoomId = await fetchRoomId()\r\n            const dataRoomId = dataFetchRoomId.data.roomId\r\n            // get message in room with roomId\r\n            const dataFetchMessages = await fetchMessages(dataRoomId)\r\n            const dataMessages = dataFetchMessages.data\r\n            // not continue if haven't messages\r\n            if (dataMessages.length > 0) {\r\n                setAllMessages(dataMessages)\r\n            } else {\r\n                setAllMessages([])\r\n            }\r\n            setRoomId(dataRoomId)\r\n            await socket.emit('userConnectedOnChat', userDataReducer.userId)\r\n            setLoad(true)\r\n            // Scrollbar appears at the bottom by default\r\n            setTimeout(() => {\r\n                chatRef.current.scrollTop = chatRef.current.scrollHeight\r\n            }, 250)\r\n        }\r\n        fetch()\r\n    }, [data])\r\n\r\n    const fetchRoomId = async () => {\r\n        return await new Promise(resolve => {\r\n            const id = slug === undefined ? data.userId : slug\r\n            const dataFetch = axios.post(`http://localhost:3001/api/chat/getRoom/${id}`, {userId: userDataReducer.userId})\r\n            resolve(dataFetch)\r\n        })\r\n    }\r\n\r\n    const fetchMessages = async (id) => {\r\n        return await new Promise(resolve => {\r\n            const dataFetch = axios.get(`http://localhost:3001/api/chat/getContent/${id}`)\r\n            resolve(dataFetch)\r\n        })\r\n    }\r\n\r\n    const handleClickFile = () => {\r\n        openFile.current.click()\r\n    }\r\n\r\n    const handleSubmitText = e => {\r\n        e.preventDefault()\r\n        setAllMessages([...allMessages, message])\r\n\r\n        socket.emit('sendMessage', message)\r\n        axios.post(`http://localhost:3001/api/chat/addMessage/${roomId}`, message)\r\n        setMessage({...message, text: \"\"})\r\n        messageRef.current.value = \"\"\r\n    } \r\n\r\n    const handleSubmitImage = e => {\r\n        let imageFile = e.target.files[0]\r\n        let options = {\r\n          maxSizeMB: 0.5,\r\n          maxWidthOrHeight: 1920,\r\n          useWebWorker: true\r\n        }\r\n\r\n        imageCompression(imageFile, options)\r\n          .then(compressedFile => {\r\n                let formData = new FormData()\r\n                formData.append('file', compressedFile)\r\n                formData.append('id', userDataReducer.userId)\r\n                axios.post(`http://localhost:3001/api/chat/addImage/${roomId}`, formData)\r\n                    .then(res => {\r\n                        const newImage = {\r\n                            sender: message.sender,\r\n                            receiver: message.receiver,\r\n                            text: res.data,\r\n                            type: \"image\"\r\n                        }\r\n                        socket.emit('sendMessage', newImage)\r\n                        setAllMessages([...allMessages, newImage])\r\n                    })\r\n                    .catch(err => console.log(err))\r\n          })\r\n          .catch(error => {\r\n            console.log(error.message)\r\n          })\r\n    }\r\n\r\n    const handleSubmitGif = url => {\r\n        const newGif = {\r\n            sender: message.sender,\r\n            receiver: message.receiver,\r\n            text: url,\r\n            type: \"gif\"\r\n        }\r\n        socket.emit('sendMessage', newGif)\r\n        axios.post(`http://localhost:3001/api/chat/addMessage/${roomId}`, newGif)\r\n        setAllMessages([...allMessages, newGif])\r\n    }\r\n\r\n    const handleVisible = () => {\r\n        setGifVisible(!gifVisible)  \r\n    }\r\n\r\n    const choiceContainer = choiceCss ? \"chatDiv-container-mini\" : \"chatDiv-container\"\r\n    const choiceTop = choiceCss ? \"chatDiv-top-mini\" : \"chatDiv-top\"\r\n    const choicechat = choiceCss ? \"chatDiv-chat-mini\" : \"chatDiv-chat\"\r\n\r\n    return (\r\n        <div className={themeReducer ? choiceContainer : choiceContainer}>\r\n            <div className={themeReducer ? `${choiceTop} chatDiv-border-dark` : choiceTop}>\r\n                <UserCard noOpen={true} data={data} />\r\n            {choiceCss ? <FontAwesomeIcon icon=\"times-circle\" className=\"chatDiv-close-icon\" onClick={() => closeChat()} /> : null}\r\n            </div>\r\n            <div className={themeReducer ? `${choicechat} chatDiv-border-dark` : choicechat} ref={chatRef}>\r\n               {load \r\n               ? allMessages.map((item, key) => {\r\n                   let isMe = item.userId === userDataReducer.userId || item.sender === userDataReducer.userId\r\n                   return <Message key={key} data={item} isMe={isMe} />\r\n                }) \r\n                : null}\r\n                {gifVisible \r\n                 ?   <div className=\"chat-searchGif\">\r\n                         <FontAwesomeIcon icon=\"times-circle\" className=\"chatDiv-close-icon close-gif\" onClick={() => handleVisible()} />\r\n                         <div className=\"chat-gif-search-container\">\r\n                             <div className=\"search-top chat-gif-search\">\r\n                                 <FontAwesomeIcon className=\"search-icon\" icon=\"search\" />\r\n                                 <input className=\"search\" type=\"search\" placeholder=\"Search...\" onChange={e => setSearchGif(e.target.value)} />\r\n                             </div>\r\n                         </div>\r\n                         <Gifs search={searchGif} handleSubmitGif={handleSubmitGif} />\r\n                     </div>\r\n                 :   null}\r\n            </div>\r\n            <div className={choiceCss ? \"chatDiv-write-dark\" : \"chatDiv-write\"}>\r\n                <div className=\"icon-new-msg\">\r\n                    <input type=\"file\" name=\"chatImage\" id=\"chatImage\" style={{display: \"none\"}} ref={openFile} onChange={e => handleSubmitImage(e)} />\r\n                    <FontAwesomeIcon icon=\"image\" className=\"icon-write-new-msg\" onClick={() => handleClickFile()} />\r\n                    <button className=\"icon-write-new-msg\" onClick={() => handleVisible()}>GIF</button>\r\n                </div>\r\n                <form className=\"new-msg-box\">\r\n                    <button onClick={e => handleSubmitText(e)} ><FontAwesomeIcon className=\"icon-send-msg\" icon=\"paper-plane\" /></button>\r\n                    <textarea ref={messageRef} name=\"text\" onChange={e => setMessage({...message, [e.target.name]: e.target.value})} className=\"new-msg-textarea\"></textarea>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\ChatEmpty.js",["227"],"import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\n\r\nexport default function ChatEmpty() {\r\n\r\n    const dispatch = useDispatch();\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: true\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={themeReducer ? \"chatEmpty-dark\" : \"chatEmpty\"}>\r\n            <p>Click on a friend</p>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\MainHome.js",["228"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport \"../../Styles/home.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport StoryCard from './StoryCard'\r\nimport PublicationCard from '../Publication/PublicationCard'\r\nimport NewPubliBox from '../Publication/NewPubliBox'\r\nimport PublicationComments from '../Publication/PublicationComments'\r\nimport Loader from \"../Services/Loader\"\r\nimport SuggestFriendCard from '../Services/SuggestFriendCard'\r\n\r\nexport default function MainHome() {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const dispatch = useDispatch()\r\n    const scrollRef = useRef()\r\n    const [countPublication, setCountPublication] = useState(3)\r\n    const [load, setLoad] = useState(false)\r\n    const [newPubli, setNewPubli] = useState(false)\r\n    const [openCommentsPubli, setOpenCommentsPubli] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const [dataSuggestFriend, setDataSuggestFriend] = useState([])\r\n    const [alertMsg, setAlertMsg] = useState(false)\r\n    const [dataPubliClick, setDataPubliClick] = useState(null)\r\n\r\n    useEffect(() => {\r\n        // Get publications\r\n        async function fetchData() {\r\n            await dispatch({\r\n                type: \"CHANGE_ZINDEX\",\r\n                payload: false\r\n              })\r\n            await getPublications()\r\n            await getSuggestFriend()\r\n        }\r\n        fetchData()\r\n    }, [])\r\n    \r\n    const getPublications = () => {\r\n        axios.get(`http://localhost:3001/api/publications/home/${countPublication}`)\r\n        .then(res => {\r\n            if (res.data === false) {\r\n                setAlertMsg(true)\r\n            } else {\r\n                setData([...data, res.data[0], res.data[1], res.data[2]])\r\n                setLoad(true)\r\n            }\r\n            setCountPublication(countPublication + 3)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n \r\n    const getSuggestFriend = async () => {\r\n        await axios.get(`http://localhost:3001/api/user/suggest/friend/${userDataReducer.userId}`)\r\n            .then(res => {\r\n                setDataSuggestFriend(res.data)\r\n            })\r\n            .catch(err => console.log(err))   \r\n    }\r\n\r\n    const handleOpenCommentsPubli = (dataPubli) => {\r\n        setDataPubliClick(dataPubli)\r\n        setOpenCommentsPubli(true)\r\n    }\r\n\r\n    const handleCloseCommentsPubli = () => {\r\n        setOpenCommentsPubli(false)\r\n    }\r\n\r\n    // Scroll infini -> get publications with scroll\r\n    const handleScroll = () => {\r\n        const { scrollTop, scrollHeight, clientHeight } = scrollRef.current\r\n        \r\n        if (clientHeight + scrollTop >= scrollHeight - 20) {\r\n            getPublications()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div ref={scrollRef} className={themeReducer ? \"mainHome-dark\" : \"mainHome\"} onScroll={() => handleScroll()}>\r\n        \r\n            {openCommentsPubli ? <PublicationComments close={handleCloseCommentsPubli} data={dataPubliClick} /> : null } \r\n\r\n            <div>\r\n                {newPubli ? <NewPubliBox publi={newPubli} setPubli={setNewPubli} />  : null}\r\n\r\n                <div className=\"storys\">\r\n                    <div className={themeReducer ? \"story-add border-dark\" : \"story-add\"}>\r\n                        <FontAwesomeIcon icon=\"plus\" className={themeReducer ? \"story-icon txt-dark\" : \"story-icon\"}/>\r\n                    </div>\r\n                    <StoryCard />\r\n                </div>\r\n\r\n                <div className=\"new-publi\">\r\n                    <div className=\"write-publi\" onClick={() => setNewPubli(true)}>\r\n                        <FontAwesomeIcon className={themeReducer ? \"icon-new-publi txt-dark\" : \"icon-new-publi\"} icon=\"comments\" />\r\n                        <div className=\"input-new-publi\" type=\"text\">\r\n                            <p className={themeReducer ? \"write-publi-placeholder txt-dark\" : \"write-publi-placeholder\"}>What do you mean ?</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                {load \r\n                    ?  <div className=\"suggest-friend\">\r\n                            <p className={themeReducer ? \"txt-dark\" : null}>You know this persons ?</p>\r\n                            <div className=\"suggest-friend-container\">           \r\n                                <div className=\"suggest-friend-content\">\r\n                                    {dataSuggestFriend.map((item, index) => {\r\n                                        return <SuggestFriendCard key={index} data={item} />\r\n                                    })}                \r\n                                </div>\r\n                            </div>\r\n                        </div>                                              \r\n                    :   null}\r\n                    {load \r\n                    ?   data.map((item, index) => {\r\n                            return (\r\n                                <div key={index} className=\"box-publi\">\r\n                                    <PublicationCard open={handleOpenCommentsPubli} data={item} />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    :   <Loader />\r\n                    }\r\n                    {alertMsg ? <p className=\"home-alertMsg\">There is no more publication! Come back later :)</p> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\UserCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Api.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\RemoveFriend.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\NewPubliBox.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCardLoader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\Message.js",["229","230","231","232","233"],"import React from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport moment from \"moment\"\r\n\r\nexport default function Message({data, isMe}) {\r\n\r\n    const isImage = data.type === \"image\" ? true : null\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const smallClass = isMe ? themeReducer ? 'txt-dark msg-hour msg-hour-right' : \"msg-hour msg-hour-right\" : themeReducer ? 'txt-dark msg-hour msg-hour-left' : 'msg-hour msg-hour-left'\r\n    const divClass = isImage === \"image\" ? isMe ? \"msg-box-img-right\" : \"msg-box-img\" : isMe ? \"msg msg-right\" : \"msg\"\r\n\r\n    const handleType = () => {\r\n        switch (data.type) {\r\n            case \"text\":\r\n                return <p className=\"msg-txt\">{data.text}</p>\r\n                break;\r\n\r\n            case \"image\":\r\n                return <img className=\"msg-img\" src={data.text} alt=\"frame message\"/>\r\n                break;\r\n\r\n            case \"gif\":\r\n                return <iframe className=\"msg-gif\" src={data.text} alt=\"Gif\"></iframe>\r\n                break;\r\n\r\n            default:\r\n                return null\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={isMe ? \"msg-box msg-right-box\" : \"msg-box\"}>\r\n                <div className={divClass}>\r\n                    <small className={smallClass}>{moment(data.date).fromNow()}</small>\r\n                    { handleType() }\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCard.js",["234"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\ModifyAccount.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationComments.js",["235"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\StoryCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\StreamCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\AccountLoader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationDelete.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Gifs.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\SuggestFriendCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\Index.js",["236"],"import React from 'react'\r\nimport \"../../Styles/gallery.css\"\r\n\r\nimport MainGallery from \"./MainGallery\"\r\n\r\nexport default function Index() {\r\n    return (\r\n        <section className=\"gallery\">\r\n            \r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\MainGallery.js",["237","238"],"import React, {useState, useEffect} from 'react'\r\nimport {useLocation, useHistory} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport PublicationComments from '../Publication/PublicationComments'\r\nimport Video from \"../Publication/Video\"\r\n\r\nexport default function MainGallery() {  \r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [load, setLoad] = useState(false)\r\n    const [isEmpty, setIsEmpty] = useState(false)\r\n    const [data, setData] = useState([])\r\n    const [openCommentsPubli, setOpenCommentsPubli] = useState(false)\r\n    const [dataPubliClick, setDataPubliClick] = useState(false)\r\n\r\n    useEffect(() => { \r\n        // Get informations for account\r\n        let path, idPath\r\n        setLoad(false)\r\n        setIsEmpty(true)\r\n        \r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n        })\r\n\r\n        // Get userId\r\n        path = location.pathname\r\n        idPath = path.substr(9)\r\n        idPath = idPath.split('/')\r\n\r\n        const fetchDataAccount = async () => {\r\n                await axios.get(`http://localhost:3001/api/publications/account/${idPath[0]}`)\r\n                    .then(res => {\r\n                        if (res.data.length === 0) {\r\n                        } else {\r\n                            setIsEmpty(false)\r\n                            setData(res.data)\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err))\r\n                }\r\n                fetchDataAccount()\r\n                setLoad(true)\r\n        }, [location])\r\n\r\n        \r\n    const handleClickBack = () => {\r\n        let path = location.pathname\r\n        let lastPath = path.split('/gallery')\r\n        history.push(lastPath[0])\r\n    }\r\n\r\n    const handleClickPublication = item => {\r\n        setOpenCommentsPubli(true)\r\n        setDataPubliClick(item)\r\n    }\r\n\r\n    const handleCloseCommentsPubli = () => {\r\n        setOpenCommentsPubli(false)\r\n    }\r\n\r\n    return ( load ?\r\n        <div className={themeReducer ? \"mainGallery-dark\" : \"mainGallery\"}>\r\n             {openCommentsPubli ?\r\n                <PublicationComments close={handleCloseCommentsPubli} data={dataPubliClick} />\r\n                : null}           \r\n                <FontAwesomeIcon onClick={() => handleClickBack()} icon=\"arrow-left\" className={themeReducer ? \"txt-dark gallery-icon\" : \"gallery-icon\"}/>\r\n            <div className=\"gallery-container\">\r\n                <h2 className={themeReducer ? \"txt-dark\" : null}>Images</h2>\r\n                <div className=\"gallery-content\">\r\n                    {isEmpty \r\n                    ?   <p className=\"gallery-empty\">This gallery seems very empty to me ...</p>\r\n                    :   data.map((item, index) => {\r\n                        return (\r\n                            item.type === \"image\" \r\n                            ?   <div onClick={() => handleClickPublication(item)} key={index} className=\"gallery-img\">\r\n                                    <img  className=\"gallery-element\" src={item.publicationFileUrl} alt={`Frame publichsed of this user`} />\r\n                                </div>    \r\n                            : null           \r\n                        )})\r\n                    }\r\n                </div>\r\n            </div>\r\n                <div className=\"gallery-container gallery-container-video\">\r\n                    <h2 className={themeReducer ? \"txt-dark\" : null}>Videos</h2>\r\n                    <div className=\"gallery-content\">                        \r\n                        {isEmpty \r\n                        ?   <p className=\"gallery-empty\">This gallery seems very empty to me ...</p>\r\n                        :   data.map((item, index) => {\r\n                                return (\r\n                                    item.type === \"video\"\r\n                                    ?   <div onClick={() => handleClickPublication(item)} key={index} key={index} className=\"gallery-video\">\r\n                                            <Video clickNo={true} className=\"gallery-element\" data={{publicationFileUrl: item.publicationFileUrl}} />\r\n                                        </div>        \r\n                                    : null     \r\n                            )})\r\n                        }\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    :   <div className=\"mainGallery\"></div>)\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\MainFriends.js",["239"],"import React, {useState, useEffect} from 'react'\r\nimport {useLocation, useHistory} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport UserCard from \"../Connected/UserCard\"\r\n\r\nexport default function MainFriends() {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [load, setLoad] = useState(false)\r\n    const [isEmpty, setIsEmpty] = useState(false)\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => { \r\n        // Get informations for account\r\n        let path, idPath\r\n        setLoad(false)\r\n        setIsEmpty(true)\r\n        \r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n        })\r\n\r\n        // Get userId\r\n        path = location.pathname\r\n        idPath = path.substr(9)\r\n        idPath = idPath.split('/')\r\n\r\n        const fetchDataAccount = async () => {\r\n                await axios.get(`http://localhost:3001/api/user/userFriends/${idPath[0]}`)\r\n                    .then(res => {\r\n                        if (res.data.length === 0) {\r\n                        } else {\r\n                            setIsEmpty(false)\r\n                            setData(res.data)\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err))\r\n                }\r\n                fetchDataAccount()\r\n                setLoad(true)\r\n        }, [location])\r\n\r\n    const handleClickFriend = (friend) => {\r\n        history.push(`/account/${friend.userId}`)\r\n    }\r\n\r\n    const handleClickBack = () => {\r\n        let path = location.pathname\r\n        let lastPath = path.split('/friends')\r\n        history.push(lastPath[0])\r\n    }\r\n\r\n    return ( load ?\r\n        <div className={themeReducer ? \"mainFriends-dark\" : \"mainFriends\"}>\r\n            <FontAwesomeIcon onClick={() => handleClickBack()} icon=\"arrow-left\" className={themeReducer ? \"txt-dark friends-icon\" : \"friends-icon\"}/>\r\n            <div className=\"friends-container\">\r\n                <h2 className={themeReducer ? \"txt-dark\" : null}>Friends</h2>\r\n                <div className=\"friends-content\">\r\n                {isEmpty \r\n                    ?   <p className=\"friends-empty\">This user does not have friends ...</p>\r\n                    :   data.map((item, index) => {\r\n                        return (\r\n                            <div className=\"friend-card\" key={index} index={index} onClick={() => handleClickFriend(item)}>\r\n                                <UserCard tallCard={true}  noOpen={true} data={item} />   \r\n                            </div>\r\n                        )})\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    : <div className={themeReducer ? \"mainFriends-dark\" : \"mainFriends\"}></div>)\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\MainAbout.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Video.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\Notification.js",["240"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\NotificationCard.js",["241"],{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":11,"column":8,"nodeType":"248","messageId":"249","endLine":11,"endColumn":10},{"ruleId":"250","severity":1,"message":"251","line":71,"column":6,"nodeType":"252","endLine":71,"endColumn":8,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":18,"column":29,"nodeType":"256","messageId":"257","endLine":18,"endColumn":31},{"ruleId":"250","severity":1,"message":"258","line":22,"column":8,"nodeType":"252","endLine":22,"endColumn":10,"suggestions":"259"},{"ruleId":"250","severity":1,"message":"260","line":20,"column":8,"nodeType":"252","endLine":20,"endColumn":10,"suggestions":"261"},{"ruleId":"246","severity":1,"message":"262","line":1,"column":16,"nodeType":"248","messageId":"249","endLine":1,"endColumn":24},{"ruleId":"246","severity":1,"message":"263","line":20,"column":12,"nodeType":"248","messageId":"249","endLine":20,"endColumn":16},{"ruleId":"250","severity":1,"message":"264","line":85,"column":8,"nodeType":"252","endLine":85,"endColumn":10,"suggestions":"265"},{"ruleId":"250","severity":1,"message":"266","line":76,"column":8,"nodeType":"252","endLine":76,"endColumn":18,"suggestions":"267"},{"ruleId":"250","severity":1,"message":"260","line":92,"column":8,"nodeType":"252","endLine":92,"endColumn":10,"suggestions":"268"},{"ruleId":"246","severity":1,"message":"269","line":24,"column":12,"nodeType":"248","messageId":"249","endLine":24,"endColumn":18},{"ruleId":"246","severity":1,"message":"270","line":24,"column":20,"nodeType":"248","messageId":"249","endLine":24,"endColumn":29},{"ruleId":"250","severity":1,"message":"271","line":75,"column":8,"nodeType":"252","endLine":75,"endColumn":14,"suggestions":"272"},{"ruleId":"250","severity":1,"message":"260","line":14,"column":8,"nodeType":"252","endLine":14,"endColumn":10,"suggestions":"273"},{"ruleId":"250","severity":1,"message":"274","line":40,"column":8,"nodeType":"252","endLine":40,"endColumn":10,"suggestions":"275"},{"ruleId":"276","severity":1,"message":"277","line":16,"column":17,"nodeType":"278","messageId":"279","endLine":16,"endColumn":23},{"ruleId":"276","severity":1,"message":"277","line":20,"column":17,"nodeType":"278","messageId":"279","endLine":20,"endColumn":23},{"ruleId":"280","severity":1,"message":"281","line":23,"column":24,"nodeType":"282","endLine":23,"endColumn":78},{"ruleId":"276","severity":1,"message":"277","line":24,"column":17,"nodeType":"278","messageId":"279","endLine":24,"endColumn":23},{"ruleId":"276","severity":1,"message":"277","line":28,"column":17,"nodeType":"278","messageId":"279","endLine":28,"endColumn":23},{"ruleId":"250","severity":1,"message":"283","line":54,"column":12,"nodeType":"252","endLine":54,"endColumn":14,"suggestions":"284"},{"ruleId":"250","severity":1,"message":"285","line":46,"column":8,"nodeType":"252","endLine":46,"endColumn":10,"suggestions":"286"},{"ruleId":"246","severity":1,"message":"287","line":4,"column":8,"nodeType":"248","messageId":"249","endLine":4,"endColumn":19},{"ruleId":"250","severity":1,"message":"260","line":51,"column":12,"nodeType":"252","endLine":51,"endColumn":22,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":99,"column":103,"nodeType":"291","endLine":99,"endColumn":114},{"ruleId":"250","severity":1,"message":"260","line":48,"column":12,"nodeType":"252","endLine":48,"endColumn":22,"suggestions":"292"},{"ruleId":"250","severity":1,"message":"293","line":47,"column":8,"nodeType":"252","endLine":47,"endColumn":10,"suggestions":"294"},{"ruleId":"250","severity":1,"message":"295","line":33,"column":8,"nodeType":"252","endLine":33,"endColumn":10,"suggestions":"296"},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],"no-unused-vars","'io' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authCookie' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["299"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'history.location.state' and 'slug'. Either include them or remove the dependency array.",["300"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["301"],"'useState' is defined but never used.","'chat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleOpenChat', 'sendMyConnectionOnTime', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["302"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'slug', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["303"],["304"],"'urlGif' is assigned a value but never used.","'setUrlGif' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'fetchRoomId', 'index', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["305"],["306"],"React Hook useEffect has missing dependencies: 'dispatch', 'getPublications', and 'getSuggestFriend'. Either include them or remove the dependency array.",["307"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'data.hashtag', 'data.publicationId', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["308"],"React Hook useEffect has a missing dependency: 'data.publicationId'. Either include it or remove the dependency array.",["309"],"'MainGallery' is defined but never used.",["310"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["311"],"React Hook useEffect has missing dependencies: 'count' and 'userDataReducer.userId'. Either include them or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["312"],"React Hook useEffect has a missing dependency: 'data.content.type'. Either include it or remove the dependency array.",["313"],"no-global-assign","no-unsafe-negation",{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"318","fix":"324"},{"desc":"325","fix":"326"},{"desc":"318","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"334","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},"Update the dependencies array to be: [authCookie, dispatch]",{"range":"341","text":"342"},"Update the dependencies array to be: [history.location.state, slug]",{"range":"343","text":"344"},"Update the dependencies array to be: [dispatch]",{"range":"345","text":"346"},"Update the dependencies array to be: [handleOpenChat, sendMyConnectionOnTime, userDataReducer.userId]",{"range":"347","text":"348"},"Update the dependencies array to be: [dispatch, history, location, slug, userDataReducer.userId]",{"range":"349","text":"350"},{"range":"351","text":"346"},"Update the dependencies array to be: [data, dispatch, fetchRoomId, index, userDataReducer.userId]",{"range":"352","text":"353"},{"range":"354","text":"346"},"Update the dependencies array to be: [dispatch, getPublications, getSuggestFriend]",{"range":"355","text":"356"},"Update the dependencies array to be: [data.hashtag, data.publicationId, userDataReducer.userId]",{"range":"357","text":"358"},"Update the dependencies array to be: [data.publicationId]",{"range":"359","text":"360"},"Update the dependencies array to be: [dispatch, location]",{"range":"361","text":"362"},{"range":"363","text":"362"},"Update the dependencies array to be: [count, userDataReducer.userId]",{"range":"364","text":"365"},"Update the dependencies array to be: [data.content.type]",{"range":"366","text":"367"},[3022,3024],"[authCookie, dispatch]",[649,651],"[history.location.state, slug]",[635,637],"[dispatch]",[3903,3905],"[handleOpenChat, sendMyConnectionOnTime, userDataReducer.userId]",[3104,3114],"[dispatch, history, location, slug, userDataReducer.userId]",[3081,3083],[2780,2786],"[data, dispatch, fetchRoomId, index, userDataReducer.userId]",[361,363],[1622,1624],"[dispatch, getPublications, getSuggestFriend]",[2324,2326],"[data.hashtag, data.publicationId, userDataReducer.userId]",[1809,1811],"[data.publicationId]",[1831,1841],"[dispatch, location]",[1623,1633],[1854,1856],"[count, userDataReducer.userId]",[1041,1043],"[data.content.type]"]