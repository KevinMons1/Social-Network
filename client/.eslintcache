[{"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\index.js":"1","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\themeReducer.js":"2","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\zIndexReducer.js":"3","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\reportWebVitals.js":"4","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\userDataReducer.js":"5","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\App.js":"6","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Index.js":"7","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\Index.js":"8","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\Index.js":"9","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Loader.js":"10","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Error.js":"11","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Signup.js":"12","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Live.js":"13","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\Index.js":"14","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\Connected.js":"15","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\Header.js":"16","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\PasswordForget.js":"17","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Login.js":"18","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\MainAccount.js":"19","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\MainChat.js":"20","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\MainGaming.js":"21","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Assets\\fontawesome.js":"22","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\ChatDiv.js":"23","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\ChatEmpty.js":"24","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\MainHome.js":"25","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\UserCard.js":"26","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Api.js":"27","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\RemoveFriend.js":"28","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\NewPubliBox.js":"29","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCardLoader.js":"30","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\Message.js":"31","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCard.js":"32","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\ModifyAccount.js":"33","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\StoryCard.js":"34","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\StreamCard.js":"35","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\AccountLoader.js":"36","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationDelete.js":"37","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Gifs.js":"38","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\SuggestFriendCard.js":"39","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\Index.js":"40","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\MainGallery.js":"41","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\Index.js":"42","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\Index.js":"43","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\MainFriends.js":"44","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\MainAbout.js":"45","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Video.js":"46","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\Notification.js":"47","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\NotificationCard.js":"48","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Index.js":"49","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\MainPublication.js":"50"},{"size":798,"mtime":1614421732060,"results":"51","hashOfConfig":"52"},{"size":253,"mtime":1609689546345,"results":"53","hashOfConfig":"52"},{"size":345,"mtime":1614605527440,"results":"54","hashOfConfig":"52"},{"size":362,"mtime":499162500000,"results":"55","hashOfConfig":"52"},{"size":389,"mtime":1615311926908,"results":"56","hashOfConfig":"52"},{"size":4857,"mtime":1617460892862,"results":"57","hashOfConfig":"52"},{"size":230,"mtime":1614352130381,"results":"58","hashOfConfig":"52"},{"size":1022,"mtime":1615279615021,"results":"59","hashOfConfig":"52"},{"size":268,"mtime":1614258655375,"results":"60","hashOfConfig":"52"},{"size":587,"mtime":1613562962346,"results":"61","hashOfConfig":"52"},{"size":612,"mtime":1615018607179,"results":"62","hashOfConfig":"52"},{"size":5293,"mtime":1615018327290,"results":"63","hashOfConfig":"52"},{"size":1426,"mtime":1614423150275,"results":"64","hashOfConfig":"52"},{"size":391,"mtime":1617460355142,"results":"65","hashOfConfig":"52"},{"size":6666,"mtime":1617295332109,"results":"66","hashOfConfig":"52"},{"size":4833,"mtime":1617210581982,"results":"67","hashOfConfig":"52"},{"size":1295,"mtime":1610908278238,"results":"68","hashOfConfig":"52"},{"size":3529,"mtime":1612101159703,"results":"69","hashOfConfig":"52"},{"size":11025,"mtime":1617464027802,"results":"70","hashOfConfig":"52"},{"size":401,"mtime":1615279961217,"results":"71","hashOfConfig":"52"},{"size":4994,"mtime":1614423157444,"results":"72","hashOfConfig":"52"},{"size":688,"mtime":1617210680967,"results":"73","hashOfConfig":"52"},{"size":8256,"mtime":1617294085491,"results":"74","hashOfConfig":"52"},{"size":519,"mtime":1615279429993,"results":"75","hashOfConfig":"52"},{"size":5045,"mtime":1617464974252,"results":"76","hashOfConfig":"52"},{"size":1721,"mtime":1617273898348,"results":"77","hashOfConfig":"52"},{"size":546,"mtime":1617294029444,"results":"78","hashOfConfig":"52"},{"size":2301,"mtime":1617444116086,"results":"79","hashOfConfig":"52"},{"size":9831,"mtime":1615829251954,"results":"80","hashOfConfig":"52"},{"size":1357,"mtime":1614077360624,"results":"81","hashOfConfig":"52"},{"size":1432,"mtime":1615796713765,"results":"82","hashOfConfig":"52"},{"size":8184,"mtime":1617465449873,"results":"83","hashOfConfig":"52"},{"size":10280,"mtime":1615828726401,"results":"84","hashOfConfig":"52"},{"size":578,"mtime":1611394752841,"results":"85","hashOfConfig":"52"},{"size":1872,"mtime":1617184445930,"results":"86","hashOfConfig":"52"},{"size":2382,"mtime":1613666934268,"results":"87","hashOfConfig":"52"},{"size":1891,"mtime":1614959342211,"results":"88","hashOfConfig":"52"},{"size":1119,"mtime":1615736624500,"results":"89","hashOfConfig":"52"},{"size":2198,"mtime":1617447548936,"results":"90","hashOfConfig":"52"},{"size":254,"mtime":1616943676348,"results":"91","hashOfConfig":"52"},{"size":4288,"mtime":1617465768776,"results":"92","hashOfConfig":"52"},{"size":244,"mtime":1617181268623,"results":"93","hashOfConfig":"52"},{"size":254,"mtime":1617182172287,"results":"94","hashOfConfig":"52"},{"size":2998,"mtime":1617274082465,"results":"95","hashOfConfig":"52"},{"size":162,"mtime":1617181296625,"results":"96","hashOfConfig":"52"},{"size":3059,"mtime":1617097310924,"results":"97","hashOfConfig":"52"},{"size":3525,"mtime":1617460753221,"results":"98","hashOfConfig":"52"},{"size":2755,"mtime":1617448544822,"results":"99","hashOfConfig":"52"},{"size":274,"mtime":1617461005686,"results":"100","hashOfConfig":"52"},{"size":6889,"mtime":1617466034655,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"rdbbsr",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"104"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"104"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"104"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\index.js",[],["215","216"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\themeReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\zIndexReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\reportWebVitals.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\userDataReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\App.js",["217","218","219"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\Index.js",["220","221"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from \"react-router-dom\"\r\nimport \"../../Styles/chat.css\"\r\n\r\n//Components\r\nimport MainChat from \"./MainChat\"\r\nimport Connected from \"../Connected/Connected\"\r\nimport ChatEmpty from \"./ChatEmpty\"\r\n\r\nexport default function Index() {\r\n\r\n    const [friendClick, setFriendClick] = useState(false)\r\n    const [data, setData] = useState(null)\r\n    const { slug } = useParams()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (slug.toString() != \"empty\") {\r\n            setFriendClick(true)\r\n            setData(history.location.state)\r\n        }\r\n    }, [])\r\n\r\n    const handleFriendClick = (data) => {\r\n        history.push({pathname: `/chat/${data.userId}`, state: data})\r\n    }\r\n\r\n    return (\r\n        <section className=\"chat\">\r\n            <Connected choiceCss={false} friendClick={(data) => handleFriendClick(data)} />\r\n            {friendClick ? <MainChat data={data} /> : <ChatEmpty />}\r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Loader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Error.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Signup.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Live.js",["222"],"import React, {useEffect} from 'react'\r\nimport \"../../Styles/gaming.css\"\r\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\"\r\nimport {Link, useParams} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\n\r\nexport default function Live() {\r\n\r\n    let {slug} = useParams()\r\n    const dispatch = useDispatch()\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n    }, [])\r\n\r\n    return (\r\n        <section className=\"gaming\">\r\n            <div className={themeReducer? \"mainLive-dark\" : \"mainLive\"}>\r\n                <div className=\"live-stream\">\r\n                    <ReactTwitchEmbedVideo \r\n                        width=\"100%\" \r\n                        height=\"100%\" \r\n                        channel={slug} \r\n                        theme={themeReducer? \"dark\" : \"light\"} \r\n                    />\r\n                </div>\r\n                <div className=\"live-back\">\r\n                    <Link to=\"/gaming\">\r\n                        <FontAwesomeIcon className={themeReducer? \"chevron-icon-dark\" : \"chevron-icon\"} icon=\"chevron-left\" />\r\n                    </Link>\r\n                </div>                \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\Connected.js",["223","224"],"import React, {useEffect, useState} from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport \"../../Styles/connected.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport {useTransition, config, animated} from \"react-spring\"\r\nimport {socket} from \"../../Api\"\r\nimport UserCard from './UserCard'\r\nimport ChatDiv from '../ChatDiv/ChatDiv'\r\nimport Notification from '../Notification/Notification'\r\n\r\nexport default function Connected({choiceCss, friendClick}) {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const [usersCard, setUsersCard] = useState([])\r\n    const [usersCardChat, setUsersCardChat] = useState([])\r\n    const [load, setLoad] = useState(false)\r\n    const [chat, setChat] = useState(false)\r\n    const [isAnimated, setIsAnimated] = useState(false)\r\n    const [friendEmpty, setFriendEmpty] = useState(false)\r\n    const [userCardClick, setUserCardClick] = useState(null)\r\n    const [friendsConnected, setFriendsConnected] = useState([])\r\n    const transitionContent = useTransition(isAnimated, null, {\r\n        from: {opacity: 0, transform: \"translateY(500px)\", position: 'absolute'},\r\n        enter: {opacity: 1, transform: \"translateY(0)\", position: \"absolute\"},\r\n        leave: {opacity: 0, transform: \"translateY(500px)\", position: 'absolute'},\r\n        config: config.stiff\r\n    })\r\n\r\n    socket.on('sendMyConnection', friendId => {\r\n        // See if friendId is already encoding\r\n        let isFind = friendsConnected.find(friend => friend === friendId)\r\n        if (typeof isFind !== 'number') {\r\n            setFriendsConnected([...friendsConnected, friendId])\r\n            let updateUsersCard = usersCard.map(item => {\r\n                if (item.props.data.userId === friendId) {\r\n                    return <UserCard isConnected={true} data={item.props.data} text={false} noGreenBubble={true} open={() => handleOpenChat(item.props.data)} />\r\n                }\r\n                return item\r\n            })\r\n            setUsersCard(updateUsersCard)\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        // Send userId on server for realTime components\r\n        socket.emit('userConnected', userDataReducer.userId)\r\n\r\n        let friends = []\r\n        const fetchData = async () => {\r\n            await axios.get(`http://localhost:3001/api/user/userFriends/${userDataReducer.userId}`)\r\n            .then(res => {\r\n                // if res.data === true but this user haven't friends\r\n                if (res.data) {\r\n                    res.data.forEach(friend => {\r\n                        setUsersCard(usersCard => [...usersCard, <UserCard data={friend} text={false} open={() => handleOpenChat(friend)} />])\r\n                        friends.push(friend.userId)\r\n                    })         \r\n                } else {\r\n                    setFriendEmpty(true)\r\n                }\r\n            })\r\n            .catch(err => console.log(err))\r\n            await axios.get(`http://localhost:3001/api/user/connected/friends/chat/${userDataReducer.userId}`)\r\n            .then(res => { \r\n                setFriendEmpty(true)       \r\n                res.data.forEach(friend => {\r\n                    if (friend != null) {\r\n                        setUsersCardChat(usersCardChat => [...usersCardChat, <UserCard data={friend} text={true} open={() => handleOpenChat(friend)} />])      \r\n                        setFriendEmpty(false)      \r\n                    }\r\n                })               \r\n            })\r\n            .catch(err => console.log(err))\r\n            await socket.emit(\"sendMyConnection\",  {\r\n                userId: userDataReducer.userId,\r\n                friends\r\n            })\r\n            setLoad(true)\r\n            sendMyConnectionOnTime(friends)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    // To give the connection to those who connected after using it\r\n    const sendMyConnectionOnTime = (friends) => {\r\n        setTimeout(() => {\r\n            socket.emit('sendMyConnection', {\r\n                userId: userDataReducer.userId,\r\n                friends\r\n            }) \r\n            sendMyConnectionOnTime(friends)\r\n        }, 300000);\r\n    }\r\n\r\n    const handleCloseChat = () => {\r\n        setIsAnimated(false)\r\n        setTimeout(() => {\r\n            setChat(false)\r\n        }, 200);\r\n    }\r\n\r\n    const handleOpenChat = (friendData) => {\r\n        if (choiceCss) {\r\n            setUserCardClick(<ChatDiv index={false} closeChat={handleCloseChat} choiceCss={true} data={friendData} />)\r\n            setIsAnimated(true)\r\n            setChat(true)\r\n        } else {\r\n            friendClick(friendData)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={themeReducer ? \"connected-dark\" : \"connected\"}>\r\n            <div className=\"connected-title-box\">\r\n                <p className={themeReducer ? \"connected-title-dark\" : \"connected-title\"}>Connected</p>\r\n                <Notification />\r\n            </div>\r\n\r\n            <div className=\"connected-top\">\r\n                <div className=\"friends-boxs\">                     \r\n                    {load \r\n                    ? usersCard.map((item, index) => {\r\n                        return <div key={index}>{item}</div>\r\n                        })   \r\n                    : null}  \r\n                </div>\r\n                <div className={themeReducer.Theme ? \"search-top-dark connected-search\" : \"search-top connected-search\"}>\r\n                    <FontAwesomeIcon className=\"search-icon\" icon=\"search\" />\r\n                    <input className={themeReducer.Theme ? \"search txt-dark\" : \"search\"} type=\"text\" placeholder=\"Search...\"/>\r\n                </div>\r\n            </div>\r\n             \r\n             <div>\r\n                {transitionContent.map(({item, key, props}) => item &&(\r\n                    <animated.div className={themeReducer ? \"connected-chat-dark\" : \"connected-chat\"} key={key} style={props}>{userCardClick}</animated.div>\r\n                ))}\r\n                <div className=\"connected-bottom\">\r\n                        <div className=\"friends-boxs\">             \r\n                            {load \r\n                            ? friendEmpty \r\n                                ? <small>You are not friends !</small>\r\n                                :  usersCardChat.map((item, index) => {\r\n                                    return <div key={index}>{item}</div>\r\n                                    }) \r\n                            : null}  \r\n                        </div>  \r\n                </div>  \r\n             </div>\r\n        </section>\r\n    )\r\n}","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\Header.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\PasswordForget.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Login.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\MainAccount.js",["225","226"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\MainChat.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\MainGaming.js",["227"],"import React, {useState, useEffect} from 'react'\r\nimport \"../../Styles/gaming.css\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {apiTwitch} from \"../../Api\"\r\nimport StreamCard from \"./StreamCard\"\r\nimport PublicationCardLoader from \"../Publication/PublicationCardLoader\"\r\n\r\nexport default function MainGaming() {\r\n\r\n    const dispatch = useDispatch()\r\n    const [streams, setStreams] = useState([])\r\n    const [getApi, setGetApi] = useState([])\r\n    const [load, setLoad] = useState(false)\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    // Take all informations for modify each url with good params\r\n    useEffect(() => {\r\n\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n\r\n        const fetchData = async () => {\r\n            const res = await apiTwitch.get('https://api.twitch.tv/helix/streams?first=100')\r\n            let dataArray = res.data.data\r\n            setGetApi(dataArray)\r\n\r\n            let gameIDs = dataArray.map(stream => {\r\n                return stream.game_id\r\n            })\r\n\r\n            let userIDs = dataArray.map(stream => {\r\n                return stream.user_id\r\n            })\r\n\r\n            // Create URL\r\n            let urlGames = \"https://api.twitch.tv/helix/games?\"\r\n            let urlUsers = \"https://api.twitch.tv/helix/users?\"\r\n\r\n            let queryParamsGame = \"\"\r\n            let queryParamsUser = \"\"\r\n\r\n            gameIDs.map(id => {\r\n                return (queryParamsGame = queryParamsGame + `id=${id}&`)\r\n            })\r\n\r\n            userIDs.map(id => {\r\n                return (queryParamsUser = queryParamsUser + `id=${id}&`)\r\n            })\r\n\r\n            let urlFinalGames = urlGames + queryParamsGame\r\n            let urlFinalUsers = urlUsers + queryParamsUser\r\n\r\n            // Call URL\r\n            let gamesCall = await apiTwitch.get(urlFinalGames)\r\n            let usersCall = await apiTwitch.get(urlFinalUsers)\r\n\r\n            let gamesCallArray = gamesCall.data.data\r\n            let usersCallArray = usersCall.data.data\r\n\r\n            let newUrl = \"\"\r\n\r\n            // Array Final\r\n            let finalArray = dataArray.map(stream => {\r\n                stream.gameName = \"\"\r\n                stream.login = \"\"\r\n                stream.channelImg = \"\"\r\n\r\n                newUrl = stream.thumbnail_url\r\n                .replace('{width}', '480')\r\n                .replace('{height}', '270')\r\n\r\n                stream.streamImg = newUrl\r\n\r\n                gamesCallArray.forEach(name => {\r\n                    usersCallArray.forEach(user => {\r\n                        if (stream.user_id === user.id && stream.game_id === name.id) {\r\n                            stream.gameName = name.name\r\n                            stream.channelImg = user.profile_image_url\r\n                            stream.login = user.login\r\n                        }\r\n                    })\r\n                })\r\n\r\n                return stream\r\n            })\r\n            setStreams(finalArray)\r\n            setLoad(true)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const handleLanguage = choice => {\r\n        let newDataArray = [];\r\n\r\n        //Sort by lang\r\n        if (choice !== \"all\") {\r\n            for (let i = 0; i < getApi.length; i++) {\r\n                if (getApi[i].language === choice) {\r\n                    newDataArray.push(getApi[i])\r\n                }\r\n            }\r\n        } else return setStreams(getApi)\r\n\r\n        return setStreams(newDataArray)\r\n    }\r\n    \r\n    return (\r\n        <div className={themeReducer ? \"mainGaming-dark\" : \"mainGaming\"}>\r\n\r\n            <div className=\"gaming-lang\">\r\n                <div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"all\")}>\r\n                    <p>ALL</p>\r\n                </div>\r\n                <div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"en\")}>\r\n                    <p>EN</p>\r\n                </div><div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"fr\")}>\r\n                    <p>FR</p>\r\n                </div>\r\n            </div>\r\n            {load \r\n            ? streams.map((stream, index) => {\r\n                return (\r\n                    <StreamCard \r\n                        login={stream.login}\r\n                        name={stream.user_name}\r\n                        channelImg={stream.channelImg} \r\n                        streamImg={stream.streamImg}\r\n                        viewerCount={stream.viewer_count}\r\n                        gamePlay={stream.gameName} \r\n                        key={index} \r\n                    />\r\n                )\r\n            })  \r\n            : <div className=\"streamCardLoader\">\r\n                <PublicationCardLoader />\r\n                <PublicationCardLoader />\r\n                <PublicationCardLoader />\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Assets\\fontawesome.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\ChatDiv.js",["228","229","230"],"import React, {useEffect, useState, useRef} from 'react'\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport \"../../Styles/chat.css\"\r\nimport {useParams} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport {socket} from \"../../Api\"\r\nimport imageCompression from \"browser-image-compression\"\r\nimport UserCard from '../Connected/UserCard'\r\nimport Message from \"./Message\"\r\nimport Gifs from \"../Services/Gifs\"\r\n\r\nexport default function ChatDiv({choiceCss, closeChat, data, index}) {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const messageRef = useRef()\r\n    const chatRef = useRef()\r\n    const openFile = useRef()\r\n    const dispatch = useDispatch()\r\n    const { slug } = useParams()\r\n    const [searchGif, setSearchGif] = useState(\"dogs\")\r\n    const [urlGif, setUrlGif] = useState(\"\")\r\n    const [gifVisible, setGifVisible] = useState(false)\r\n    const [load, setLoad] = useState(false)\r\n    const [allMessages, setAllMessages] = useState([])\r\n    const [roomId, setRoomId] = useState(null)\r\n    const [message, setMessage] = useState({\r\n        text: \"\",\r\n        sender: userDataReducer.userId,\r\n        receiver: data.userId,\r\n        type: \"text\"\r\n    })\r\n\r\n    /*\r\n    ----- Socket.io for a real time chat -----\r\n    */\r\n\r\n    // Send message\r\n    socket.on('newMessage', dataMessage => {\r\n        const id = slug === undefined ? data.userId : slug\r\n        if (dataMessage.sender.toString() === id.toString()) {\r\n            setAllMessages([...allMessages, dataMessage])\r\n        }\r\n    })\r\n    \r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            await dispatch({\r\n                type: \"CHANGE_ZINDEX\",\r\n                payload: index\r\n            })\r\n            // get roomId\r\n            const dataFetchRoomId = await fetchRoomId()\r\n            const dataRoomId = dataFetchRoomId.data.roomId\r\n            // get message in room with roomId\r\n            const dataFetchMessages = await fetchMessages(dataRoomId)\r\n            const dataMessages = dataFetchMessages.data\r\n            // not continue if haven't messages\r\n            if (dataMessages.length > 0) {\r\n                setAllMessages(dataMessages)\r\n            } else {\r\n                setAllMessages([])\r\n            }\r\n            setRoomId(dataRoomId)\r\n            await socket.emit('userConnectedOnChat', userDataReducer.userId)\r\n            setLoad(true)\r\n            // Scrollbar appears at the bottom by default\r\n            setTimeout(() => {\r\n                chatRef.current.scrollTop = chatRef.current.scrollHeight\r\n            }, 250)\r\n        }\r\n        fetch()\r\n    }, [data])\r\n\r\n    const fetchRoomId = async () => {\r\n        return await new Promise(resolve => {\r\n            const id = slug === undefined ? data.userId : slug\r\n            const dataFetch = axios.post(`http://localhost:3001/api/chat/getRoom/${id}`, {userId: userDataReducer.userId})\r\n            resolve(dataFetch)\r\n        })\r\n    }\r\n\r\n    const fetchMessages = async (id) => {\r\n        return await new Promise(resolve => {\r\n            const dataFetch = axios.get(`http://localhost:3001/api/chat/getContent/${id}`)\r\n            resolve(dataFetch)\r\n        })\r\n    }\r\n\r\n    const handleClickFile = () => {\r\n        openFile.current.click()\r\n    }\r\n\r\n    const handleSubmitText = e => {\r\n        e.preventDefault()\r\n        setAllMessages([...allMessages, message])\r\n\r\n        socket.emit('sendMessage', message)\r\n        axios.post(`http://localhost:3001/api/chat/addMessage/${roomId}`, message)\r\n        setMessage({...message, text: \"\"})\r\n        messageRef.current.value = \"\"\r\n    } \r\n\r\n    const handleSubmitImage = e => {\r\n        let imageFile = e.target.files[0]\r\n        let options = {\r\n          maxSizeMB: 0.5,\r\n          maxWidthOrHeight: 1920,\r\n          useWebWorker: true\r\n        }\r\n\r\n        imageCompression(imageFile, options)\r\n          .then(compressedFile => {\r\n                let formData = new FormData()\r\n                formData.append('file', compressedFile)\r\n                formData.append('id', userDataReducer.userId)\r\n                axios.post(`http://localhost:3001/api/chat/addImage/${roomId}`, formData)\r\n                    .then(res => {\r\n                        const newImage = {\r\n                            sender: message.sender,\r\n                            receiver: message.receiver,\r\n                            text: res.data,\r\n                            type: \"image\"\r\n                        }\r\n                        socket.emit('sendMessage', newImage)\r\n                        setAllMessages([...allMessages, newImage])\r\n                    })\r\n                    .catch(err => console.log(err))\r\n          })\r\n          .catch(error => {\r\n            console.log(error.message)\r\n          })\r\n    }\r\n\r\n    const handleSubmitGif = url => {\r\n        const newGif = {\r\n            sender: message.sender,\r\n            receiver: message.receiver,\r\n            text: url,\r\n            type: \"gif\"\r\n        }\r\n        socket.emit('sendMessage', newGif)\r\n        axios.post(`http://localhost:3001/api/chat/addMessage/${roomId}`, newGif)\r\n        setAllMessages([...allMessages, newGif])\r\n    }\r\n\r\n    const handleVisible = () => {\r\n        setGifVisible(!gifVisible)  \r\n    }\r\n\r\n    const choiceContainer = choiceCss ? \"chatDiv-container-mini\" : \"chatDiv-container\"\r\n    const choiceTop = choiceCss ? \"chatDiv-top-mini\" : \"chatDiv-top\"\r\n    const choicechat = choiceCss ? \"chatDiv-chat-mini\" : \"chatDiv-chat\"\r\n\r\n    return (\r\n        <div className={themeReducer ? choiceContainer : choiceContainer}>\r\n            <div className={themeReducer ? `${choiceTop} chatDiv-border-dark` : choiceTop}>\r\n                <UserCard noOpen={true} data={data} />\r\n            {choiceCss ? <FontAwesomeIcon icon=\"times-circle\" className=\"chatDiv-close-icon\" onClick={() => closeChat()} /> : null}\r\n            </div>\r\n            <div className={themeReducer ? `${choicechat} chatDiv-border-dark` : choicechat} ref={chatRef}>\r\n               {load \r\n               ? allMessages.map((item, key) => {\r\n                   let isMe = item.userId === userDataReducer.userId || item.sender === userDataReducer.userId\r\n                   return <Message key={key} data={item} isMe={isMe} />\r\n                }) \r\n                : null}\r\n                {gifVisible \r\n                 ?   <div className=\"chat-searchGif\">\r\n                         <FontAwesomeIcon icon=\"times-circle\" className=\"chatDiv-close-icon close-gif\" onClick={() => handleVisible()} />\r\n                         <div className=\"chat-gif-search-container\">\r\n                             <div className=\"search-top chat-gif-search\">\r\n                                 <FontAwesomeIcon className=\"search-icon\" icon=\"search\" />\r\n                                 <input className=\"search\" type=\"search\" placeholder=\"Search...\" onChange={e => setSearchGif(e.target.value)} />\r\n                             </div>\r\n                         </div>\r\n                         <Gifs search={searchGif} handleSubmitGif={handleSubmitGif} />\r\n                     </div>\r\n                 :   null}\r\n            </div>\r\n            <div className={choiceCss ? \"chatDiv-write-dark\" : \"chatDiv-write\"}>\r\n                <div className=\"icon-new-msg\">\r\n                    <input type=\"file\" name=\"chatImage\" id=\"chatImage\" style={{display: \"none\"}} ref={openFile} onChange={e => handleSubmitImage(e)} />\r\n                    <FontAwesomeIcon icon=\"image\" className=\"icon-write-new-msg\" onClick={() => handleClickFile()} />\r\n                    <button className=\"icon-write-new-msg\" onClick={() => handleVisible()}>GIF</button>\r\n                </div>\r\n                <form className=\"new-msg-box\">\r\n                    <button onClick={e => handleSubmitText(e)} ><FontAwesomeIcon className=\"icon-send-msg\" icon=\"paper-plane\" /></button>\r\n                    <textarea ref={messageRef} name=\"text\" onChange={e => setMessage({...message, [e.target.name]: e.target.value})} className=\"new-msg-textarea\"></textarea>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Chat\\ChatEmpty.js",["231"],"import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\n\r\nexport default function ChatEmpty() {\r\n\r\n    const dispatch = useDispatch();\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: true\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={themeReducer ? \"chatEmpty-dark\" : \"chatEmpty\"}>\r\n            <p>Click on a friend</p>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\MainHome.js",["232"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\UserCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Api.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\RemoveFriend.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\NewPubliBox.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCardLoader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\ChatDiv\\Message.js",["233","234","235","236","237"],"import React from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport moment from \"moment\"\r\n\r\nexport default function Message({data, isMe}) {\r\n\r\n    const isImage = data.type === \"image\" ? true : null\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const smallClass = isMe ? themeReducer ? 'txt-dark msg-hour msg-hour-right' : \"msg-hour msg-hour-right\" : themeReducer ? 'txt-dark msg-hour msg-hour-left' : 'msg-hour msg-hour-left'\r\n    const divClass = isImage === \"image\" ? isMe ? \"msg-box-img-right\" : \"msg-box-img\" : isMe ? \"msg msg-right\" : \"msg\"\r\n\r\n    const handleType = () => {\r\n        switch (data.type) {\r\n            case \"text\":\r\n                return <p className=\"msg-txt\">{data.text}</p>\r\n                break;\r\n\r\n            case \"image\":\r\n                return <img className=\"msg-img\" src={data.text} alt=\"frame message\"/>\r\n                break;\r\n\r\n            case \"gif\":\r\n                return <iframe className=\"msg-gif\" src={data.text} alt=\"Gif\"></iframe>\r\n                break;\r\n\r\n            default:\r\n                return null\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={isMe ? \"msg-box msg-right-box\" : \"msg-box\"}>\r\n                <div className={divClass}>\r\n                    <small className={smallClass}>{moment(data.date).fromNow()}</small>\r\n                    { handleType() }\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCard.js",["238"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\ModifyAccount.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\StoryCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\StreamCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\AccountLoader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationDelete.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Gifs.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\SuggestFriendCard.js",["239"],"import React, {useState} from 'react'\r\nimport \"../../Styles/services.css\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport {socket} from \"../../Api\"\r\nimport axios from \"axios\"\r\n\r\nexport default function SuggestFriendCard({ data }) {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const [waiting, setWaiting] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const handleClick = () => {\r\n        history.push(`/account/${data.userId}`)\r\n    }\r\n\r\n    const handleAddFriend = () => {\r\n        setWaiting(true)\r\n        axios.post(\"http://localhost:3001/api/notifications/add\", {\r\n            receiver : data.userId,\r\n            sender: userDataReducer.userId,\r\n            type: \"invitation\"\r\n        })\r\n        socket.emit(\"notification\", {\r\n            receiver: data.userId,\r\n            sender: {\r\n                user: userDataReducer,\r\n                content: {\r\n                    type: \"invitation\"\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={themeReducer ? \"suggestFriendCard-dark\" : \"suggestFriendCard\"}>\r\n            <div className=\"suggestFriendCard-top\">\r\n                <img src={data.profileImage} alt=\"Frame profile\" onClick={() => handleClick()} />\r\n            </div>\r\n            <div className=\"suggestFriendCard-bottom\">\r\n                <p className={themeReducer ? \"txt-dark\" : null} onClick={() => handleClick()}>{data.lastName} {data.firstName}</p>\r\n                <button className={themeReducer ? \"suggestFriendCard-btn-dark\" : \"suggestFriendCard-btn\"}>\r\n                    {waiting \r\n                    ?   <p className={themeReducer ? \"suggestFriendCard-btn-dark\" : \"suggestFriendCard-btn\"}>Waiting...</p>\r\n                    :   <p className={themeReducer ? \"suggestFriendCard-btn-dark\" : \"suggestFriendCard-btn\"} onClick={() => handleAddFriend()}>Add friend</p>     \r\n                    }\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\Index.js",["240"],"import React from 'react'\r\nimport \"../../Styles/gallery.css\"\r\n\r\nimport MainGallery from \"./MainGallery\"\r\n\r\nexport default function Index() {\r\n    return (\r\n        <section className=\"gallery\">\r\n            \r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gallery\\MainGallery.js",["241","242","243","244","245"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Friends\\MainFriends.js",["246"],"import React, {useState, useEffect} from 'react'\r\nimport {useLocation, useHistory} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport UserCard from \"../Connected/UserCard\"\r\n\r\nexport default function MainFriends() {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [load, setLoad] = useState(false)\r\n    const [isEmpty, setIsEmpty] = useState(false)\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => { \r\n        // Get informations for account\r\n        let path, idPath\r\n        setLoad(false)\r\n        setIsEmpty(true)\r\n        \r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n        })\r\n\r\n        // Get userId\r\n        path = location.pathname\r\n        idPath = path.substr(9)\r\n        idPath = idPath.split('/')\r\n\r\n        const fetchDataAccount = async () => {\r\n                await axios.get(`http://localhost:3001/api/user/userFriends/${idPath[0]}`)\r\n                    .then(res => {\r\n                        if (res.data.length === 0) {\r\n                        } else {\r\n                            setIsEmpty(false)\r\n                            setData(res.data)\r\n                        }\r\n                    })\r\n                    .catch(err => console.log(err))\r\n                }\r\n                fetchDataAccount()\r\n                setLoad(true)\r\n        }, [location])\r\n\r\n    const handleClickFriend = (friend) => {\r\n        history.push(`/account/${friend.userId}`)\r\n    }\r\n\r\n    const handleClickBack = () => {\r\n        let path = location.pathname\r\n        let lastPath = path.split('/friends')\r\n        history.push(lastPath[0])\r\n    }\r\n\r\n    return ( load ?\r\n        <div className={themeReducer ? \"mainFriends-dark\" : \"mainFriends\"}>\r\n            <FontAwesomeIcon onClick={() => handleClickBack()} icon=\"arrow-left\" className={themeReducer ? \"txt-dark friends-icon\" : \"friends-icon\"}/>\r\n            <div className=\"friends-container\">\r\n                <h2 className={themeReducer ? \"txt-dark\" : null}>Friends</h2>\r\n                <div className=\"friends-content\">\r\n                {isEmpty \r\n                    ?   <p className=\"friends-empty\">This user does not have friends ...</p>\r\n                    :   data.map((item, index) => {\r\n                        return (\r\n                            <div className=\"friend-card\" key={index} index={index} onClick={() => handleClickFriend(item)}>\r\n                                <UserCard tallCard={true}  noOpen={true} data={item} />   \r\n                            </div>\r\n                        )})\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    : <div className={themeReducer ? \"mainFriends-dark\" : \"mainFriends\"}></div>)\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\About\\MainAbout.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Video.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\Notification.js",["247"],"import React, {useEffect, useState} from 'react'\r\nimport \"../../Styles/notifcation.css\"\r\nimport {useSelector} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport {useTransition, config, animated} from \"react-spring\"\r\nimport {socket} from \"../../Api\"\r\nimport axios from \"axios\"\r\nimport NotificationCard from \"./NotificationCard\"\r\n\r\nexport default function Notification() {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const [data, setData] = useState([])\r\n    const [count, setCount] = useState(0)\r\n    const [load, setLoad] = useState(false)\r\n    const [isAnimated, setIsAnimated] = useState(false)\r\n    const transitionContent = useTransition(isAnimated, null, {\r\n        from: {opacity: 0, transform: \"translateY(-300px)\", position: 'absolute'},\r\n        enter: {opacity: 1, transform: \"translateY(0)\", position: \"absolute\"},\r\n        leave: {opacity: 0, transform: \"translateY(-300px)\", position: 'absolute'},\r\n        config: config.stiff\r\n    })\r\n\r\n    socket.on(\"notification\", userData => {\r\n        setData([userData, ...data])\r\n        setCount(count + 1)\r\n    })\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            await axios.get(`http://localhost:3001/api/notifications/all/${userDataReducer.userId}`)\r\n                .then(res => {\r\n                    let _count = 0\r\n                    res.data.forEach(notif => {\r\n                        if (notif.content.view === 0) _count++\r\n                    })\r\n                    setCount(count + _count)\r\n                    setData(res.data)\r\n                })\r\n                .catch(err => console.log(err))\r\n            setLoad(true)\r\n        }\r\n        fetch()\r\n    }, [])\r\n\r\n    const handleClickHide = () => {\r\n        let changeData = []\r\n        setIsAnimated(!isAnimated)\r\n        setCount(0)\r\n\r\n        data.forEach(element => {\r\n            if (element.content.view === 0) changeData.push(element.content)\r\n        })\r\n\r\n        axios.put(\"http://localhost:3001/api/notifications/view/update\", changeData)\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className=\"notification\">\r\n        <div className=\"notification-icon-box\" onClick={() => handleClickHide()}>\r\n                <FontAwesomeIcon className={themeReducer ? \"notification-icon-dark\" : \"notification-icon\"} icon=\"bell\"/>\r\n                {count > 0 ? <div className=\"notification-icon-number\">{count}</div> : null}\r\n            </div>\r\n\r\n            {transitionContent.map(({item, key, props}) => item &&(\r\n                <animated.div className={themeReducer ? \"notification-card-dark\" : \"notification-card\"} key={key} style={props}>\r\n                    <div className=\"notification-top\">\r\n                        <p className={themeReducer ? \"txt-dark\" : null}>Notifications</p>\r\n                        <FontAwesomeIcon icon=\"times-circle\" className=\"notification-close-icon\" onClick={() => handleClickHide()} />\r\n                    </div>\r\n                   {load \r\n                   ? data.map((item, index) => {\r\n                        return (\r\n                            <NotificationCard isView={false} data={item} key={index} />\r\n                        )\r\n                    })\r\n                   : null\r\n                    }\r\n\r\n                </animated.div>\r\n            ))}\r\n    </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Notification\\NotificationCard.js",["248","249"],"import React, {useState, useEffect} from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport UserCard from '../Connected/UserCard'\r\nimport moment from \"moment\"\r\nimport axios from \"axios\"\r\n\r\nexport default function NotificationCard({ data }) {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const [message, setMessage] = useState(\"\")\r\n    const [load, setLoad] = useState(false)\r\n    const [isChoice, setIsChoice] = useState(false)\r\n    const [isView, setIsView] = useState(true)\r\n\r\n    useEffect(() => {\r\n        setIsView(data.content.view)\r\n\r\n        switch (data.content.type) {\r\n            case \"like\":\r\n                setMessage(`To liked your post !`)\r\n                break;\r\n        \r\n            case \"comment\":\r\n                setMessage(`To commented your post !`)\r\n                break;\r\n\r\n            case \"invitation\":\r\n                setMessage(`To sent you a friend invitation !`)\r\n                break;\r\n                \r\n            default:\r\n                break;\r\n        }\r\n        setLoad(true)\r\n    }, [])\r\n\r\n    const handleClickInvitation = async choice => {\r\n        if (choice) setIsChoice(true)\r\n        else setLoad(false)\r\n        \r\n        await axios.delete(\"http://localhost:3001/api/notifications/delete\", {data: {\r\n            type: \"invitation\",\r\n            receiverId: data.content.receiverId,\r\n            senderId: data.content.senderId,\r\n            date: data.content.date\r\n        }})\r\n\r\n    }\r\n\r\n    const messageStyle = themeReducer ? \" notification-msg-dark \" : \" notification-msg \"\r\n    \r\n    return ( load ?\r\n        <div className=\"notification-element\">\r\n            <small className={themeReducer ? \"notification-time txt-dark\" : \"notification-time\"}>{moment(data.content.date).fromNow()}</small>\r\n            <div className=\"notification-user\">\r\n                <UserCard data={data.user} />   \r\n            </div>\r\n            <div className=\"notification-alert\">\r\n                <p className={isView ? messageStyle : messageStyle + \"noView\" }>{message}</p>\r\n               {!isView ? <div className=\"notification-new\"></div> : null}\r\n            </div>\r\n           {data.content.type === \"invitation\" \r\n           ? (!isChoice) \r\n                ?   <div className=\"notification-invitation\">\r\n                        <button onClick={() => handleClickInvitation(true)} className=\"notification-btn notification-btn-accept\">Accept</button>\r\n                        <button onClick={() => handleClickInvitation(false)} className=\"notification-btn notification-btn-refuse\">Refuse</button>\r\n                    </div>       \r\n                : null    \r\n            : null}\r\n        </div>\r\n    : null)\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\MainPublication.js",["250"],{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":8,"column":9,"nodeType":"257","messageId":"258","endLine":8,"endColumn":21},{"ruleId":"255","severity":1,"message":"259","line":11,"column":8,"nodeType":"257","messageId":"258","endLine":11,"endColumn":10},{"ruleId":"260","severity":1,"message":"261","line":72,"column":6,"nodeType":"262","endLine":72,"endColumn":8,"suggestions":"263"},{"ruleId":"264","severity":1,"message":"265","line":18,"column":29,"nodeType":"266","messageId":"267","endLine":18,"endColumn":31},{"ruleId":"260","severity":1,"message":"268","line":22,"column":8,"nodeType":"262","endLine":22,"endColumn":10,"suggestions":"269"},{"ruleId":"260","severity":1,"message":"270","line":20,"column":8,"nodeType":"262","endLine":20,"endColumn":10,"suggestions":"271"},{"ruleId":"255","severity":1,"message":"272","line":20,"column":12,"nodeType":"257","messageId":"258","endLine":20,"endColumn":16},{"ruleId":"260","severity":1,"message":"273","line":85,"column":8,"nodeType":"262","endLine":85,"endColumn":10,"suggestions":"274"},{"ruleId":"255","severity":1,"message":"275","line":11,"column":8,"nodeType":"257","messageId":"258","endLine":11,"endColumn":27},{"ruleId":"260","severity":1,"message":"276","line":74,"column":8,"nodeType":"262","endLine":74,"endColumn":18,"suggestions":"277"},{"ruleId":"260","severity":1,"message":"270","line":92,"column":8,"nodeType":"262","endLine":92,"endColumn":10,"suggestions":"278"},{"ruleId":"255","severity":1,"message":"279","line":24,"column":12,"nodeType":"257","messageId":"258","endLine":24,"endColumn":18},{"ruleId":"255","severity":1,"message":"280","line":24,"column":20,"nodeType":"257","messageId":"258","endLine":24,"endColumn":29},{"ruleId":"260","severity":1,"message":"281","line":75,"column":8,"nodeType":"262","endLine":75,"endColumn":14,"suggestions":"282"},{"ruleId":"260","severity":1,"message":"270","line":14,"column":8,"nodeType":"262","endLine":14,"endColumn":10,"suggestions":"283"},{"ruleId":"260","severity":1,"message":"284","line":37,"column":12,"nodeType":"262","endLine":37,"endColumn":14,"suggestions":"285"},{"ruleId":"286","severity":1,"message":"287","line":16,"column":17,"nodeType":"288","messageId":"289","endLine":16,"endColumn":23},{"ruleId":"286","severity":1,"message":"287","line":20,"column":17,"nodeType":"288","messageId":"289","endLine":20,"endColumn":23},{"ruleId":"290","severity":1,"message":"291","line":23,"column":24,"nodeType":"292","endLine":23,"endColumn":78},{"ruleId":"286","severity":1,"message":"287","line":24,"column":17,"nodeType":"288","messageId":"289","endLine":24,"endColumn":23},{"ruleId":"286","severity":1,"message":"287","line":28,"column":17,"nodeType":"288","messageId":"289","endLine":28,"endColumn":23},{"ruleId":"260","severity":1,"message":"293","line":56,"column":12,"nodeType":"262","endLine":56,"endColumn":14,"suggestions":"294"},{"ruleId":"255","severity":1,"message":"295","line":5,"column":10,"nodeType":"257","messageId":"258","endLine":5,"endColumn":25},{"ruleId":"255","severity":1,"message":"296","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":19},{"ruleId":"255","severity":1,"message":"275","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":27},{"ruleId":"255","severity":1,"message":"297","line":19,"column":12,"nodeType":"257","messageId":"258","endLine":19,"endColumn":26},{"ruleId":"255","severity":1,"message":"298","line":19,"column":28,"nodeType":"257","messageId":"258","endLine":19,"endColumn":45},{"ruleId":"260","severity":1,"message":"270","line":50,"column":12,"nodeType":"262","endLine":50,"endColumn":22,"suggestions":"299"},{"ruleId":"300","severity":1,"message":"301","line":92,"column":58,"nodeType":"302","endLine":92,"endColumn":69},{"ruleId":"260","severity":1,"message":"270","line":48,"column":12,"nodeType":"262","endLine":48,"endColumn":22,"suggestions":"303"},{"ruleId":"260","severity":1,"message":"304","line":46,"column":8,"nodeType":"262","endLine":46,"endColumn":10,"suggestions":"305"},{"ruleId":"255","severity":1,"message":"306","line":10,"column":11,"nodeType":"257","messageId":"258","endLine":10,"endColumn":26},{"ruleId":"260","severity":1,"message":"307","line":36,"column":8,"nodeType":"262","endLine":36,"endColumn":10,"suggestions":"308"},{"ruleId":"260","severity":1,"message":"309","line":53,"column":8,"nodeType":"262","endLine":53,"endColumn":18,"suggestions":"310"},"no-native-reassign",["311"],"no-negated-in-lhs",["312"],"no-unused-vars","'MemoryRouter' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authCookie' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["313"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'history.location.state' and 'slug'. Either include them or remove the dependency array.",["314"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["315"],"'chat' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleOpenChat', 'sendMyConnectionOnTime', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["316"],"'PublicationComments' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'slug', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["317"],["318"],"'urlGif' is assigned a value but never used.","'setUrlGif' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'fetchRoomId', 'index', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["319"],["320"],"React Hook useEffect has missing dependencies: 'dispatch', 'getPublications', and 'getSuggestFriend'. Either include them or remove the dependency array.",["321"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'data.hashtag', 'data.publicationId', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["322"],"'FontAwesomeIcon' is defined but never used.","'MainGallery' is defined but never used.","'dataPubliClick' is assigned a value but never used.","'setDataPubliClick' is assigned a value but never used.",["323"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["324"],"React Hook useEffect has missing dependencies: 'count' and 'userDataReducer.userId'. Either include them or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["325"],"'userDataReducer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.content.type' and 'data.content.view'. Either include them or remove the dependency array. If 'setIsView' needs the current value of 'data.content.view', you can also switch to useReducer instead of useState and read 'data.content.view' in the reducer.",["326"],"React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["327"],"no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"332","fix":"338"},{"desc":"339","fix":"340"},{"desc":"332","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"346","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},"Update the dependencies array to be: [authCookie, dispatch]",{"range":"355","text":"356"},"Update the dependencies array to be: [history.location.state, slug]",{"range":"357","text":"358"},"Update the dependencies array to be: [dispatch]",{"range":"359","text":"360"},"Update the dependencies array to be: [handleOpenChat, sendMyConnectionOnTime, userDataReducer.userId]",{"range":"361","text":"362"},"Update the dependencies array to be: [dispatch, history, location, slug, userDataReducer.userId]",{"range":"363","text":"364"},{"range":"365","text":"360"},"Update the dependencies array to be: [data, dispatch, fetchRoomId, index, userDataReducer.userId]",{"range":"366","text":"367"},{"range":"368","text":"360"},"Update the dependencies array to be: [dispatch, getPublications, getSuggestFriend]",{"range":"369","text":"370"},"Update the dependencies array to be: [data.hashtag, data.publicationId, userDataReducer.userId]",{"range":"371","text":"372"},"Update the dependencies array to be: [dispatch, location]",{"range":"373","text":"374"},{"range":"375","text":"374"},"Update the dependencies array to be: [count, userDataReducer.userId]",{"range":"376","text":"377"},"Update the dependencies array to be: [data.content.type, data.content.view]",{"range":"378","text":"379"},"Update the dependencies array to be: [location, slug]",{"range":"380","text":"381"},[3093,3095],"[authCookie, dispatch]",[649,651],"[history.location.state, slug]",[635,637],"[dispatch]",[3903,3905],"[handleOpenChat, sendMyConnectionOnTime, userDataReducer.userId]",[2965,2975],"[dispatch, history, location, slug, userDataReducer.userId]",[3081,3083],[2780,2786],"[data, dispatch, fetchRoomId, index, userDataReducer.userId]",[361,363],[1436,1438],"[dispatch, getPublications, getSuggestFriend]",[2415,2417],"[data.hashtag, data.publicationId, userDataReducer.userId]",[1756,1766],"[dispatch, location]",[1623,1633],[1823,1825],"[count, userDataReducer.userId]",[1123,1125],"[data.content.type, data.content.view]",[1992,2002],"[location, slug]"]