[{"d:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\index.js":"1","d:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\reportWebVitals.js":"2","d:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\App.js":"3","d:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\header.js":"4","d:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\connected.js":"5","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\index.js":"6","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\reportWebVitals.js":"7","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\App.js":"8","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\header.js":"9","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\connected.js":"10","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Assets\\fontawesome.js":"11","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\userCard.js":"12","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\Connected.js":"13","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\Header.js":"14","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\UserCard.js":"15","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\StoryCard.js":"16","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\MainHome.js":"17","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Tchat\\MainTchat.js":"18","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\TchatDiv\\TchatDiv.js":"19","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\Index.js":"20","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Tchat\\Index.js":"21","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\Index.js":"22","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\MainAccount.js":"23","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\themeReducer.js":"24","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCard.js":"25","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\NewPubliBox.js":"26","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationComments.js":"27","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Index.js":"28","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\MainGaming.js":"29","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Api.js":"30","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\StreamCard.js":"31","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Live.js":"32","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Login.js":"33","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\PasswordForget.js":"34","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Signup.js":"35","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Loader.js":"36","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Error.js":"37","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\userDataReducer.js":"38","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\modifyAccount.js":"39","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\ModifyAccount.js":"40","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\AccountLoader.js":"41","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCardLoader.js":"42","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\RemoveFriend.js":"43","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationDelete.js":"44","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\zIndexReducer.js":"45","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Tchat\\tchatEmpty.js":"46","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Tchat\\TchatEmpty.js":"47","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\TchatDiv\\Message.js":"48"},{"size":266,"mtime":1608312035449,"results":"49","hashOfConfig":"50"},{"size":362,"mtime":499162500000,"results":"51","hashOfConfig":"50"},{"size":290,"mtime":1608314091224,"results":"52","hashOfConfig":"50"},{"size":172,"mtime":1608313996810,"results":"53","hashOfConfig":"50"},{"size":183,"mtime":1608314003100,"results":"54","hashOfConfig":"50"},{"size":798,"mtime":1614421732060,"results":"55","hashOfConfig":"56"},{"size":362,"mtime":499162500000,"results":"57","hashOfConfig":"56"},{"size":4126,"mtime":1614963331651,"results":"58","hashOfConfig":"56"},{"size":2774,"mtime":1608733181688,"results":"59","hashOfConfig":"60"},{"size":1559,"mtime":1608734536956,"results":"61","hashOfConfig":"60"},{"size":558,"mtime":1614259745314,"results":"62","hashOfConfig":"56"},{"size":777,"mtime":1608738390861,"results":"63","hashOfConfig":"60"},{"size":3940,"mtime":1615132778436,"results":"64","hashOfConfig":"56"},{"size":4479,"mtime":1614785920226,"results":"65","hashOfConfig":"56"},{"size":1166,"mtime":1614758570933,"results":"66","hashOfConfig":"56"},{"size":578,"mtime":1611394752841,"results":"67","hashOfConfig":"56"},{"size":3854,"mtime":1615114733655,"results":"68","hashOfConfig":"56"},{"size":408,"mtime":1614759019245,"results":"69","hashOfConfig":"56"},{"size":5223,"mtime":1615133505554,"results":"70","hashOfConfig":"56"},{"size":403,"mtime":1614967702039,"results":"71","hashOfConfig":"56"},{"size":1033,"mtime":1614964752136,"results":"72","hashOfConfig":"56"},{"size":268,"mtime":1614258655375,"results":"73","hashOfConfig":"56"},{"size":10397,"mtime":1615020824631,"results":"74","hashOfConfig":"56"},{"size":253,"mtime":1609689546345,"results":"75","hashOfConfig":"56"},{"size":7308,"mtime":1614967851246,"results":"76","hashOfConfig":"56"},{"size":8915,"mtime":1615022437670,"results":"77","hashOfConfig":"56"},{"size":6182,"mtime":1614967808096,"results":"78","hashOfConfig":"56"},{"size":230,"mtime":1614352130381,"results":"79","hashOfConfig":"56"},{"size":4994,"mtime":1614423157444,"results":"80","hashOfConfig":"56"},{"size":752,"mtime":1613574366573,"results":"81","hashOfConfig":"56"},{"size":1906,"mtime":1611394707169,"results":"82","hashOfConfig":"56"},{"size":1426,"mtime":1614423150275,"results":"83","hashOfConfig":"56"},{"size":3529,"mtime":1612101159703,"results":"84","hashOfConfig":"56"},{"size":1295,"mtime":1610908278238,"results":"85","hashOfConfig":"56"},{"size":5293,"mtime":1615018327290,"results":"86","hashOfConfig":"56"},{"size":587,"mtime":1613562962346,"results":"87","hashOfConfig":"56"},{"size":612,"mtime":1615018607179,"results":"88","hashOfConfig":"56"},{"size":396,"mtime":1614076875508,"results":"89","hashOfConfig":"56"},{"size":5996,"mtime":1611940998424,"results":"90","hashOfConfig":"60"},{"size":10188,"mtime":1615023672218,"results":"91","hashOfConfig":"56"},{"size":2382,"mtime":1613666934268,"results":"92","hashOfConfig":"56"},{"size":1357,"mtime":1614077360624,"results":"93","hashOfConfig":"56"},{"size":2291,"mtime":1614356831388,"results":"94","hashOfConfig":"56"},{"size":1891,"mtime":1614959342211,"results":"95","hashOfConfig":"56"},{"size":345,"mtime":1614605527440,"results":"96","hashOfConfig":"56"},{"size":522,"mtime":1614697018953,"results":"97","hashOfConfig":"56"},{"size":522,"mtime":1614757107803,"results":"98","hashOfConfig":"56"},{"size":583,"mtime":1615132168966,"results":"99","hashOfConfig":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ff68l4",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},"rdbbsr",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"113"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wm8ny9",{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"113"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"113"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"113"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"113"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"113"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"113"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"113"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"113"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"113"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"202","messages":"203","errorCount":3,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"205"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"113"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\index.js",[],"d:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\reportWebVitals.js",[],"d:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\App.js",[],"d:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\header.js",[],["211","212"],"d:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\connected.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\index.js",[],["213","214"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\reportWebVitals.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\App.js",["215"],"//TODO -> Protéger ces Routes plus tard\n//TODO -> thème en cookie\n\nimport {useEffect, useState} from \"react\"\nimport \"./Styles/app.css\"\nimport {Route, Switch, useLocation} from 'react-router-dom'\nimport Cookie from \"js-cookie\"\nimport axios from \"axios\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {useTransition, animated, config} from \"react-spring\"\n\n// Components\nimport Header from \"./Components/Header/Header\"\nimport Connected from \"./Components/Connected/Connected\"\nimport Home from \"./Components/Home/Index\"\nimport Tchat from \"./Components/Tchat/Index\"\nimport Account from \"./Components/Account/Index\"\nimport Gaming from \"./Components/Gaming/Index\"\nimport Live from \"./Components/Gaming/Live\"\nimport Login from \"./Components/Connexion/Login\"\nimport Signup from \"./Components/Connexion/Signup\"\nimport PasswordForget from \"./Components/Connexion/PasswordForget\"\nimport Error from \"./Components/Services/Error\"\nimport Loader from \"./Components/Services/Loader\"\n\nfunction App() {\n\n  const authCookie = Cookie.get(\"user\")\n  const themeReduceur = useSelector(state => state.Theme)\n  const zIndexReduceur = useSelector(state => state.ZIndexReduceur)\n  const [authorization, setAuthorization] = useState(false)\n  const [load, setLoad] = useState(false)\n  const dispatch = useDispatch()\n  const location = useLocation()\n  const verifyPathname = () => {\n    // Avoid listen pathname /:slug on root friend for not repeat animation and refresh page each change path\n    if (location.pathname.includes(\"/friends/\")) {\n      if (location.pathname.includes(\"/friends/empty\")) {\n        return true\n      }\n      return false\n    } else {\n      return true\n    } \n  }\n  const transitions = useTransition(location, location => location.pathname, {\n    from: verifyPathname() ? {opacity: 0, transform: 'translate3d(-50%, 0, 0)', position: 'absolute'} : {opacity: 1, transform: 'translate3d(0, 0, 0)', position: 'absolute'},\n    enter: verifyPathname() ? {opacity: 1, transform: 'translate3d(0%, 0, 0)'} : {opacity: 1, transform: 'translate3d(0, 0, 0)'},\n    leave: verifyPathname() ? {opacity: 0, transform: 'translate3d(50%, 0, 0)'} : {opacity: 1, transform: 'translate3d(0, 0, 0)'},\n    config: config.stiff\n  })\n\n  useEffect(() => {\n    const fecthData = async () => {\n      await axios.post(\"http://localhost:3001/api/auth/login-token\", {cookie: authCookie})\n        .then(res => {\n          setAuthorization(res.data.authorization)\n          if (res.data.authorization) {\n            dispatch({\n              type: \"ADD_DATA\",\n              payload: res.data.informations\n            })\n          }\n        })\n        .catch(err => console.log(err))\n        setLoad(true)\n    }\n    fecthData()\n  }, [])\n\n  return (\n    load \n      ? authorization \n        ? \n          <div className={themeReduceur ? \"App-dark\" : \"App\"}>\n            <Header />\n            <div className=\"container\">\n              {transitions.map(({item: location, props, key}) => {\n                return (\n                  <animated.div key={key} style={props} className={zIndexReduceur ? \"container-anim container-index\" : \"container-anim\"}>\n                    <Switch location={location}>\n                      <Route exact path=\"/\" component={Home} /> \n                      <Route exact path=\"/account/:slug\" component={Account} />\n                      <Route exact path=\"/gaming\" component={Gaming} />\n                      <Route excat path=\"/gaming/live/:slug\" component={Live} />\n                      <Route exact path=\"/friends/:slug\" component={Tchat} />\n                      <Route component={Error} />\n                    </Switch>\n                  </animated.div>\n                )\n              })}\n            </div>\n            <Connected choiceCss={true} />\n          </div>\n      \n          : <Switch>\n            <Route exact path={[\"/login\", \"/\"]} component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/password-forget\" component={PasswordForget} />\n            <Route component={Error} />\n          </Switch>\n      : <Loader />\n  );\n\n}\n\nexport default App;\n\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\header.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\connected.js",["216","217"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Assets\\fontawesome.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\userCard.js",["218"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\Connected.js",["219"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Header\\Header.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connected\\UserCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\StoryCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\MainHome.js",["220"],"import React, {useState, useEffect} from 'react'\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport \"../../Styles/home.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport axios from \"axios\"\r\nimport StoryCard from './StoryCard'\r\nimport PublicationCard from '../Publication/PublicationCard'\r\nimport NewPubliBox from '../Publication/NewPubliBox'\r\nimport PublicationComments from '../Publication/PublicationComments'\r\nimport Loader from \"../Services/Loader\"\r\n\r\nexport default function MainHome({openFullImg}) {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const dispatch = useDispatch()\r\n    const [load, setLoad] = useState(false)\r\n    const [newPubli, setNewPubli] = useState(false)\r\n    const [openCommentsPubli, setOpenCommentsPubli] = useState(false)\r\n    const [data, setData] = useState(null)\r\n    const [dataPubliClick, setDataPubliClick] = useState(null)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n        // Get all publications\r\n        async function fetchData() {\r\n            await axios.get(\"http://localhost:3001/api/publications/all\")\r\n                .then(res => {\r\n                        setData(res.data)\r\n                    })\r\n                .catch(err => console.log(err))\r\n                setLoad(true)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const handleOpenCommentsPubli = (dataPubli) => {\r\n        setDataPubliClick(dataPubli)\r\n        setOpenCommentsPubli(true)\r\n    }\r\n\r\n    const handleCloseCommentsPubli = () => {\r\n        setOpenCommentsPubli(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={themeReducer ? \"mainHome-dark\" : \"mainHome\"}>\r\n        \r\n            {openCommentsPubli ? <PublicationComments close={handleCloseCommentsPubli} data={dataPubliClick} /> : null } \r\n\r\n            <div>\r\n                {newPubli ? <NewPubliBox publi={newPubli} setPubli={setNewPubli} />  : null}\r\n\r\n                <div className=\"storys\">\r\n                    <div className={themeReducer ? \"story-add border-dark\" : \"story-add\"}>\r\n                        <FontAwesomeIcon icon=\"plus\" className={themeReducer ? \"story-icon txt-dark\" : \"story-icon\"}/>\r\n                    </div>\r\n                <StoryCard />\r\n                </div>\r\n\r\n                <div className=\"new-publi\">\r\n                    <div className=\"write-publi\" onClick={() => setNewPubli(true)}>\r\n                        <FontAwesomeIcon className={themeReducer ? \"icon-new-publi txt-dark\" : \"icon-new-publi\"} icon=\"comments\" />\r\n                        <div className=\"input-new-publi\" type=\"text\">\r\n                            <p className={themeReducer ? \"write-publi-placeholder txt-dark\" : \"write-publi-placeholder\"}>What do you mean ?</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bottom-new-publi\">\r\n                        <FontAwesomeIcon icon=\"image\" className={themeReducer ? \"icon-bottom-new-publi txt-dark\" : \"icon-bottom-new-publi\"}  onClick={() => setNewPubli(true)}/>\r\n                        <p className={themeReducer ? \"icon-bottom-new-publi txt-dark\" : \"icon-bottom-new-publi\"}  onClick={() => setNewPubli(true)}>GIF</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    {load \r\n                    ? data.map((item, index) => {\r\n                        return (\r\n                            <div key={index} className=\"box-publi\">\r\n                                <PublicationCard open={handleOpenCommentsPubli} data={item} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                    : <Loader />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Tchat\\MainTchat.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\TchatDiv\\TchatDiv.js",["221"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Home\\Index.js",["222"],"import React, {useState} from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport \"../../Styles/home.css\"\r\n\r\n//Components\r\nimport MainHome from \"./MainHome\"\r\n\r\nexport default function Index() {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n\r\n    return (\r\n        <section className={themeReducer ? \"home-dark\" : \"home\"}>\r\n            <MainHome />\r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Tchat\\Index.js",["223","224"],"import React, {useState, useEffect} from 'react'\r\nimport {useHistory, useParams} from \"react-router-dom\"\r\nimport \"../../Styles/tchat.css\"\r\n\r\n//Components\r\nimport MainTchat from \"./MainTchat\"\r\nimport Connected from \"../Connected/Connected\"\r\nimport TchatEmpty from \"./TchatEmpty\"\r\n\r\nexport default function Index() {\r\n\r\n    const [friendClick, setFriendClick] = useState(false)\r\n    const [data, setData] = useState(null)\r\n    const { slug } = useParams()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (slug.toString() != \"empty\") {\r\n            setFriendClick(true)\r\n            setData(history.location.state)\r\n        }\r\n    }, [])\r\n\r\n    const handleFriendClick = (data) => {\r\n        history.push({pathname: `/friends/${data.userId}`, state: data})\r\n    }\r\n\r\n    return (\r\n        <section className=\"tchat\">\r\n            <Connected choiceCss={false} friendClick={(data) => handleFriendClick(data)} />\r\n            {friendClick ? <MainTchat data={data} /> : <TchatEmpty />}\r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\MainAccount.js",["225"],"import React, {useState, useEffect} from 'react'\r\nimport \"../../Styles/account.css\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {useParams, useLocation, useHistory} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport NewPubliBox from '../Publication/NewPubliBox'\r\nimport PublicationCard from '../Publication/PublicationCard'\r\nimport PublicationComments from '../Publication/PublicationComments'\r\nimport ModifyAccount from \"./ModifyAccount\"\r\nimport AccountLoader from \"./AccountLoader\"\r\nimport RemoveFriend from \"./RemoveFriend\"\r\n\r\nexport default function MainAccount() {\r\n    \r\n    const location = useLocation()\r\n    const history = useHistory()\r\n    const {slug} = useParams()\r\n    const dispatch = useDispatch()\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const [load, setLoad] = useState(false)\r\n    const [openNewPubli, setOpenNewPubli] = useState(false)\r\n    const [openCommentsPubli, setOpenCommentsPubli] = useState(false)\r\n    const [openModifyAccount, setOpenModifyAccount] = useState(false)\r\n    const [openRemoveFriend, setOpenRemoveFriend] = useState(false)\r\n    const [dataUser, setDataUser] = useState(null)\r\n    const [dataPublications, setDataPublications] = useState(null)\r\n    const [dataPubliClick, setDataPubliClick] = useState(null)\r\n    const [isEmpty, setIsEmpty] = useState(true)\r\n    const [isFriend, setIsFriend] = useState(false)\r\n\r\n    useEffect(() => {\r\n        // Get informations for account\r\n        setLoad(false)\r\n        const id = slug\r\n\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n\r\n        const fetchDataAccount = async () => {\r\n            await axios.get(`http://localhost:3001/api/user/account/informations/${id}`)\r\n                .then(res => {\r\n                    if (res.data.alert) {\r\n                        return history.push({pathname: '/error404'})\r\n                    } else {\r\n                        setDataUser(res.data.userData)\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n                \r\n                await axios.get(`http://localhost:3001/api/publications/account/${id}`)\r\n                .then(res => {\r\n                    if (res.data.length === 0) {\r\n                        setIsEmpty(true)\r\n                    } else {\r\n                        setDataPublications(res.data)\r\n                        setIsEmpty(false)\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n                \r\n                await axios.post(`http://localhost:3001/api/user/account/isFriend/${id}`, {userId: userDataReducer.userId})\r\n                .then(res => {\r\n                    setIsFriend(res.data)\r\n                })\r\n                .catch(err => console.log(err))\r\n            setLoad(true)\r\n        }\r\n        fetchDataAccount()\r\n    }, [location])\r\n\r\n    const handleCloseCommentsPubli = () => {\r\n        setOpenCommentsPubli(false)\r\n    }\r\n\r\n    const handleOpenCommentsPubli = (dataPubli) => {\r\n        setDataPubliClick(dataPubli)\r\n        setOpenCommentsPubli(!openCommentsPubli)\r\n    }\r\n\r\n    const handleOpenModifyAccount = () => {\r\n        setOpenModifyAccount(!openModifyAccount)\r\n    }\r\n\r\n    const handleDeleteFriend = () => {\r\n        setOpenRemoveFriend(false)\r\n        setIsFriend(false)\r\n    }\r\n\r\n    const handleAddFriend = () => {\r\n        axios.post(`http://localhost:3001/api/user/account/friend/add/${dataUser[0].userId}`, {userId: userDataReducer.userId})\r\n            .then(res => {\r\n                setIsFriend(true)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className={themeReducer ? \"mainAccount-dark\" : \"mainAccount\"}>\r\n            {load ?\r\n                <div className={themeReducer ? \"account-container-dark\" : \"account-container\"}>\r\n                    {openCommentsPubli ? <PublicationComments close={handleCloseCommentsPubli} data={dataPubliClick} /> : null}               \r\n                    {openNewPubli ? <NewPubliBox /*publi={openNewPubli}*/ setPubli={setOpenNewPubli} />  : null}\r\n                    {openModifyAccount ? <ModifyAccount slug={slug} setClose={setOpenModifyAccount} /> : null}\r\n                    {openRemoveFriend ? <RemoveFriend slug={slug} friendId={dataUser[0].userId} setClose={handleDeleteFriend} /> : null}\r\n\r\n                    <div className={themeReducer ? \"account-top-dark\" : \"account-top\"}>\r\n                        <div className=\"account-bg\">\r\n                            <img className=\"account-bg-img\" src={dataUser[0].bannerImageUrl} alt=\"Your banner frame\"/>\r\n                        </div>\r\n                        <div className=\"account-info\">\r\n                            <div className=\"account-info-top\">\r\n                                <div className={themeReducer ? \"account-info-img-dark\" : \"account-info-img\"}>\r\n                                    <img className=\"img-profile\" src={dataUser[0].profileImageUrl} alt=\"Your profile frame\"/>\r\n                                </div>\r\n                                <div>\r\n                                    <p className={themeReducer ? \"txt-dark\" : null}>{dataUser[0].firstName} {dataUser[0].lastName}</p>\r\n                                </div>\r\n\r\n                            {parseInt(slug) !== userDataReducer.userId\r\n                            ?  isFriend\r\n                                ?   <div className=\"account-action\">\r\n                                        <p className={themeReducer ? \"txt-dark\" : null} onClick={() => setOpenRemoveFriend(true)}>Friend</p>\r\n                                        <FontAwesomeIcon icon=\"user-friends\" className={themeReducer ? \"txt-dark\" : \"edit-icon\"}/>\r\n                                    </div>\r\n                                :   <div className=\"account-action\">\r\n                                        <p className={themeReducer ? \"txt-dark\" : null} onClick={() => handleAddFriend()}>Add friend</p>\r\n                                        <FontAwesomeIcon icon=\"user-plus\" className={themeReducer ? \"txt-dark\" : \"edit-icon\"}/>\r\n                                    </div>\r\n                            :   <div className=\"account-action\">\r\n                                    <p className={themeReducer ? \"txt-dark\" : null} onClick={() => handleOpenModifyAccount()}>Modify my account</p>\r\n                                    <FontAwesomeIcon icon=\"edit\" className={themeReducer ? \"txt-dark\" : \"edit-icon\"}/>\r\n                                </div>\r\n                            }\r\n\r\n                            </div>\r\n                            <div className=\"account-bottom\">\r\n                                <div className=\"account-icon\">\r\n                                    <div className=\"account-icon-box\">\r\n                                        <FontAwesomeIcon icon=\"heart\" className=\"heart-icon\"/>\r\n                                        <p className={themeReducer ? \"account-icon-nbr-dark\" : \"account-icon-nbr\"}>{dataUser[1].likesTotal}</p>\r\n                                    </div>\r\n                                    <div className=\"account-icon-box\">\r\n                                        <FontAwesomeIcon icon=\"user-friends\" className=\"user-friends-icon\"/>\r\n                                        <p className={themeReducer ? \"account-icon-nbr-dark\" : \"account-icon-nbr\"}>{dataUser[1].friendsTotal}</p>\r\n                                    </div>\r\n                                    <div className=\"account-icon-box\">\r\n                                        <FontAwesomeIcon icon=\"pen\" className=\"pen-icon\"/>\r\n                                        <p className={themeReducer ? \"account-icon-nbr-dark\" : \"account-icon-nbr\"}>{dataUser[1].publicationsTotal}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"account-bio\">\r\n                                    <p className={themeReducer ? \"txt-dark\" : null}>{dataUser[0].bio}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"account-publi\">\r\n                        {parseInt(slug) !== userDataReducer.userId\r\n                        ? null\r\n                        :   <div className=\"new-publi\">\r\n                                <div className=\"write-publi\" onClick={() => setOpenNewPubli(true)}>\r\n                                    <FontAwesomeIcon className={themeReducer ? \"icon-new-publi txt-dark\" : \"icon-new-publi\"} icon=\"comments\" />\r\n                                    <div className=\"input-new-publi\" type=\"text\">\r\n                                        <p className={themeReducer ? \"write-publi-placeholder txt-dark\" : \"write-publi-placeholder\"}>What do you mean ?</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"bottom-new-publi\">\r\n                                    <FontAwesomeIcon icon=\"image\" className={themeReducer ? \"icon-bottom-new-publi txt-dark\" : \"icon-bottom-new-publi\"}  onClick={() => setOpenNewPubli(true)}/>\r\n                                    <p className={themeReducer ? \"icon-bottom-new-publi txt-dark\" : \"icon-bottom-new-publi\"}  onClick={() => setOpenNewPubli(true)}>GIF</p>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    {isEmpty\r\n                    ?   <div className=\"account-empty\">\r\n                            <p className={themeReducer ? \"txt-dark\" : null}>This account seems very empty to me ..</p>\r\n                        </div>\r\n                    : dataPublications.map((item, index) => {\r\n                        return (\r\n                            <div key={index} className=\"box-publi\">\r\n                                <PublicationCard open={handleOpenCommentsPubli} data={item} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                    }\r\n                </div>\r\n            : <AccountLoader />}\r\n        </div>\r\n    )\r\n}","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\themeReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCard.js",["226"],"import React, {useState, useEffect} from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport {Link} from \"react-router-dom\"\r\nimport \"../../Styles/publication.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport moment from \"moment\"\r\nimport axios from 'axios'\r\nimport {useTransition, useSpring, animated} from \"react-spring\"\r\nimport PublicationCardLoader from \"./PublicationCardLoader\"\r\nimport PublicationDelete from \"./PublicationDelete\"\r\n\r\nexport default function PublicationCard({open, data, noClick}) { \r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const [hashtag, setHashtag] = useState(\"\")\r\n    const [deleteAlert, setDeleteAlert] = useState(false)\r\n    const [deleteMsg, setDeleteMsg] = useState(true)\r\n    const [isAnimated, setIsAnimated] = useState(true)\r\n    const [spam, setSpam] = useState(0)\r\n    const [load, setLoad] = useState(false)\r\n    const [isLike, setIsLike] = useState(false)\r\n    const [dataLikes, setDataLikes] = useState(null)\r\n\r\n    const transitionLike = useTransition(isAnimated, null, {\r\n        from: { opacity: 0, transform: 'translateY(-20px)', position: 'absolute' },\r\n        enter: { opacity: 1, transform: 'translateY(0px)', position: 'relative'},\r\n        leave: { opacity: 0, transform: 'translateY(-20px)', position: 'absolute' },\r\n    })\r\n    const {x} = useSpring({\r\n        from: {x: 0}, x: isAnimated ? 1 : 0,\r\n        config: {duration: 500}\r\n    })\r\n\r\n    useEffect(() => {\r\n        // To separate a long string into several hashtags if there is a need\r\n        if (data.hashtag.length > 0) {\r\n            let _hashtag = data.hashtag\r\n            _hashtag = _hashtag.replace(\";\", \" #\")\r\n            _hashtag = \"#\" + _hashtag\r\n            setHashtag(_hashtag)\r\n        }\r\n\r\n        axios.post(`http://localhost:3001/api/publications/likes/get/${data.publicationId}`, {userId: userDataReducer.userId})\r\n            .then(res => {\r\n                setDataLikes(res.data.like.likesTotal)\r\n                if (res.data.isLike.length > 0) setIsLike(true)\r\n                setLoad(true)\r\n            })\r\n            .catch(err => console.log(err))\r\n        }, [])\r\n\r\n    const handleDelete = () => {\r\n        if (data.userId === userDataReducer.userId) {\r\n            axios.delete(`http://localhost:3001/api/publications/account/delete/${data.userId + \"-\" + data.publicationId}`)\r\n                .then(res => {\r\n                    if (res.data.alert) {\r\n                        setDeleteMsg(false)\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n            }\r\n    }\r\n\r\n    const handleLike = async () => {\r\n        // Anti spam request\r\n        setIsAnimated(!isAnimated)\r\n\r\n        if (spam <= 4) {\r\n            if (isLike) {\r\n                await axios.post(`http://localhost:3001/api/publications/like/delete/${data.publicationId}`, {userId: userDataReducer.userId})\r\n                    .then()\r\n                    .catch(err => console.log(err))\r\n            } else if (isLike === false) {\r\n                await axios.post(`http://localhost:3001/api/publications/like/add/${data.publicationId}`, {userId: userDataReducer.userId})\r\n                    .then()\r\n                    .catch(err => console.log(err))\r\n            }\r\n        }\r\n        setSpam(spam + 1)\r\n    }\r\n\r\n    const cssDelete = deleteMsg ? themeReducer ? \"publi-dark\" : \"publi\" : \"publi-none\"\r\n\r\n    return load ?\r\n        <div className={cssDelete}>\r\n            \r\n            {deleteAlert ? <PublicationDelete setDeleteAlert={setDeleteAlert} deletePubli={() => handleDelete()} /> : null}\r\n\r\n            {data.userId === userDataReducer.userId\r\n            ? <div className=\"publi-delete-box\"> \r\n                <button className={themeReducer ? \"publi-delete-btn-dark\" : \"publi-delete-btn\"} onClick={() => setDeleteAlert(true)}>Delete</button>\r\n              </div>\r\n            : null}\r\n\r\n            <div className=\"publi-top\">  \r\n                <div className=\"info-publi\">\r\n                    <div className=\"left-publi\">\r\n                        <div className=\"left-publi-img-box\">\r\n                            <Link to={`/account/${data.userId}`}>\r\n                                <img className=\"left-publi-img\" src={data.profileImageUrl} alt=\"Profile frame\"/>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"left-publi-info\">\r\n                            <Link to={`/account/${data.userId}`} className={themeReducer ? 'txt-dark' : \"left-publi-info-link\"}>{data.firstName} {data.lastName}</Link>\r\n                            <small className={themeReducer ? 'txt-dark' : null}>{moment(data.date).fromNow()}</small>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"right-publi\">\r\n                        <p className={themeReducer ? 'txt-dark' : null}>{hashtag}</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"text-publi\">\r\n                    <p className={themeReducer ? 'txt-dark' : null} onClick={() => noClick ? null : open(data)}>{data.text}</p>\r\n                </div>\r\n            </div>\r\n             \r\n                {data.publicationImageUrl != null \r\n                ? <div className=\"bg-publi\">\r\n                    <img className=\"bg-publi-img\" src={data.publicationImageUrl} onClick={() => noClick ? null : open(data)} alt=\"Publication frame\"/>\r\n                  </div>\r\n                : null}\r\n\r\n                <div className=\"social-publi\">\r\n                    <div className=\"icon-publi-box\">\r\n                        <animated.i className=\"fas fa-heart icon-publi\"\r\n                        onClick={() => handleLike()}\r\n                         style={{\r\n                            color: x.interpolate({\r\n                                range: [0, 1],\r\n                                output: isLike ? ['#707070', '#ff4336'] : ['#ff4336', '#707070']\r\n                            }),\r\n                            transform: x.interpolate({\r\n                                range: [0, 0.2, 0.3, 0.5, 0.6, 0.7, 0.8, 1],\r\n                                output: [1, 0.9, 0.5, 1.2, 1, 0.8, 1.1, 1]\r\n                              }).interpolate(x => `scale(${x})`)\r\n                        }}></animated.i>\r\n                        <div className=\"icon-publi-animation\">\r\n                            {transitionLike.map(({item, key, props}) => item \r\n                                ? <animated.p key={key} style={props} className={themeReducer ? 'txt-dark' : null}>{dataLikes}</animated.p>\r\n                                : <animated.p key={key} style={props} className={themeReducer ? 'txt-dark' : null}>{isLike ? dataLikes - 1 : dataLikes + 1}</animated.p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"icon-publi-box\">\r\n                        <FontAwesomeIcon className=\"comment-publi icon-publi\" icon=\"comment\" />\r\n                        <p className={themeReducer ? 'txt-dark' : null}>{data.commentsTotal}</p>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    : <PublicationCardLoader/>\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\NewPubliBox.js",["227"],"import React, {useState, useRef} from 'react'\r\nimport \"../../Styles/publication.css\"\r\nimport {useSelector} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport {Gifs} from \"../../Api\"\r\nimport axios from \"axios\"\r\nimport imageCompression from \"browser-image-compression\"\r\nimport {useTransition, animated, config} from \"react-spring\"\r\n\r\nexport default function NewPubliBox({ setPubli }) {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const openFile = useRef(null)\r\n    const hashtagValue = useRef(\"\")\r\n    const [imgIsVisisble ,setImgIsVisible] = useState(false)\r\n    const [imgVisible, setImgVisible] = useState(null)\r\n    const [dataFile, setDataFile] = useState(null)\r\n    const [alertMsg, setAlertMsg] = useState(\"\")\r\n    const [alertCss, setAletCss] = useState(true)\r\n    const [newHashtag, setNewHashtag] = useState(\"\")\r\n    const [isAnimated, setIsAnimated] = useState(true)\r\n    const transitionContent = useTransition(isAnimated, null, {\r\n        from: {opacity: 0, transform: \"scale(0)\"},\r\n        enter: {opacity: 1, transform: \"scale(1)\"},\r\n        leave: {opacity: 0, transform: \"scale(0)\"},\r\n        config: config.stiff\r\n    })\r\n    const transitionContentOpacity = useTransition(isAnimated, null, {\r\n        from: {opacity: 0},\r\n        enter: {opacity: 0.5},\r\n        leave: {opacity: 0},\r\n        config: config.stiff\r\n    })\r\n    const [data, setData] = useState({\r\n        text: \"\",\r\n        hashtag: []\r\n    })\r\n\r\n    const verifyInformations = () => {\r\n        let regex = /^[^@&\":()!_$*€<>£`'µ§%+=;?#]+$/\r\n\r\n        if (data.text.length > 2) {\r\n            if (data.hashtag.length === 0) {\r\n                return true\r\n            } else {\r\n                for (let i = 0; i < data.hashtag.length; i++) {\r\n                    if (data.hashtag[i].match(regex)) {\r\n                        return true\r\n                    } else {\r\n                        setAletCss(true)\r\n                        setAlertMsg(\"Do not use special characters for your hashtag !\")\r\n                        return false\r\n                    }\r\n                }\r\n            }   \r\n        } else {\r\n            setAletCss(true)\r\n            setAlertMsg(\"Your text must contain at least 2 characters !\")\r\n            return false\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        // Publication text\r\n        if (verifyInformations()) {\r\n            axios.post(`http://localhost:3001/api/publications/add/${userDataReducer.userId}`, data)\r\n                .then(res => {\r\n                    if (res.data.alert) {\r\n                        // Publication image\r\n                        if (dataFile != null) {\r\n                            handleCompressionImage(res.data.publicationId)\r\n                        } else {\r\n                            setAletCss(false)\r\n                            setAlertMsg(\"Publications published !\")\r\n                        }\r\n                    }\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }\r\n\r\n    const handleClosePublication = () => {\r\n        setIsAnimated(!isAnimated)\r\n        setTimeout(() => {\r\n            setPubli(false)\r\n        }, 200);\r\n    }\r\n    \r\n    const handleChange = e => {\r\n        setData({...data, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const handleChangeHashtag = () => {\r\n        if (data.hashtag.length >= 3) {\r\n            setAletCss(true)\r\n            setAlertMsg(\"You cannot use more than 3 hashtags !\")\r\n        } else {\r\n            let hashtagSplit = newHashtag.split(\" \").join(\"\");\r\n            setData({...data, hashtag: [...data.hashtag, hashtagSplit]})\r\n        }\r\n        hashtagValue.current.value = \"\"\r\n    }\r\n\r\n    const handleClickFile = () => {\r\n        openFile.current.click()\r\n    }\r\n\r\n    // Image compression\r\n    const handleCompressionImage = (publicationId) => {\r\n        let imageFile = dataFile;     \r\n        let options = {\r\n          maxSizeMB: 0.5,\r\n          maxWidthOrHeight: 1920,\r\n          useWebWorker: true\r\n        }\r\n\r\n        imageCompression(imageFile, options)\r\n          .then(compressedFile => {\r\n                let formData = new FormData()\r\n                formData.append('file', compressedFile)\r\n                formData.append('id', publicationId)\r\n                axios.post(`http://localhost:3001/api/publications/add/image/${userDataReducer.userId}`, formData)\r\n                    .then(res => {\r\n                        setAletCss(false)\r\n                        setAlertMsg(res.data.message)\r\n                    })\r\n                    .catch(err => console.log(err))\r\n          })\r\n          .catch(error => {\r\n            console.log(error.message);\r\n          });\r\n      }\r\n      \r\n\r\n    const handleChangeFile = e => {\r\n        setImgVisible(URL.createObjectURL(e.target.files[0]))\r\n        setDataFile(e.target.files[0])\r\n        setImgIsVisible(true)\r\n    }\r\n\r\n    const handleRemoveImg = () => {\r\n        setDataFile(null)\r\n        setImgIsVisible(false)\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-publi-container\">\r\n            {transitionContentOpacity.map(({item, key, props}) => item && (\r\n                <animated.div key={key} style={props} className=\"new-publi-opacity\"></animated.div>\r\n            ))}\r\n            {transitionContent.map(({item, key, props}) => item && (\r\n                <animated.div key={key} style={props} className={themeReducer ? \"new-publi-content-dark\" : \"new-publi-content\"}>\r\n                <button className={themeReducer ? \"new-publi-icon-btn-dark\" : \"new-publi-icon-btn\"} onClick={handleClosePublication}>\r\n                    <FontAwesomeIcon icon=\"times-circle\" className=\"new-publi-close-icon\"/>\r\n                </button>\r\n                {alertMsg === \"\" \r\n                ?   null \r\n                :   <div className={alertCss ? \"alert-danger\" : \"alert-success\"}>\r\n                        <p>{alertMsg}</p>\r\n                    </div>\r\n                }\r\n                <form className=\"new-publi-form\" onSubmit={e => handleSubmit(e)}>          \r\n                        {imgIsVisisble \r\n                        ? <div className=\"new-publi-img-box\">\r\n                            <button className=\"new-publi-icon-btn-img\" onClick={handleRemoveImg}>\r\n                                <FontAwesomeIcon icon=\"times-circle\" className=\"new-publi-close-icon-img\"/>\r\n                            </button>\r\n                            <img src={imgVisible} alt=\"Your publication frame\" className=\"new-publi-img\"/>\r\n                        </div>\r\n                        : null} \r\n                    <div className={themeReducer ? \"new-publi-box-dark\" : \"new-publi-box\"}>\r\n                        <FontAwesomeIcon className={themeReducer ? \"icon-new-publi-dark\" : \"icon-new-publi\"} icon=\"comments\" />\r\n                        <textarea name=\"text\" className={themeReducer ? \"new-publi-textarea textarea-dark\" : \"new-publi-textarea\"} placeholder=\"What do you mean ?\" onChange={e => handleChange(e)}></textarea>\r\n                    </div>\r\n                    <div className=\"bottom-new-publi\">\r\n                        <button className=\"new-publi-btn-noVisible\" type=\"button\"><FontAwesomeIcon icon=\"image\" className=\"icon-write-new-publi\" onClick={handleClickFile}/></button>\r\n                        <input type=\"file\" name=\"newPubliFile\" id=\"newPubliFile\" style={{display: \"none\"}} ref={openFile} onChange={e => handleChangeFile(e)} />\r\n                        <button className=\"new-publi-btn-noVisible icon-write-new-publi-gif\" type=\"button\">GIF</button>\r\n                    </div>\r\n                    <div className={themeReducer ? \"new-publi-hashtag-box-dark\" : \"new-publi-hashtag-box\"}>\r\n                        <div className=\"new-publi-hashtag-txt-box\">\r\n                            {data.hashtag.map((item, index) => {\r\n                                return (\r\n                                    <p key={index} className={themeReducer ? \"new-publi-hashtag-txt-dark\" : \"new-publi-hashtag-txt\" }>{item}</p>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <input className={themeReducer ? \"new-publi-input-hashtag-dark\" : \"new-publi-input-hashtag\"} ref={hashtagValue} name=\"hashtag\" type=\"text\" placeholder=\"#...\" onChange={e => setNewHashtag(e.target.value)}/>\r\n                        <button type=\"button\" className={themeReducer ? \"new-publi-hashtag-btn-dark\" : \"new-publi-hashtag-btn\"} onClick={() => handleChangeHashtag()}>ADD</button>\r\n                    </div>\r\n                    <button className={themeReducer ? \"new-publi-btn-dark\" : \"new-publi-btn\"}>PUBLISH</button>\r\n                </form>\r\n            </animated.div>\r\n            ))}   \r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationComments.js",["228"],"import React, {useState, useEffect} from 'react'\r\nimport {useSelector} from \"react-redux\"\r\nimport \"../../Styles/publication.css\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\nimport PublicationCard from \"./PublicationCard\"\r\nimport moment from \"moment\"\r\nimport Loader from \"../Services/Loader\"\r\nimport axios from \"axios\"\r\nimport {useTransition, animated, config} from \"react-spring\"\r\n\r\nexport default function PublicationComments({close, data}) {\r\n\r\n    const themeReducer = useSelector(state => state.Theme)\r\n    const [load, setLoad] = useState(false)\r\n    const [alertMsg, setAlertMsg] = useState(\"\")\r\n    const [alertCss, setAletCss] = useState(true)\r\n    const userDataReducer = useSelector(state => state.UserData)\r\n    const [dataComments, setDataComments] = useState([])\r\n    const [isAnimated, setIsAnimated] = useState(true)\r\n    const transition = useTransition(isAnimated, null, {\r\n        from: {opacity: 0, transform: \"scale(0)\", position: 'absolute'},\r\n        enter: {opacity: 1, transform: \"scale(1)\"},\r\n        leave: {opacity: 0, transform: \"scale(0)\"},\r\n        config: config.stiff\r\n    })\r\n    const [dataNewPubli, setDataNewPubli] = useState({\r\n        userId: userDataReducer.userId,\r\n        text: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        setLoad(false)\r\n        const fetchData = async () => {\r\n            await axios.get(`http://localhost:3001/api/publications/comments/${data.publicationId}`)\r\n                .then(res => {\r\n                    setDataComments(res.data)\r\n                })\r\n                .catch(err => console.log(err))\r\n            setLoad(true)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (dataNewPubli.text.length > 2) {\r\n            axios.post(`http://localhost:3001/api/publications/comments/add/${data.publicationId}`, dataNewPubli)\r\n                .then(res => {\r\n                    setAletCss(false)\r\n                    setAlertMsg(\"Comment published !\")\r\n                })  \r\n                .catch(err => console.log(err))  \r\n        } else {\r\n            setAletCss(true)\r\n            setAlertMsg(\"Your text must contain at least 2 characters !\")\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setDataNewPubli({...dataNewPubli, [e.target.name]: e.target.value})\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        setIsAnimated(!isAnimated)\r\n        setTimeout(() => {\r\n            close()\r\n        }, 200)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {transition.map(({item, key, props}) => item && (\r\n                <animated.div key={key} style={props} className={themeReducer ? \"publi-open-dark\" : \"publi-open\"}>\r\n                    <div className=\"publi-icon\">\r\n                        <FontAwesomeIcon icon=\"times-circle\" className=\"publi-icon-close\" onClick={() => handleClose()} />\r\n                    </div>\r\n                    <div className=\"publi-open-bottom-container\">\r\n                        <div className=\"publi-open-top\">\r\n                            <PublicationCard data={data} noClick={true} />\r\n                        </div>\r\n\r\n                        <div style={{position: \"relative\"}}>\r\n                            {load \r\n                            ? dataComments.map((item, index) => {\r\n                                return (\r\n                                    <div className={themeReducer ? \"publi-open-bottom-dark\" : \"publi-open-bottom\"} key={index}>\r\n                                        <div className=\"publi-open-info-img-box\">\r\n                                            <div className=\"publi-open-img\">\r\n                                                <img src={item.profileImageUrl} alt=\"Frame profile\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"publi-open-info-txt-box\">\r\n                                            <div className=\"publi-open-name\">\r\n                                                <p className={themeReducer ? 'txt-dark' : null}>{item.firstName} {item.lastName}</p>\r\n                                                <small className={themeReducer ? 'txt-dark' : null}>{moment(item.date).fromNow()}</small>\r\n                                            </div>\r\n                                            <div className=\"publi-open-info\">\r\n                                                <p className={themeReducer ? \"publi-open-txt txt-dark\" : \"publi-open-txt\"}>{item.text}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            : <Loader />\r\n                            }    \r\n                        </div>  \r\n\r\n                        <div className=\"new-publi\">\r\n                            {alertMsg === \"\" \r\n                            ?   null \r\n                            :   <div className={alertCss ? \"alert-danger\" : \"alert-success\"}>\r\n                                    <p>{alertMsg}</p>\r\n                                </div>\r\n                            }\r\n                            <form className=\"write-publi\" onSubmit={e => handleSubmit(e)}>\r\n                                <FontAwesomeIcon className={themeReducer ? \"icon-new-publi txt-dark\" : \"icon-new-publi\"} icon=\"comments\" />\r\n                                <div className=\"input-new-publi\" type=\"text\">\r\n                                    <textarea className={themeReducer ? \"publi-open-textarea input-dark border-none-dark\" : \"publi-open-textarea\"} placeholder=\"What do you mean ?\" name=\"text\" id=\"text\" onChange={e => handleChange(e)}></textarea>\r\n                                </div>\r\n                                <button className={themeReducer ? \"publi-open-btn btn-dark\" : \"publi-open-btn\"} type=\"submit\">SEND</button>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n                </animated.div>\r\n            ))}\r\n    </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Index.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\MainGaming.js",["229"],"import React, {useState, useEffect} from 'react'\r\nimport \"../../Styles/gaming.css\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport {apiTwitch} from \"../../Api\"\r\nimport StreamCard from \"./StreamCard\"\r\nimport PublicationCardLoader from \"../Publication/PublicationCardLoader\"\r\n\r\nexport default function MainGaming() {\r\n\r\n    const dispatch = useDispatch()\r\n    const [streams, setStreams] = useState([])\r\n    const [getApi, setGetApi] = useState([])\r\n    const [load, setLoad] = useState(false)\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    // Take all informations for modify each url with good params\r\n    useEffect(() => {\r\n\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n\r\n        const fetchData = async () => {\r\n            const res = await apiTwitch.get('https://api.twitch.tv/helix/streams?first=100')\r\n            let dataArray = res.data.data\r\n            setGetApi(dataArray)\r\n\r\n            let gameIDs = dataArray.map(stream => {\r\n                return stream.game_id\r\n            })\r\n\r\n            let userIDs = dataArray.map(stream => {\r\n                return stream.user_id\r\n            })\r\n\r\n            // Create URL\r\n            let urlGames = \"https://api.twitch.tv/helix/games?\"\r\n            let urlUsers = \"https://api.twitch.tv/helix/users?\"\r\n\r\n            let queryParamsGame = \"\"\r\n            let queryParamsUser = \"\"\r\n\r\n            gameIDs.map(id => {\r\n                return (queryParamsGame = queryParamsGame + `id=${id}&`)\r\n            })\r\n\r\n            userIDs.map(id => {\r\n                return (queryParamsUser = queryParamsUser + `id=${id}&`)\r\n            })\r\n\r\n            let urlFinalGames = urlGames + queryParamsGame\r\n            let urlFinalUsers = urlUsers + queryParamsUser\r\n\r\n            // Call URL\r\n            let gamesCall = await apiTwitch.get(urlFinalGames)\r\n            let usersCall = await apiTwitch.get(urlFinalUsers)\r\n\r\n            let gamesCallArray = gamesCall.data.data\r\n            let usersCallArray = usersCall.data.data\r\n\r\n            let newUrl = \"\"\r\n\r\n            // Array Final\r\n            let finalArray = dataArray.map(stream => {\r\n                stream.gameName = \"\"\r\n                stream.login = \"\"\r\n                stream.channelImg = \"\"\r\n\r\n                newUrl = stream.thumbnail_url\r\n                .replace('{width}', '480')\r\n                .replace('{height}', '270')\r\n\r\n                stream.streamImg = newUrl\r\n\r\n                gamesCallArray.forEach(name => {\r\n                    usersCallArray.forEach(user => {\r\n                        if (stream.user_id === user.id && stream.game_id === name.id) {\r\n                            stream.gameName = name.name\r\n                            stream.channelImg = user.profile_image_url\r\n                            stream.login = user.login\r\n                        }\r\n                    })\r\n                })\r\n\r\n                return stream\r\n            })\r\n            setStreams(finalArray)\r\n            setLoad(true)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    const handleLanguage = choice => {\r\n        let newDataArray = [];\r\n\r\n        //Sort by lang\r\n        if (choice !== \"all\") {\r\n            for (let i = 0; i < getApi.length; i++) {\r\n                if (getApi[i].language === choice) {\r\n                    newDataArray.push(getApi[i])\r\n                }\r\n            }\r\n        } else return setStreams(getApi)\r\n\r\n        return setStreams(newDataArray)\r\n    }\r\n    \r\n    return (\r\n        <div className={themeReducer ? \"mainGaming-dark\" : \"mainGaming\"}>\r\n\r\n            <div className=\"gaming-lang\">\r\n                <div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"all\")}>\r\n                    <p>ALL</p>\r\n                </div>\r\n                <div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"en\")}>\r\n                    <p>EN</p>\r\n                </div><div className={themeReducer ? \"gaming-lang-box-dark\" : \"gaming-lang-box\"} onClick={() => handleLanguage(\"fr\")}>\r\n                    <p>FR</p>\r\n                </div>\r\n            </div>\r\n            {load \r\n            ? streams.map((stream, index) => {\r\n                return (\r\n                    <StreamCard \r\n                        login={stream.login}\r\n                        name={stream.user_name}\r\n                        channelImg={stream.channelImg} \r\n                        streamImg={stream.streamImg}\r\n                        viewerCount={stream.viewer_count}\r\n                        gamePlay={stream.gameName} \r\n                        key={index} \r\n                    />\r\n                )\r\n            })  \r\n            : <div className=\"streamCardLoader\">\r\n                <PublicationCardLoader />\r\n                <PublicationCardLoader />\r\n                <PublicationCardLoader />\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Api.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\StreamCard.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Gaming\\Live.js",["230"],"import React, {useEffect} from 'react'\r\nimport \"../../Styles/gaming.css\"\r\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\"\r\nimport {Link, useParams} from \"react-router-dom\"\r\nimport {useSelector, useDispatch} from \"react-redux\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"../../Assets/fontawesome\"\r\n\r\nexport default function Live() {\r\n\r\n    let {slug} = useParams()\r\n    const dispatch = useDispatch()\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: false\r\n          })\r\n    }, [])\r\n\r\n    return (\r\n        <section className=\"gaming\">\r\n            <div className={themeReducer? \"mainLive-dark\" : \"mainLive\"}>\r\n                <div className=\"live-stream\">\r\n                    <ReactTwitchEmbedVideo \r\n                        width=\"100%\" \r\n                        height=\"100%\" \r\n                        channel={slug} \r\n                        theme={themeReducer? \"dark\" : \"light\"} \r\n                    />\r\n                </div>\r\n                <div className=\"live-back\">\r\n                    <Link to=\"/gaming\">\r\n                        <FontAwesomeIcon className={themeReducer? \"chevron-icon-dark\" : \"chevron-icon\"} icon=\"chevron-left\" />\r\n                    </Link>\r\n                </div>                \r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Login.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\PasswordForget.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Connexion\\Signup.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Loader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Services\\Error.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\userDataReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\modifyAccount.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\ModifyAccount.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\AccountLoader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationCardLoader.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Account\\RemoveFriend.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Publication\\PublicationDelete.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Reducer\\zIndexReducer.js",[],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Tchat\\tchatEmpty.js",["231","232","233","234"],"import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\n\r\nexport default function tchatEmpty() {\r\n\r\n    const dispatch = useDispatch();\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: true\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={themeReducer ? \"tchatEmpty-dark\" : \"tchatEmpty\"}>\r\n            <p>Click on a friend</p>\r\n        </div>\r\n    )\r\n}\r\n",["235","236"],"D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\Tchat\\TchatEmpty.js",["237"],"import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\n\r\nexport default function TchatEmpty() {\r\n\r\n    const dispatch = useDispatch();\r\n    const themeReducer = useSelector(state => state.Theme)\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: \"CHANGE_ZINDEX\",\r\n            payload: true\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={themeReducer ? \"tchatEmpty-dark\" : \"tchatEmpty\"}>\r\n            <p>Click on a friend</p>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Web\\Ecole\\TFE\\Application\\social-network-app\\client\\src\\Components\\TchatDiv\\Message.js",[],{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"238","replacedBy":"242"},{"ruleId":"240","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":69,"column":6,"nodeType":"246","endLine":69,"endColumn":8,"suggestions":"247"},{"ruleId":"248","severity":1,"message":"249","line":5,"column":8,"nodeType":"250","messageId":"251","endLine":5,"endColumn":16},{"ruleId":"248","severity":1,"message":"252","line":9,"column":23,"nodeType":"250","messageId":"251","endLine":9,"endColumn":35},{"ruleId":"253","severity":1,"message":"254","line":11,"column":25,"nodeType":"255","endLine":11,"endColumn":74},{"ruleId":"244","severity":1,"message":"256","line":40,"column":8,"nodeType":"246","endLine":40,"endColumn":10,"suggestions":"257"},{"ruleId":"244","severity":1,"message":"258","line":38,"column":8,"nodeType":"246","endLine":38,"endColumn":10,"suggestions":"259"},{"ruleId":"244","severity":1,"message":"260","line":73,"column":8,"nodeType":"246","endLine":73,"endColumn":16,"suggestions":"261"},{"ruleId":"248","severity":1,"message":"262","line":1,"column":16,"nodeType":"250","messageId":"251","endLine":1,"endColumn":24},{"ruleId":"263","severity":1,"message":"264","line":18,"column":29,"nodeType":"265","messageId":"266","endLine":18,"endColumn":31},{"ruleId":"244","severity":1,"message":"267","line":22,"column":8,"nodeType":"246","endLine":22,"endColumn":10,"suggestions":"268"},{"ruleId":"244","severity":1,"message":"269","line":74,"column":8,"nodeType":"246","endLine":74,"endColumn":18,"suggestions":"270"},{"ruleId":"244","severity":1,"message":"271","line":52,"column":12,"nodeType":"246","endLine":52,"endColumn":14,"suggestions":"272"},{"ruleId":"248","severity":1,"message":"273","line":6,"column":9,"nodeType":"250","messageId":"251","endLine":6,"endColumn":13},{"ruleId":"244","severity":1,"message":"274","line":43,"column":8,"nodeType":"246","endLine":43,"endColumn":10,"suggestions":"275"},{"ruleId":"244","severity":1,"message":"258","line":92,"column":8,"nodeType":"246","endLine":92,"endColumn":10,"suggestions":"276"},{"ruleId":"244","severity":1,"message":"258","line":20,"column":8,"nodeType":"246","endLine":20,"endColumn":10,"suggestions":"277"},{"ruleId":"278","severity":2,"message":"279","line":6,"column":22,"nodeType":"250","endLine":6,"endColumn":33},{"ruleId":"278","severity":2,"message":"280","line":7,"column":26,"nodeType":"250","endLine":7,"endColumn":37},{"ruleId":"278","severity":2,"message":"281","line":9,"column":5,"nodeType":"250","endLine":9,"endColumn":14},{"ruleId":"244","severity":1,"message":"258","line":14,"column":8,"nodeType":"246","endLine":14,"endColumn":10,"suggestions":"282"},{"ruleId":"238","replacedBy":"283"},{"ruleId":"240","replacedBy":"284"},{"ruleId":"244","severity":1,"message":"258","line":14,"column":8,"nodeType":"246","endLine":14,"endColumn":10,"suggestions":"285"},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],["286"],["287"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authCookie' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["288"],"no-unused-vars","'UserCard' is defined but never used.","Identifier","unusedVar","'setUsersCard' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'handleOpenTchat' and 'userDataReducer.userId'. Either include them or remove the dependency array.",["289"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["290"],"React Hook useEffect has missing dependencies: 'dispatch', 'fetchRoomId', 'index', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["291"],"'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'history.location.state' and 'slug'. Either include them or remove the dependency array.",["292"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'slug', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["293"],"React Hook useEffect has missing dependencies: 'data.hashtag', 'data.publicationId', and 'userDataReducer.userId'. Either include them or remove the dependency array.",["294"],"'Gifs' is defined but never used.","React Hook useEffect has a missing dependency: 'data.publicationId'. Either include it or remove the dependency array.",["295"],["296"],["297"],"react-hooks/rules-of-hooks","React Hook \"useDispatch\" is called in function \"tchatEmpty\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useSelector\" is called in function \"tchatEmpty\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useEffect\" is called in function \"tchatEmpty\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.",["298"],["286"],["287"],["299"],"no-global-assign","no-unsafe-negation",{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"304","fix":"316"},{"desc":"304","fix":"317"},{"desc":"304","fix":"318"},{"desc":"304","fix":"319"},"Update the dependencies array to be: [authCookie, dispatch]",{"range":"320","text":"321"},"Update the dependencies array to be: [handleOpenTchat, userDataReducer.userId]",{"range":"322","text":"323"},"Update the dependencies array to be: [dispatch]",{"range":"324","text":"325"},"Update the dependencies array to be: [dispatch, fetchRoomId, index, roomId, userDataReducer.userId]",{"range":"326","text":"327"},"Update the dependencies array to be: [history.location.state, slug]",{"range":"328","text":"329"},"Update the dependencies array to be: [dispatch, history, location, slug, userDataReducer.userId]",{"range":"330","text":"331"},"Update the dependencies array to be: [data.hashtag, data.publicationId, userDataReducer.userId]",{"range":"332","text":"333"},"Update the dependencies array to be: [data.publicationId]",{"range":"334","text":"335"},{"range":"336","text":"325"},{"range":"337","text":"325"},{"range":"338","text":"325"},{"range":"339","text":"325"},[2707,2709],"[authCookie, dispatch]",[1804,1806],"[handleOpenTchat, userDataReducer.userId]",[1443,1445],"[dispatch]",[2557,2565],"[dispatch, fetchRoomId, index, roomId, userDataReducer.userId]",[654,656],"[history.location.state, slug]",[3061,3071],"[dispatch, history, location, slug, userDataReducer.userId]",[2253,2255],"[data.hashtag, data.publicationId, userDataReducer.userId]",[1696,1698],"[data.publicationId]",[3081,3083],[635,637],[362,364],[362,364]]